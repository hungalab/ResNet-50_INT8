// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module average_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        output_V_address1,
        output_V_ce1,
        output_V_we1,
        output_V_d1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp2_stage0 = 8'd64;
parameter    ap_ST_fsm_state33 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_V_address0;
output   input_V_ce0;
input  [287:0] input_V_q0;
output  [3:0] output_V_address1;
output   output_V_ce1;
output  [127:0] output_V_we1;
output  [1023:0] output_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg output_V_ce1;
reg[127:0] output_V_we1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [22:0] mask_table1_q0;
wire   [4:0] one_half_table2_address0;
reg    one_half_table2_ce0;
wire   [23:0] one_half_table2_q0;
reg   [11:0] indvar_flatten25_reg_582;
reg   [6:0] so_0_reg_593;
reg   [5:0] soo_0_reg_604;
wire   [6:0] co_fu_632_p2;
wire    ap_CS_fsm_state2;
wire   [11:0] add_ln241_fu_743_p2;
reg   [11:0] add_ln241_reg_2677;
wire    ap_CS_fsm_state4;
wire   [2:0] select_ln241_3_fu_893_p3;
reg   [2:0] select_ln241_3_reg_2682;
wire   [0:0] icmp_ln241_fu_737_p2;
wire   [6:0] select_ln247_2_fu_913_p3;
reg   [6:0] select_ln247_2_reg_2687;
wire   [2:0] select_ln242_fu_941_p3;
reg   [2:0] select_ln242_reg_2692;
reg   [5:0] buf_V_addr_1_reg_2702;
wire   [9:0] select_ln242_1_fu_989_p3;
reg   [9:0] select_ln242_1_reg_2707;
wire   [6:0] to_fu_2014_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln253_fu_2019_p2;
reg   [0:0] icmp_ln253_reg_2717;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state7_pp2_stage0_iter0;
wire    ap_block_state8_pp2_stage0_iter1;
wire    ap_block_state9_pp2_stage0_iter2;
wire    ap_block_state10_pp2_stage0_iter3;
wire    ap_block_state11_pp2_stage0_iter4;
wire    ap_block_state12_pp2_stage0_iter5;
wire    ap_block_state13_pp2_stage0_iter6;
wire    ap_block_state14_pp2_stage0_iter7;
wire    ap_block_state15_pp2_stage0_iter8;
wire    ap_block_state16_pp2_stage0_iter9;
wire    ap_block_state17_pp2_stage0_iter10;
wire    ap_block_state18_pp2_stage0_iter11;
wire    ap_block_state19_pp2_stage0_iter12;
wire    ap_block_state20_pp2_stage0_iter13;
wire    ap_block_state21_pp2_stage0_iter14;
wire    ap_block_state22_pp2_stage0_iter15;
wire    ap_block_state23_pp2_stage0_iter16;
wire    ap_block_state24_pp2_stage0_iter17;
wire    ap_block_state25_pp2_stage0_iter18;
wire    ap_block_state26_pp2_stage0_iter19;
wire    ap_block_state27_pp2_stage0_iter20;
wire    ap_block_state28_pp2_stage0_iter21;
wire    ap_block_state29_pp2_stage0_iter22;
wire    ap_block_state30_pp2_stage0_iter23;
wire    ap_block_state31_pp2_stage0_iter24;
wire    ap_block_state32_pp2_stage0_iter25;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter1_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter2_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter3_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter4_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter5_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter6_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter7_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter8_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter9_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter10_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter11_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter12_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter13_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter14_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter15_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter16_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter17_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter18_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter19_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter20_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter21_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter22_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter23_reg;
reg   [0:0] icmp_ln253_reg_2717_pp2_iter24_reg;
wire   [11:0] add_ln253_fu_2025_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] select_ln253_fu_2037_p3;
reg   [5:0] select_ln253_reg_2726;
wire   [6:0] select_ln253_1_fu_2051_p3;
reg   [6:0] select_ln253_1_reg_2731;
wire   [4:0] empty_86_fu_2080_p1;
reg   [4:0] empty_86_reg_2742;
reg   [3:0] lshr_ln_reg_2748;
reg   [3:0] lshr_ln_reg_2748_pp2_iter1_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter2_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter3_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter4_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter5_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter6_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter7_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter8_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter9_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter10_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter11_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter12_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter13_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter14_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter15_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter16_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter17_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter18_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter19_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter20_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter21_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter22_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter23_reg;
reg   [3:0] lshr_ln_reg_2748_pp2_iter24_reg;
wire   [5:0] soo_fu_2100_p2;
wire   [6:0] add_ln321_1_fu_2157_p2;
reg   [6:0] add_ln321_1_reg_2763;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter2_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter3_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter4_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter5_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter6_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter7_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter8_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter9_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter10_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter11_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter12_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter13_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter14_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter15_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter16_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter17_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter18_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter19_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter20_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter21_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter22_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter23_reg;
reg   [6:0] add_ln321_1_reg_2763_pp2_iter24_reg;
wire   [63:0] grp_fu_623_p1;
reg   [63:0] tmp_reg_2769;
wire   [63:0] grp_fu_618_p2;
reg   [63:0] tmp_s_reg_2774;
wire   [31:0] grp_fu_615_p1;
reg   [31:0] x_assign_reg_2779;
wire   [31:0] t_V_3_fu_2163_p1;
reg   [31:0] t_V_3_reg_2784;
wire   [0:0] icmp_ln849_fu_2177_p2;
reg   [0:0] icmp_ln849_reg_2790;
wire   [0:0] icmp_ln849_2_fu_2183_p2;
reg   [0:0] icmp_ln849_2_reg_2796;
wire   [31:0] select_ln849_2_fu_2284_p3;
reg   [31:0] select_ln849_2_reg_2811;
wire    ap_CS_fsm_state6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state7;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg   [5:0] buf_V_address0;
reg    buf_V_ce0;
reg    buf_V_we0;
reg   [767:0] buf_V_d0;
wire   [767:0] buf_V_q0;
reg   [6:0] co_0_reg_516;
wire   [0:0] icmp_ln233_fu_626_p2;
reg   [11:0] indvar_flatten17_reg_527;
wire    ap_CS_fsm_state3;
reg   [2:0] row_0_reg_538;
reg   [9:0] indvar_flatten_reg_549;
reg   [2:0] col_0_reg_560;
reg   [6:0] to_0_reg_571;
reg   [6:0] ap_phi_mux_so_0_phi_fu_597_p4;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln237_fu_638_p1;
wire   [63:0] zext_ln247_2_fu_978_p1;
wire   [63:0] zext_ln247_1_fu_953_p1;
wire   [63:0] zext_ln253_fu_2071_p1;
wire   [63:0] zext_ln498_fu_2199_p1;
wire   [63:0] zext_ln321_fu_2524_p1;
wire   [767:0] tmp_393_fu_1945_p33;
wire   [127:0] shl_ln321_2_fu_2659_p2;
wire  signed [31:0] grp_fu_623_p0;
wire   [16:0] shl_ln_fu_643_p3;
wire   [13:0] shl_ln247_1_fu_655_p3;
wire   [17:0] zext_ln247_fu_651_p1;
wire   [17:0] zext_ln247_3_fu_663_p1;
wire   [17:0] sub_ln247_fu_667_p2;
wire   [17:0] sub_ln247_1_fu_681_p2;
wire   [12:0] tmp_1381_fu_687_p4;
wire   [13:0] zext_ln247_4_fu_697_p1;
wire   [12:0] tmp_1382_fu_707_p4;
wire   [0:0] tmp_552_fu_673_p3;
wire   [13:0] sub_ln247_2_fu_701_p2;
wire   [13:0] zext_ln247_6_fu_717_p1;
wire   [0:0] icmp_ln242_fu_749_p2;
wire   [2:0] add_ln241_1_fu_763_p2;
wire   [16:0] shl_ln247_mid1_fu_769_p3;
wire   [13:0] shl_ln247_1_mid1_fu_781_p3;
wire   [17:0] zext_ln247_7_fu_777_p1;
wire   [17:0] zext_ln247_8_fu_789_p1;
wire   [17:0] sub_ln247_3_fu_793_p2;
wire   [17:0] sub_ln247_4_fu_807_p2;
wire   [12:0] tmp_1383_fu_813_p4;
wire   [13:0] zext_ln247_9_fu_823_p1;
wire   [12:0] tmp_1384_fu_833_p4;
wire   [0:0] tmp_553_fu_799_p3;
wire   [13:0] sub_ln247_5_fu_827_p2;
wire   [13:0] zext_ln247_10_fu_843_p1;
wire   [13:0] select_ln247_1_fu_847_p3;
wire   [13:0] select_ln247_fu_721_p3;
wire   [13:0] select_ln241_1_fu_855_p3;
wire   [8:0] shl_ln247_2_fu_729_p3;
wire   [0:0] icmp_ln243_fu_881_p2;
wire   [0:0] xor_ln241_fu_875_p2;
wire   [2:0] select_ln241_fu_755_p3;
wire   [0:0] and_ln241_fu_887_p2;
wire   [0:0] or_ln247_fu_907_p2;
wire   [2:0] col_fu_901_p2;
wire   [8:0] shl_ln247_2_mid1_fu_921_p3;
wire   [8:0] select_ln241_2_fu_867_p3;
wire   [8:0] select_ln247_3_fu_929_p3;
wire   [9:0] zext_ln247_11_fu_937_p1;
wire   [9:0] zext_ln243_fu_949_p1;
wire   [9:0] add_ln247_fu_958_p2;
wire   [14:0] zext_ln247_5_fu_964_p1;
wire  signed [14:0] sext_ln241_fu_863_p1;
wire   [14:0] add_ln247_1_fu_968_p2;
wire  signed [31:0] sext_ln247_fu_974_p1;
wire   [9:0] add_ln242_1_fu_983_p2;
wire   [7:0] trunc_ln214_fu_997_p1;
wire   [23:0] trunc_ln700_fu_1005_p1;
wire   [23:0] zext_ln700_fu_1001_p1;
wire   [7:0] trunc_ln214_1_fu_1015_p4;
wire   [23:0] tmp_362_fu_1029_p4;
wire   [23:0] zext_ln700_1_fu_1025_p1;
wire   [7:0] trunc_ln214_2_fu_1045_p4;
wire   [23:0] tmp_363_fu_1059_p4;
wire   [23:0] zext_ln700_2_fu_1055_p1;
wire   [7:0] trunc_ln214_3_fu_1075_p4;
wire   [23:0] tmp_364_fu_1089_p4;
wire   [23:0] zext_ln700_3_fu_1085_p1;
wire   [7:0] trunc_ln214_4_fu_1105_p4;
wire   [23:0] tmp_365_fu_1119_p4;
wire   [23:0] zext_ln700_4_fu_1115_p1;
wire   [7:0] trunc_ln214_5_fu_1135_p4;
wire   [23:0] tmp_366_fu_1149_p4;
wire   [23:0] zext_ln700_5_fu_1145_p1;
wire   [7:0] trunc_ln214_6_fu_1165_p4;
wire   [23:0] tmp_367_fu_1179_p4;
wire   [23:0] zext_ln700_6_fu_1175_p1;
wire   [7:0] trunc_ln214_7_fu_1195_p4;
wire   [23:0] tmp_368_fu_1209_p4;
wire   [23:0] zext_ln700_7_fu_1205_p1;
wire   [7:0] trunc_ln214_8_fu_1225_p4;
wire   [23:0] tmp_369_fu_1239_p4;
wire   [23:0] zext_ln700_8_fu_1235_p1;
wire   [7:0] trunc_ln214_9_fu_1255_p4;
wire   [23:0] tmp_370_fu_1269_p4;
wire   [23:0] zext_ln700_9_fu_1265_p1;
wire   [7:0] trunc_ln214_s_fu_1285_p4;
wire   [23:0] tmp_371_fu_1299_p4;
wire   [23:0] zext_ln700_10_fu_1295_p1;
wire   [7:0] trunc_ln214_10_fu_1315_p4;
wire   [23:0] tmp_372_fu_1329_p4;
wire   [23:0] zext_ln700_11_fu_1325_p1;
wire   [7:0] trunc_ln214_11_fu_1345_p4;
wire   [23:0] tmp_373_fu_1359_p4;
wire   [23:0] zext_ln700_12_fu_1355_p1;
wire   [7:0] trunc_ln214_12_fu_1375_p4;
wire   [23:0] tmp_374_fu_1389_p4;
wire   [23:0] zext_ln700_13_fu_1385_p1;
wire   [7:0] trunc_ln214_13_fu_1405_p4;
wire   [23:0] tmp_375_fu_1419_p4;
wire   [23:0] zext_ln700_14_fu_1415_p1;
wire   [7:0] trunc_ln214_14_fu_1435_p4;
wire   [23:0] tmp_376_fu_1449_p4;
wire   [23:0] zext_ln700_15_fu_1445_p1;
wire   [7:0] trunc_ln214_15_fu_1465_p4;
wire   [23:0] tmp_377_fu_1479_p4;
wire   [23:0] zext_ln700_16_fu_1475_p1;
wire   [7:0] trunc_ln214_16_fu_1495_p4;
wire   [23:0] tmp_378_fu_1509_p4;
wire   [23:0] zext_ln700_17_fu_1505_p1;
wire   [7:0] trunc_ln214_17_fu_1525_p4;
wire   [23:0] tmp_379_fu_1539_p4;
wire   [23:0] zext_ln700_18_fu_1535_p1;
wire   [7:0] trunc_ln214_18_fu_1555_p4;
wire   [23:0] tmp_380_fu_1569_p4;
wire   [23:0] zext_ln700_19_fu_1565_p1;
wire   [7:0] trunc_ln214_19_fu_1585_p4;
wire   [23:0] tmp_381_fu_1599_p4;
wire   [23:0] zext_ln700_20_fu_1595_p1;
wire   [7:0] trunc_ln214_20_fu_1615_p4;
wire   [23:0] tmp_382_fu_1629_p4;
wire   [23:0] zext_ln700_21_fu_1625_p1;
wire   [7:0] trunc_ln214_21_fu_1645_p4;
wire   [23:0] tmp_383_fu_1659_p4;
wire   [23:0] zext_ln700_22_fu_1655_p1;
wire   [7:0] trunc_ln214_22_fu_1675_p4;
wire   [23:0] tmp_384_fu_1689_p4;
wire   [23:0] zext_ln700_23_fu_1685_p1;
wire   [7:0] trunc_ln214_23_fu_1705_p4;
wire   [23:0] tmp_385_fu_1719_p4;
wire   [23:0] zext_ln700_24_fu_1715_p1;
wire   [7:0] trunc_ln214_24_fu_1735_p4;
wire   [23:0] tmp_386_fu_1749_p4;
wire   [23:0] zext_ln700_25_fu_1745_p1;
wire   [7:0] trunc_ln214_25_fu_1765_p4;
wire   [23:0] tmp_387_fu_1779_p4;
wire   [23:0] zext_ln700_26_fu_1775_p1;
wire   [7:0] trunc_ln214_26_fu_1795_p4;
wire   [23:0] tmp_388_fu_1809_p4;
wire   [23:0] zext_ln700_27_fu_1805_p1;
wire   [7:0] trunc_ln214_27_fu_1825_p4;
wire   [23:0] tmp_389_fu_1839_p4;
wire   [23:0] zext_ln700_28_fu_1835_p1;
wire   [7:0] trunc_ln214_28_fu_1855_p4;
wire   [23:0] tmp_390_fu_1869_p4;
wire   [23:0] zext_ln700_29_fu_1865_p1;
wire   [7:0] trunc_ln214_29_fu_1885_p4;
wire   [23:0] tmp_391_fu_1899_p4;
wire   [23:0] zext_ln700_30_fu_1895_p1;
wire   [7:0] trunc_ln214_30_fu_1915_p4;
wire   [23:0] tmp_392_fu_1929_p4;
wire   [23:0] zext_ln700_31_fu_1925_p1;
wire   [23:0] add_ln700_31_fu_1939_p2;
wire   [23:0] add_ln700_30_fu_1909_p2;
wire   [23:0] add_ln700_29_fu_1879_p2;
wire   [23:0] add_ln700_28_fu_1849_p2;
wire   [23:0] add_ln700_27_fu_1819_p2;
wire   [23:0] add_ln700_26_fu_1789_p2;
wire   [23:0] add_ln700_25_fu_1759_p2;
wire   [23:0] add_ln700_24_fu_1729_p2;
wire   [23:0] add_ln700_23_fu_1699_p2;
wire   [23:0] add_ln700_22_fu_1669_p2;
wire   [23:0] add_ln700_21_fu_1639_p2;
wire   [23:0] add_ln700_20_fu_1609_p2;
wire   [23:0] add_ln700_19_fu_1579_p2;
wire   [23:0] add_ln700_18_fu_1549_p2;
wire   [23:0] add_ln700_17_fu_1519_p2;
wire   [23:0] add_ln700_16_fu_1489_p2;
wire   [23:0] add_ln700_15_fu_1459_p2;
wire   [23:0] add_ln700_14_fu_1429_p2;
wire   [23:0] add_ln700_13_fu_1399_p2;
wire   [23:0] add_ln700_12_fu_1369_p2;
wire   [23:0] add_ln700_11_fu_1339_p2;
wire   [23:0] add_ln700_10_fu_1309_p2;
wire   [23:0] add_ln700_9_fu_1279_p2;
wire   [23:0] add_ln700_8_fu_1249_p2;
wire   [23:0] add_ln700_7_fu_1219_p2;
wire   [23:0] add_ln700_6_fu_1189_p2;
wire   [23:0] add_ln700_5_fu_1159_p2;
wire   [23:0] add_ln700_4_fu_1129_p2;
wire   [23:0] add_ln700_3_fu_1099_p2;
wire   [23:0] add_ln700_2_fu_1069_p2;
wire   [23:0] add_ln700_1_fu_1039_p2;
wire   [23:0] add_ln700_fu_1009_p2;
wire   [0:0] icmp_ln254_fu_2031_p2;
wire   [6:0] add_ln253_1_fu_2045_p2;
wire   [5:0] trunc_ln253_fu_2059_p1;
wire   [10:0] shl_ln256_mid2_fu_2063_p3;
wire   [10:0] zext_ln544_fu_2076_p1;
wire   [10:0] add_ln321_fu_2084_p2;
wire   [7:0] p_shl2_fu_2118_p3;
wire   [9:0] p_shl_fu_2111_p3;
wire   [9:0] zext_ln544_1_fu_2125_p1;
wire   [9:0] sub_ln544_fu_2129_p2;
wire   [767:0] zext_ln544_2_fu_2135_p1;
wire   [767:0] lshr_ln544_fu_2139_p2;
wire   [23:0] trunc_ln544_fu_2145_p1;
wire   [6:0] shl_ln253_fu_2106_p2;
wire   [6:0] zext_ln321_2_fu_2154_p1;
wire   [7:0] tmp_V_fu_2167_p4;
wire   [4:0] index_V_fu_2189_p4;
wire   [0:0] p_Result_27_fu_2205_p3;
wire   [31:0] zext_ln209_fu_2220_p1;
wire   [31:0] p_Val2_s_fu_2224_p2;
wire   [22:0] tmp_V_2_fu_2229_p1;
wire   [22:0] xor_ln1309_fu_2233_p2;
wire   [8:0] tmp_1385_fu_2245_p4;
wire   [22:0] xs_sig_V_fu_2239_p2;
wire   [31:0] p_Result_28_fu_2212_p3;
wire   [31:0] p_Result_29_fu_2255_p3;
wire   [31:0] select_ln849_fu_2263_p3;
wire   [0:0] xor_ln849_fu_2274_p2;
wire   [0:0] and_ln849_fu_2279_p2;
wire   [31:0] bitcast_ln849_fu_2270_p1;
wire   [31:0] reg_V_fu_2291_p1;
wire   [7:0] p_Result_s_fu_2306_p4;
wire   [22:0] trunc_ln270_fu_2320_p1;
wire   [30:0] trunc_ln262_fu_2294_p1;
wire   [8:0] exp_V_fu_2316_p1;
wire  signed [8:0] sh_amt_fu_2342_p2;
wire   [7:0] trunc_ln294_fu_2370_p1;
wire   [7:0] sub_ln294_fu_2374_p2;
wire   [4:0] tmp_556_fu_2380_p4;
wire   [7:0] trunc_ln283_fu_2324_p1;
wire   [0:0] icmp_ln295_fu_2390_p2;
wire   [7:0] shl_ln297_fu_2396_p2;
wire   [23:0] tmp_394_fu_2328_p3;
wire  signed [23:0] sext_ln281_fu_2348_p1;
wire   [23:0] lshr_ln286_fu_2410_p2;
wire   [0:0] tmp_557_fu_2420_p3;
wire   [0:0] icmp_ln278_fu_2336_p2;
wire   [0:0] icmp_ln282_fu_2352_p2;
wire   [0:0] or_ln282_fu_2436_p2;
wire   [0:0] icmp_ln285_fu_2364_p2;
wire   [0:0] xor_ln282_fu_2442_p2;
wire   [0:0] and_ln285_fu_2448_p2;
wire   [0:0] icmp_ln284_fu_2358_p2;
wire   [0:0] and_ln285_128_fu_2454_p2;
wire   [7:0] trunc_ln286_fu_2416_p1;
wire   [7:0] select_ln288_fu_2428_p3;
wire   [7:0] select_ln285_fu_2460_p3;
wire   [0:0] xor_ln278_fu_2476_p2;
wire   [0:0] and_ln282_fu_2482_p2;
wire   [7:0] select_ln278_fu_2468_p3;
wire   [0:0] or_ln284_fu_2496_p2;
wire   [7:0] select_ln282_fu_2488_p3;
wire   [7:0] select_ln295_fu_2402_p3;
wire   [7:0] select_ln284_fu_2502_p3;
wire   [0:0] p_Result_30_fu_2298_p3;
wire   [7:0] sub_ln461_fu_2510_p2;
wire   [9:0] shl_ln5_fu_2528_p3;
wire   [9:0] empty_87_fu_2535_p2;
wire   [7:0] select_ln303_fu_2516_p3;
wire   [10:0] zext_ln321_3_fu_2547_p1;
wire   [0:0] icmp_ln321_fu_2541_p2;
wire   [10:0] zext_ln321_4_fu_2551_p1;
wire   [10:0] xor_ln321_fu_2559_p2;
wire   [10:0] select_ln321_fu_2565_p3;
wire   [10:0] select_ln321_2_fu_2581_p3;
wire   [10:0] select_ln321_1_fu_2573_p3;
wire   [10:0] xor_ln321_1_fu_2589_p2;
wire   [1023:0] zext_ln321_5_fu_2555_p1;
wire   [1023:0] zext_ln321_6_fu_2595_p1;
wire   [1023:0] shl_ln321_fu_2607_p2;
reg   [1023:0] tmp_558_fu_2613_p4;
wire   [1023:0] zext_ln321_7_fu_2599_p1;
wire   [1023:0] zext_ln321_8_fu_2603_p1;
wire   [1023:0] shl_ln321_1_fu_2631_p2;
wire   [1023:0] lshr_ln321_fu_2637_p2;
wire   [1023:0] select_ln321_3_fu_2623_p3;
wire   [1023:0] and_ln321_fu_2643_p2;
wire   [127:0] zext_ln321_9_fu_2656_p1;
wire    ap_CS_fsm_state33;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
end

roundf_mask_table1 #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

roundf_one_half_table2 #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
one_half_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table2_address0),
    .ce0(one_half_table2_ce0),
    .q0(one_half_table2_q0)
);

average_pool_buf_V #(
    .DataWidth( 768 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_address0),
    .ce0(buf_V_ce0),
    .we0(buf_V_we0),
    .d0(buf_V_d0),
    .q0(buf_V_q0)
);

resnet50_3_fptrunc_64ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
resnet50_3_fptrunc_64ns_32_2_1_U3519(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_2774),
    .ce(1'b1),
    .dout(grp_fu_615_p1)
);

resnet50_3_ddiv_64ns_64ns_64_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
resnet50_3_ddiv_64ns_64ns_64_17_1_U3520(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_2769),
    .din1(64'd4632092954238910464),
    .ce(1'b1),
    .dout(grp_fu_618_p2)
);

resnet50_3_sitodp_32s_64_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
resnet50_3_sitodp_32s_64_4_1_U3521(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_623_p0),
    .ce(1'b1),
    .dout(grp_fu_623_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state7)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter25 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        co_0_reg_516 <= co_fu_632_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        co_0_reg_516 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        col_0_reg_560 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        col_0_reg_560 <= select_ln242_reg_2692;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten17_reg_527 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten17_reg_527 <= add_ln241_reg_2677;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten25_reg_582 <= 12'd0;
    end else if (((icmp_ln253_fu_2019_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten25_reg_582 <= add_ln253_fu_2025_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_549 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten_reg_549 <= select_ln242_1_reg_2707;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        row_0_reg_538 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_0_reg_538 <= select_ln241_3_reg_2682;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        so_0_reg_593 <= 7'd0;
    end else if (((icmp_ln253_reg_2717 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        so_0_reg_593 <= select_ln253_1_reg_2731;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        soo_0_reg_604 <= 6'd0;
    end else if (((icmp_ln253_fu_2019_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        soo_0_reg_604 <= soo_fu_2100_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        to_0_reg_571 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        to_0_reg_571 <= to_fu_2014_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln241_reg_2677 <= add_ln241_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_2717 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln321_1_reg_2763 <= add_ln321_1_fu_2157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        add_ln321_1_reg_2763_pp2_iter10_reg <= add_ln321_1_reg_2763_pp2_iter9_reg;
        add_ln321_1_reg_2763_pp2_iter11_reg <= add_ln321_1_reg_2763_pp2_iter10_reg;
        add_ln321_1_reg_2763_pp2_iter12_reg <= add_ln321_1_reg_2763_pp2_iter11_reg;
        add_ln321_1_reg_2763_pp2_iter13_reg <= add_ln321_1_reg_2763_pp2_iter12_reg;
        add_ln321_1_reg_2763_pp2_iter14_reg <= add_ln321_1_reg_2763_pp2_iter13_reg;
        add_ln321_1_reg_2763_pp2_iter15_reg <= add_ln321_1_reg_2763_pp2_iter14_reg;
        add_ln321_1_reg_2763_pp2_iter16_reg <= add_ln321_1_reg_2763_pp2_iter15_reg;
        add_ln321_1_reg_2763_pp2_iter17_reg <= add_ln321_1_reg_2763_pp2_iter16_reg;
        add_ln321_1_reg_2763_pp2_iter18_reg <= add_ln321_1_reg_2763_pp2_iter17_reg;
        add_ln321_1_reg_2763_pp2_iter19_reg <= add_ln321_1_reg_2763_pp2_iter18_reg;
        add_ln321_1_reg_2763_pp2_iter20_reg <= add_ln321_1_reg_2763_pp2_iter19_reg;
        add_ln321_1_reg_2763_pp2_iter21_reg <= add_ln321_1_reg_2763_pp2_iter20_reg;
        add_ln321_1_reg_2763_pp2_iter22_reg <= add_ln321_1_reg_2763_pp2_iter21_reg;
        add_ln321_1_reg_2763_pp2_iter23_reg <= add_ln321_1_reg_2763_pp2_iter22_reg;
        add_ln321_1_reg_2763_pp2_iter24_reg <= add_ln321_1_reg_2763_pp2_iter23_reg;
        add_ln321_1_reg_2763_pp2_iter2_reg <= add_ln321_1_reg_2763;
        add_ln321_1_reg_2763_pp2_iter3_reg <= add_ln321_1_reg_2763_pp2_iter2_reg;
        add_ln321_1_reg_2763_pp2_iter4_reg <= add_ln321_1_reg_2763_pp2_iter3_reg;
        add_ln321_1_reg_2763_pp2_iter5_reg <= add_ln321_1_reg_2763_pp2_iter4_reg;
        add_ln321_1_reg_2763_pp2_iter6_reg <= add_ln321_1_reg_2763_pp2_iter5_reg;
        add_ln321_1_reg_2763_pp2_iter7_reg <= add_ln321_1_reg_2763_pp2_iter6_reg;
        add_ln321_1_reg_2763_pp2_iter8_reg <= add_ln321_1_reg_2763_pp2_iter7_reg;
        add_ln321_1_reg_2763_pp2_iter9_reg <= add_ln321_1_reg_2763_pp2_iter8_reg;
        icmp_ln253_reg_2717_pp2_iter10_reg <= icmp_ln253_reg_2717_pp2_iter9_reg;
        icmp_ln253_reg_2717_pp2_iter11_reg <= icmp_ln253_reg_2717_pp2_iter10_reg;
        icmp_ln253_reg_2717_pp2_iter12_reg <= icmp_ln253_reg_2717_pp2_iter11_reg;
        icmp_ln253_reg_2717_pp2_iter13_reg <= icmp_ln253_reg_2717_pp2_iter12_reg;
        icmp_ln253_reg_2717_pp2_iter14_reg <= icmp_ln253_reg_2717_pp2_iter13_reg;
        icmp_ln253_reg_2717_pp2_iter15_reg <= icmp_ln253_reg_2717_pp2_iter14_reg;
        icmp_ln253_reg_2717_pp2_iter16_reg <= icmp_ln253_reg_2717_pp2_iter15_reg;
        icmp_ln253_reg_2717_pp2_iter17_reg <= icmp_ln253_reg_2717_pp2_iter16_reg;
        icmp_ln253_reg_2717_pp2_iter18_reg <= icmp_ln253_reg_2717_pp2_iter17_reg;
        icmp_ln253_reg_2717_pp2_iter19_reg <= icmp_ln253_reg_2717_pp2_iter18_reg;
        icmp_ln253_reg_2717_pp2_iter20_reg <= icmp_ln253_reg_2717_pp2_iter19_reg;
        icmp_ln253_reg_2717_pp2_iter21_reg <= icmp_ln253_reg_2717_pp2_iter20_reg;
        icmp_ln253_reg_2717_pp2_iter22_reg <= icmp_ln253_reg_2717_pp2_iter21_reg;
        icmp_ln253_reg_2717_pp2_iter23_reg <= icmp_ln253_reg_2717_pp2_iter22_reg;
        icmp_ln253_reg_2717_pp2_iter24_reg <= icmp_ln253_reg_2717_pp2_iter23_reg;
        icmp_ln253_reg_2717_pp2_iter2_reg <= icmp_ln253_reg_2717_pp2_iter1_reg;
        icmp_ln253_reg_2717_pp2_iter3_reg <= icmp_ln253_reg_2717_pp2_iter2_reg;
        icmp_ln253_reg_2717_pp2_iter4_reg <= icmp_ln253_reg_2717_pp2_iter3_reg;
        icmp_ln253_reg_2717_pp2_iter5_reg <= icmp_ln253_reg_2717_pp2_iter4_reg;
        icmp_ln253_reg_2717_pp2_iter6_reg <= icmp_ln253_reg_2717_pp2_iter5_reg;
        icmp_ln253_reg_2717_pp2_iter7_reg <= icmp_ln253_reg_2717_pp2_iter6_reg;
        icmp_ln253_reg_2717_pp2_iter8_reg <= icmp_ln253_reg_2717_pp2_iter7_reg;
        icmp_ln253_reg_2717_pp2_iter9_reg <= icmp_ln253_reg_2717_pp2_iter8_reg;
        lshr_ln_reg_2748_pp2_iter10_reg <= lshr_ln_reg_2748_pp2_iter9_reg;
        lshr_ln_reg_2748_pp2_iter11_reg <= lshr_ln_reg_2748_pp2_iter10_reg;
        lshr_ln_reg_2748_pp2_iter12_reg <= lshr_ln_reg_2748_pp2_iter11_reg;
        lshr_ln_reg_2748_pp2_iter13_reg <= lshr_ln_reg_2748_pp2_iter12_reg;
        lshr_ln_reg_2748_pp2_iter14_reg <= lshr_ln_reg_2748_pp2_iter13_reg;
        lshr_ln_reg_2748_pp2_iter15_reg <= lshr_ln_reg_2748_pp2_iter14_reg;
        lshr_ln_reg_2748_pp2_iter16_reg <= lshr_ln_reg_2748_pp2_iter15_reg;
        lshr_ln_reg_2748_pp2_iter17_reg <= lshr_ln_reg_2748_pp2_iter16_reg;
        lshr_ln_reg_2748_pp2_iter18_reg <= lshr_ln_reg_2748_pp2_iter17_reg;
        lshr_ln_reg_2748_pp2_iter19_reg <= lshr_ln_reg_2748_pp2_iter18_reg;
        lshr_ln_reg_2748_pp2_iter20_reg <= lshr_ln_reg_2748_pp2_iter19_reg;
        lshr_ln_reg_2748_pp2_iter21_reg <= lshr_ln_reg_2748_pp2_iter20_reg;
        lshr_ln_reg_2748_pp2_iter22_reg <= lshr_ln_reg_2748_pp2_iter21_reg;
        lshr_ln_reg_2748_pp2_iter23_reg <= lshr_ln_reg_2748_pp2_iter22_reg;
        lshr_ln_reg_2748_pp2_iter24_reg <= lshr_ln_reg_2748_pp2_iter23_reg;
        lshr_ln_reg_2748_pp2_iter2_reg <= lshr_ln_reg_2748_pp2_iter1_reg;
        lshr_ln_reg_2748_pp2_iter3_reg <= lshr_ln_reg_2748_pp2_iter2_reg;
        lshr_ln_reg_2748_pp2_iter4_reg <= lshr_ln_reg_2748_pp2_iter3_reg;
        lshr_ln_reg_2748_pp2_iter5_reg <= lshr_ln_reg_2748_pp2_iter4_reg;
        lshr_ln_reg_2748_pp2_iter6_reg <= lshr_ln_reg_2748_pp2_iter5_reg;
        lshr_ln_reg_2748_pp2_iter7_reg <= lshr_ln_reg_2748_pp2_iter6_reg;
        lshr_ln_reg_2748_pp2_iter8_reg <= lshr_ln_reg_2748_pp2_iter7_reg;
        lshr_ln_reg_2748_pp2_iter9_reg <= lshr_ln_reg_2748_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln241_fu_737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_V_addr_1_reg_2702 <= zext_ln247_1_fu_953_p1;
        select_ln241_3_reg_2682 <= select_ln241_3_fu_893_p3;
        select_ln242_1_reg_2707 <= select_ln242_1_fu_989_p3;
        select_ln242_reg_2692 <= select_ln242_fu_941_p3;
        select_ln247_2_reg_2687 <= select_ln247_2_fu_913_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_fu_2019_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        empty_86_reg_2742 <= empty_86_fu_2080_p1;
        lshr_ln_reg_2748 <= {{add_ln321_fu_2084_p2[10:7]}};
        select_ln253_reg_2726 <= select_ln253_fu_2037_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln253_reg_2717 <= icmp_ln253_fu_2019_p2;
        icmp_ln253_reg_2717_pp2_iter1_reg <= icmp_ln253_reg_2717;
        lshr_ln_reg_2748_pp2_iter1_reg <= lshr_ln_reg_2748;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_2717_pp2_iter22_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln849_2_reg_2796 <= icmp_ln849_2_fu_2183_p2;
        icmp_ln849_reg_2790 <= icmp_ln849_fu_2177_p2;
        t_V_3_reg_2784 <= t_V_3_fu_2163_p1;
        x_assign_reg_2779 <= grp_fu_615_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_fu_2019_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln253_1_reg_2731 <= select_ln253_1_fu_2051_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_2717_pp2_iter23_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln849_2_reg_2811 <= select_ln849_2_fu_2284_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_2717_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_reg_2769 <= grp_fu_623_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_2717_pp2_iter20_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_s_reg_2774 <= grp_fu_618_p2;
    end
end

always @ (*) begin
    if ((icmp_ln253_fu_2019_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_2717 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_so_0_phi_fu_597_p4 = select_ln253_1_reg_2731;
    end else begin
        ap_phi_mux_so_0_phi_fu_597_p4 = so_0_reg_593;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_address0 = zext_ln253_fu_2071_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_address0 = buf_V_addr_1_reg_2702;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_V_address0 = zext_ln247_1_fu_953_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_V_address0 = zext_ln237_fu_638_p1;
    end else begin
        buf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_V_d0 = tmp_393_fu_1945_p33;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_V_d0 = 768'd0;
    end else begin
        buf_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln233_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        buf_V_we0 = 1'b1;
    end else begin
        buf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter23 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter23 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        one_half_table2_ce0 = 1'b1;
    end else begin
        one_half_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter25 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        output_V_ce1 = 1'b1;
    end else begin
        output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_2717_pp2_iter24_reg == 1'd0) & (ap_enable_reg_pp2_iter25 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        output_V_we1 = shl_ln321_2_fu_2659_p2;
    end else begin
        output_V_we1 = 128'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln233_fu_626_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln241_fu_737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln253_fu_2019_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter24 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter25 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter24 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter25 == 1'b1)) | ((icmp_ln253_fu_2019_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln241_1_fu_763_p2 = (3'd1 + row_0_reg_538);

assign add_ln241_fu_743_p2 = (indvar_flatten17_reg_527 + 12'd1);

assign add_ln242_1_fu_983_p2 = (10'd1 + indvar_flatten_reg_549);

assign add_ln247_1_fu_968_p2 = ($signed(zext_ln247_5_fu_964_p1) + $signed(sext_ln241_fu_863_p1));

assign add_ln247_fu_958_p2 = (zext_ln247_11_fu_937_p1 + zext_ln243_fu_949_p1);

assign add_ln253_1_fu_2045_p2 = (7'd1 + ap_phi_mux_so_0_phi_fu_597_p4);

assign add_ln253_fu_2025_p2 = (indvar_flatten25_reg_582 + 12'd1);

assign add_ln321_1_fu_2157_p2 = (shl_ln253_fu_2106_p2 + zext_ln321_2_fu_2154_p1);

assign add_ln321_fu_2084_p2 = (shl_ln256_mid2_fu_2063_p3 + zext_ln544_fu_2076_p1);

assign add_ln700_10_fu_1309_p2 = (tmp_371_fu_1299_p4 + zext_ln700_10_fu_1295_p1);

assign add_ln700_11_fu_1339_p2 = (tmp_372_fu_1329_p4 + zext_ln700_11_fu_1325_p1);

assign add_ln700_12_fu_1369_p2 = (tmp_373_fu_1359_p4 + zext_ln700_12_fu_1355_p1);

assign add_ln700_13_fu_1399_p2 = (tmp_374_fu_1389_p4 + zext_ln700_13_fu_1385_p1);

assign add_ln700_14_fu_1429_p2 = (tmp_375_fu_1419_p4 + zext_ln700_14_fu_1415_p1);

assign add_ln700_15_fu_1459_p2 = (tmp_376_fu_1449_p4 + zext_ln700_15_fu_1445_p1);

assign add_ln700_16_fu_1489_p2 = (tmp_377_fu_1479_p4 + zext_ln700_16_fu_1475_p1);

assign add_ln700_17_fu_1519_p2 = (tmp_378_fu_1509_p4 + zext_ln700_17_fu_1505_p1);

assign add_ln700_18_fu_1549_p2 = (tmp_379_fu_1539_p4 + zext_ln700_18_fu_1535_p1);

assign add_ln700_19_fu_1579_p2 = (tmp_380_fu_1569_p4 + zext_ln700_19_fu_1565_p1);

assign add_ln700_1_fu_1039_p2 = (tmp_362_fu_1029_p4 + zext_ln700_1_fu_1025_p1);

assign add_ln700_20_fu_1609_p2 = (tmp_381_fu_1599_p4 + zext_ln700_20_fu_1595_p1);

assign add_ln700_21_fu_1639_p2 = (tmp_382_fu_1629_p4 + zext_ln700_21_fu_1625_p1);

assign add_ln700_22_fu_1669_p2 = (tmp_383_fu_1659_p4 + zext_ln700_22_fu_1655_p1);

assign add_ln700_23_fu_1699_p2 = (tmp_384_fu_1689_p4 + zext_ln700_23_fu_1685_p1);

assign add_ln700_24_fu_1729_p2 = (tmp_385_fu_1719_p4 + zext_ln700_24_fu_1715_p1);

assign add_ln700_25_fu_1759_p2 = (tmp_386_fu_1749_p4 + zext_ln700_25_fu_1745_p1);

assign add_ln700_26_fu_1789_p2 = (tmp_387_fu_1779_p4 + zext_ln700_26_fu_1775_p1);

assign add_ln700_27_fu_1819_p2 = (tmp_388_fu_1809_p4 + zext_ln700_27_fu_1805_p1);

assign add_ln700_28_fu_1849_p2 = (tmp_389_fu_1839_p4 + zext_ln700_28_fu_1835_p1);

assign add_ln700_29_fu_1879_p2 = (tmp_390_fu_1869_p4 + zext_ln700_29_fu_1865_p1);

assign add_ln700_2_fu_1069_p2 = (tmp_363_fu_1059_p4 + zext_ln700_2_fu_1055_p1);

assign add_ln700_30_fu_1909_p2 = (tmp_391_fu_1899_p4 + zext_ln700_30_fu_1895_p1);

assign add_ln700_31_fu_1939_p2 = (tmp_392_fu_1929_p4 + zext_ln700_31_fu_1925_p1);

assign add_ln700_3_fu_1099_p2 = (tmp_364_fu_1089_p4 + zext_ln700_3_fu_1085_p1);

assign add_ln700_4_fu_1129_p2 = (tmp_365_fu_1119_p4 + zext_ln700_4_fu_1115_p1);

assign add_ln700_5_fu_1159_p2 = (tmp_366_fu_1149_p4 + zext_ln700_5_fu_1145_p1);

assign add_ln700_6_fu_1189_p2 = (tmp_367_fu_1179_p4 + zext_ln700_6_fu_1175_p1);

assign add_ln700_7_fu_1219_p2 = (tmp_368_fu_1209_p4 + zext_ln700_7_fu_1205_p1);

assign add_ln700_8_fu_1249_p2 = (tmp_369_fu_1239_p4 + zext_ln700_8_fu_1235_p1);

assign add_ln700_9_fu_1279_p2 = (tmp_370_fu_1269_p4 + zext_ln700_9_fu_1265_p1);

assign add_ln700_fu_1009_p2 = (trunc_ln700_fu_1005_p1 + zext_ln700_fu_1001_p1);

assign and_ln241_fu_887_p2 = (xor_ln241_fu_875_p2 & icmp_ln243_fu_881_p2);

assign and_ln282_fu_2482_p2 = (xor_ln278_fu_2476_p2 & icmp_ln282_fu_2352_p2);

assign and_ln285_128_fu_2454_p2 = (icmp_ln284_fu_2358_p2 & and_ln285_fu_2448_p2);

assign and_ln285_fu_2448_p2 = (xor_ln282_fu_2442_p2 & icmp_ln285_fu_2364_p2);

assign and_ln321_fu_2643_p2 = (shl_ln321_1_fu_2631_p2 & lshr_ln321_fu_2637_p2);

assign and_ln849_fu_2279_p2 = (xor_ln849_fu_2274_p2 & icmp_ln849_2_reg_2796);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign bitcast_ln849_fu_2270_p1 = select_ln849_fu_2263_p3;

assign co_fu_632_p2 = (co_0_reg_516 + 7'd1);

assign col_fu_901_p2 = (3'd1 + select_ln241_fu_755_p3);

assign empty_86_fu_2080_p1 = select_ln253_fu_2037_p3[4:0];

assign empty_87_fu_2535_p2 = (shl_ln5_fu_2528_p3 | 10'd7);

assign exp_V_fu_2316_p1 = p_Result_s_fu_2306_p4;

assign grp_fu_623_p0 = $signed(trunc_ln544_fu_2145_p1);

assign icmp_ln233_fu_626_p2 = ((co_0_reg_516 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_737_p2 = ((indvar_flatten17_reg_527 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_749_p2 = ((indvar_flatten_reg_549 == 10'd448) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_881_p2 = ((to_0_reg_571 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_2019_p2 = ((indvar_flatten25_reg_582 == 12'd2048) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_2031_p2 = ((soo_0_reg_604 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_2336_p2 = ((trunc_ln262_fu_2294_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_2352_p2 = ((p_Result_s_fu_2306_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_2358_p2 = (($signed(sh_amt_fu_2342_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_2364_p2 = (($signed(sh_amt_fu_2342_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_2390_p2 = (($signed(tmp_556_fu_2380_p4) < $signed(5'd1)) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_2541_p2 = ((shl_ln5_fu_2528_p3 > empty_87_fu_2535_p2) ? 1'b1 : 1'b0);

assign icmp_ln849_2_fu_2183_p2 = ((tmp_V_fu_2167_p4 > 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_2177_p2 = ((tmp_V_fu_2167_p4 < 8'd126) ? 1'b1 : 1'b0);

assign index_V_fu_2189_p4 = {{t_V_3_fu_2163_p1[27:23]}};

assign input_V_address0 = zext_ln247_2_fu_978_p1;

assign lshr_ln286_fu_2410_p2 = tmp_394_fu_2328_p3 >> sext_ln281_fu_2348_p1;

assign lshr_ln321_fu_2637_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln321_8_fu_2603_p1;

assign lshr_ln544_fu_2139_p2 = buf_V_q0 >> zext_ln544_2_fu_2135_p1;

assign mask_table1_address0 = zext_ln498_fu_2199_p1;

assign one_half_table2_address0 = zext_ln498_fu_2199_p1;

assign or_ln247_fu_907_p2 = (icmp_ln242_fu_749_p2 | and_ln241_fu_887_p2);

assign or_ln282_fu_2436_p2 = (icmp_ln282_fu_2352_p2 | icmp_ln278_fu_2336_p2);

assign or_ln284_fu_2496_p2 = (or_ln282_fu_2436_p2 | icmp_ln284_fu_2358_p2);

assign output_V_address1 = zext_ln321_fu_2524_p1;

assign output_V_d1 = (select_ln321_3_fu_2623_p3 & and_ln321_fu_2643_p2);

assign p_Result_27_fu_2205_p3 = t_V_3_reg_2784[32'd31];

assign p_Result_28_fu_2212_p3 = {{p_Result_27_fu_2205_p3}, {31'd0}};

assign p_Result_29_fu_2255_p3 = {{tmp_1385_fu_2245_p4}, {xs_sig_V_fu_2239_p2}};

assign p_Result_30_fu_2298_p3 = reg_V_fu_2291_p1[32'd31];

assign p_Result_s_fu_2306_p4 = {{reg_V_fu_2291_p1[30:23]}};

assign p_Val2_s_fu_2224_p2 = (t_V_3_reg_2784 + zext_ln209_fu_2220_p1);

assign p_shl2_fu_2118_p3 = {{empty_86_reg_2742}, {3'd0}};

assign p_shl_fu_2111_p3 = {{empty_86_reg_2742}, {5'd0}};

assign reg_V_fu_2291_p1 = select_ln849_2_reg_2811;

assign select_ln241_1_fu_855_p3 = ((icmp_ln242_fu_749_p2[0:0] === 1'b1) ? select_ln247_1_fu_847_p3 : select_ln247_fu_721_p3);

assign select_ln241_2_fu_867_p3 = ((icmp_ln242_fu_749_p2[0:0] === 1'b1) ? 9'd0 : shl_ln247_2_fu_729_p3);

assign select_ln241_3_fu_893_p3 = ((icmp_ln242_fu_749_p2[0:0] === 1'b1) ? add_ln241_1_fu_763_p2 : row_0_reg_538);

assign select_ln241_fu_755_p3 = ((icmp_ln242_fu_749_p2[0:0] === 1'b1) ? 3'd0 : col_0_reg_560);

assign select_ln242_1_fu_989_p3 = ((icmp_ln242_fu_749_p2[0:0] === 1'b1) ? 10'd1 : add_ln242_1_fu_983_p2);

assign select_ln242_fu_941_p3 = ((and_ln241_fu_887_p2[0:0] === 1'b1) ? col_fu_901_p2 : select_ln241_fu_755_p3);

assign select_ln247_1_fu_847_p3 = ((tmp_553_fu_799_p3[0:0] === 1'b1) ? sub_ln247_5_fu_827_p2 : zext_ln247_10_fu_843_p1);

assign select_ln247_2_fu_913_p3 = ((or_ln247_fu_907_p2[0:0] === 1'b1) ? 7'd0 : to_0_reg_571);

assign select_ln247_3_fu_929_p3 = ((and_ln241_fu_887_p2[0:0] === 1'b1) ? shl_ln247_2_mid1_fu_921_p3 : select_ln241_2_fu_867_p3);

assign select_ln247_fu_721_p3 = ((tmp_552_fu_673_p3[0:0] === 1'b1) ? sub_ln247_2_fu_701_p2 : zext_ln247_6_fu_717_p1);

assign select_ln253_1_fu_2051_p3 = ((icmp_ln254_fu_2031_p2[0:0] === 1'b1) ? add_ln253_1_fu_2045_p2 : ap_phi_mux_so_0_phi_fu_597_p4);

assign select_ln253_fu_2037_p3 = ((icmp_ln254_fu_2031_p2[0:0] === 1'b1) ? 6'd0 : soo_0_reg_604);

assign select_ln278_fu_2468_p3 = ((icmp_ln278_fu_2336_p2[0:0] === 1'b1) ? 8'd0 : select_ln285_fu_2460_p3);

assign select_ln282_fu_2488_p3 = ((and_ln282_fu_2482_p2[0:0] === 1'b1) ? trunc_ln283_fu_2324_p1 : select_ln278_fu_2468_p3);

assign select_ln284_fu_2502_p3 = ((or_ln284_fu_2496_p2[0:0] === 1'b1) ? select_ln282_fu_2488_p3 : select_ln295_fu_2402_p3);

assign select_ln285_fu_2460_p3 = ((and_ln285_128_fu_2454_p2[0:0] === 1'b1) ? trunc_ln286_fu_2416_p1 : select_ln288_fu_2428_p3);

assign select_ln288_fu_2428_p3 = ((tmp_557_fu_2420_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln295_fu_2402_p3 = ((icmp_ln295_fu_2390_p2[0:0] === 1'b1) ? shl_ln297_fu_2396_p2 : 8'd0);

assign select_ln303_fu_2516_p3 = ((p_Result_30_fu_2298_p3[0:0] === 1'b1) ? sub_ln461_fu_2510_p2 : select_ln284_fu_2502_p3);

assign select_ln321_1_fu_2573_p3 = ((icmp_ln321_fu_2541_p2[0:0] === 1'b1) ? zext_ln321_4_fu_2551_p1 : zext_ln321_3_fu_2547_p1);

assign select_ln321_2_fu_2581_p3 = ((icmp_ln321_fu_2541_p2[0:0] === 1'b1) ? xor_ln321_fu_2559_p2 : zext_ln321_3_fu_2547_p1);

assign select_ln321_3_fu_2623_p3 = ((icmp_ln321_fu_2541_p2[0:0] === 1'b1) ? tmp_558_fu_2613_p4 : shl_ln321_fu_2607_p2);

assign select_ln321_fu_2565_p3 = ((icmp_ln321_fu_2541_p2[0:0] === 1'b1) ? zext_ln321_3_fu_2547_p1 : zext_ln321_4_fu_2551_p1);

assign select_ln849_2_fu_2284_p3 = ((and_ln849_fu_2279_p2[0:0] === 1'b1) ? x_assign_reg_2779 : bitcast_ln849_fu_2270_p1);

assign select_ln849_fu_2263_p3 = ((icmp_ln849_reg_2790[0:0] === 1'b1) ? p_Result_28_fu_2212_p3 : p_Result_29_fu_2255_p3);

assign sext_ln241_fu_863_p1 = $signed(select_ln241_1_fu_855_p3);

assign sext_ln247_fu_974_p1 = $signed(add_ln247_1_fu_968_p2);

assign sext_ln281_fu_2348_p1 = sh_amt_fu_2342_p2;

assign sh_amt_fu_2342_p2 = (9'd150 - exp_V_fu_2316_p1);

assign shl_ln247_1_fu_655_p3 = {{row_0_reg_538}, {11'd0}};

assign shl_ln247_1_mid1_fu_781_p3 = {{add_ln241_1_fu_763_p2}, {11'd0}};

assign shl_ln247_2_fu_729_p3 = {{col_0_reg_560}, {6'd0}};

assign shl_ln247_2_mid1_fu_921_p3 = {{col_fu_901_p2}, {6'd0}};

assign shl_ln247_mid1_fu_769_p3 = {{add_ln241_1_fu_763_p2}, {14'd0}};

assign shl_ln253_fu_2106_p2 = select_ln253_1_reg_2731 << 7'd5;

assign shl_ln256_mid2_fu_2063_p3 = {{trunc_ln253_fu_2059_p1}, {5'd0}};

assign shl_ln297_fu_2396_p2 = trunc_ln283_fu_2324_p1 << sub_ln294_fu_2374_p2;

assign shl_ln321_1_fu_2631_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 << zext_ln321_7_fu_2599_p1;

assign shl_ln321_2_fu_2659_p2 = 128'd1 << zext_ln321_9_fu_2656_p1;

assign shl_ln321_fu_2607_p2 = zext_ln321_5_fu_2555_p1 << zext_ln321_6_fu_2595_p1;

assign shl_ln5_fu_2528_p3 = {{add_ln321_1_reg_2763_pp2_iter24_reg}, {3'd0}};

assign shl_ln_fu_643_p3 = {{row_0_reg_538}, {14'd0}};

assign soo_fu_2100_p2 = (6'd1 + select_ln253_fu_2037_p3);

assign sub_ln247_1_fu_681_p2 = (18'd0 - sub_ln247_fu_667_p2);

assign sub_ln247_2_fu_701_p2 = (14'd0 - zext_ln247_4_fu_697_p1);

assign sub_ln247_3_fu_793_p2 = (zext_ln247_7_fu_777_p1 - zext_ln247_8_fu_789_p1);

assign sub_ln247_4_fu_807_p2 = (18'd0 - sub_ln247_3_fu_793_p2);

assign sub_ln247_5_fu_827_p2 = (14'd0 - zext_ln247_9_fu_823_p1);

assign sub_ln247_fu_667_p2 = (zext_ln247_fu_651_p1 - zext_ln247_3_fu_663_p1);

assign sub_ln294_fu_2374_p2 = (8'd0 - trunc_ln294_fu_2370_p1);

assign sub_ln461_fu_2510_p2 = (8'd0 - select_ln284_fu_2502_p3);

assign sub_ln544_fu_2129_p2 = (p_shl_fu_2111_p3 - zext_ln544_1_fu_2125_p1);

assign t_V_3_fu_2163_p1 = grp_fu_615_p1;

assign tmp_1381_fu_687_p4 = {{sub_ln247_1_fu_681_p2[17:5]}};

assign tmp_1382_fu_707_p4 = {{sub_ln247_fu_667_p2[17:5]}};

assign tmp_1383_fu_813_p4 = {{sub_ln247_4_fu_807_p2[17:5]}};

assign tmp_1384_fu_833_p4 = {{sub_ln247_3_fu_793_p2[17:5]}};

assign tmp_1385_fu_2245_p4 = {{p_Val2_s_fu_2224_p2[31:23]}};

assign tmp_362_fu_1029_p4 = {{buf_V_q0[47:24]}};

assign tmp_363_fu_1059_p4 = {{buf_V_q0[71:48]}};

assign tmp_364_fu_1089_p4 = {{buf_V_q0[95:72]}};

assign tmp_365_fu_1119_p4 = {{buf_V_q0[119:96]}};

assign tmp_366_fu_1149_p4 = {{buf_V_q0[143:120]}};

assign tmp_367_fu_1179_p4 = {{buf_V_q0[167:144]}};

assign tmp_368_fu_1209_p4 = {{buf_V_q0[191:168]}};

assign tmp_369_fu_1239_p4 = {{buf_V_q0[215:192]}};

assign tmp_370_fu_1269_p4 = {{buf_V_q0[239:216]}};

assign tmp_371_fu_1299_p4 = {{buf_V_q0[263:240]}};

assign tmp_372_fu_1329_p4 = {{buf_V_q0[287:264]}};

assign tmp_373_fu_1359_p4 = {{buf_V_q0[311:288]}};

assign tmp_374_fu_1389_p4 = {{buf_V_q0[335:312]}};

assign tmp_375_fu_1419_p4 = {{buf_V_q0[359:336]}};

assign tmp_376_fu_1449_p4 = {{buf_V_q0[383:360]}};

assign tmp_377_fu_1479_p4 = {{buf_V_q0[407:384]}};

assign tmp_378_fu_1509_p4 = {{buf_V_q0[431:408]}};

assign tmp_379_fu_1539_p4 = {{buf_V_q0[455:432]}};

assign tmp_380_fu_1569_p4 = {{buf_V_q0[479:456]}};

assign tmp_381_fu_1599_p4 = {{buf_V_q0[503:480]}};

assign tmp_382_fu_1629_p4 = {{buf_V_q0[527:504]}};

assign tmp_383_fu_1659_p4 = {{buf_V_q0[551:528]}};

assign tmp_384_fu_1689_p4 = {{buf_V_q0[575:552]}};

assign tmp_385_fu_1719_p4 = {{buf_V_q0[599:576]}};

assign tmp_386_fu_1749_p4 = {{buf_V_q0[623:600]}};

assign tmp_387_fu_1779_p4 = {{buf_V_q0[647:624]}};

assign tmp_388_fu_1809_p4 = {{buf_V_q0[671:648]}};

assign tmp_389_fu_1839_p4 = {{buf_V_q0[695:672]}};

assign tmp_390_fu_1869_p4 = {{buf_V_q0[719:696]}};

assign tmp_391_fu_1899_p4 = {{buf_V_q0[743:720]}};

assign tmp_392_fu_1929_p4 = {{buf_V_q0[767:744]}};

assign tmp_393_fu_1945_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{add_ln700_31_fu_1939_p2}, {add_ln700_30_fu_1909_p2}}, {add_ln700_29_fu_1879_p2}}, {add_ln700_28_fu_1849_p2}}, {add_ln700_27_fu_1819_p2}}, {add_ln700_26_fu_1789_p2}}, {add_ln700_25_fu_1759_p2}}, {add_ln700_24_fu_1729_p2}}, {add_ln700_23_fu_1699_p2}}, {add_ln700_22_fu_1669_p2}}, {add_ln700_21_fu_1639_p2}}, {add_ln700_20_fu_1609_p2}}, {add_ln700_19_fu_1579_p2}}, {add_ln700_18_fu_1549_p2}}, {add_ln700_17_fu_1519_p2}}, {add_ln700_16_fu_1489_p2}}, {add_ln700_15_fu_1459_p2}}, {add_ln700_14_fu_1429_p2}}, {add_ln700_13_fu_1399_p2}}, {add_ln700_12_fu_1369_p2}}, {add_ln700_11_fu_1339_p2}}, {add_ln700_10_fu_1309_p2}}, {add_ln700_9_fu_1279_p2}}, {add_ln700_8_fu_1249_p2}}, {add_ln700_7_fu_1219_p2}}, {add_ln700_6_fu_1189_p2}}, {add_ln700_5_fu_1159_p2}}, {add_ln700_4_fu_1129_p2}}, {add_ln700_3_fu_1099_p2}}, {add_ln700_2_fu_1069_p2}}, {add_ln700_1_fu_1039_p2}}, {add_ln700_fu_1009_p2}};

assign tmp_394_fu_2328_p3 = {{1'd1}, {trunc_ln270_fu_2320_p1}};

assign tmp_552_fu_673_p3 = sub_ln247_fu_667_p2[32'd17];

assign tmp_553_fu_799_p3 = sub_ln247_3_fu_793_p2[32'd17];

assign tmp_556_fu_2380_p4 = {{sub_ln294_fu_2374_p2[7:3]}};

assign tmp_557_fu_2420_p3 = reg_V_fu_2291_p1[32'd31];

integer ap_tvar_int_0;

always @ (shl_ln321_fu_2607_p2) begin
    for (ap_tvar_int_0 = 1024 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1023 - 0) begin
            tmp_558_fu_2613_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_558_fu_2613_p4[ap_tvar_int_0] = shl_ln321_fu_2607_p2[1023 - ap_tvar_int_0];
        end
    end
end

assign tmp_V_2_fu_2229_p1 = p_Val2_s_fu_2224_p2[22:0];

assign tmp_V_fu_2167_p4 = {{t_V_3_fu_2163_p1[30:23]}};

assign to_fu_2014_p2 = (7'd1 + select_ln247_2_reg_2687);

assign trunc_ln214_10_fu_1315_p4 = {{input_V_q0[106:99]}};

assign trunc_ln214_11_fu_1345_p4 = {{input_V_q0[115:108]}};

assign trunc_ln214_12_fu_1375_p4 = {{input_V_q0[124:117]}};

assign trunc_ln214_13_fu_1405_p4 = {{input_V_q0[133:126]}};

assign trunc_ln214_14_fu_1435_p4 = {{input_V_q0[142:135]}};

assign trunc_ln214_15_fu_1465_p4 = {{input_V_q0[151:144]}};

assign trunc_ln214_16_fu_1495_p4 = {{input_V_q0[160:153]}};

assign trunc_ln214_17_fu_1525_p4 = {{input_V_q0[169:162]}};

assign trunc_ln214_18_fu_1555_p4 = {{input_V_q0[178:171]}};

assign trunc_ln214_19_fu_1585_p4 = {{input_V_q0[187:180]}};

assign trunc_ln214_1_fu_1015_p4 = {{input_V_q0[16:9]}};

assign trunc_ln214_20_fu_1615_p4 = {{input_V_q0[196:189]}};

assign trunc_ln214_21_fu_1645_p4 = {{input_V_q0[205:198]}};

assign trunc_ln214_22_fu_1675_p4 = {{input_V_q0[214:207]}};

assign trunc_ln214_23_fu_1705_p4 = {{input_V_q0[223:216]}};

assign trunc_ln214_24_fu_1735_p4 = {{input_V_q0[232:225]}};

assign trunc_ln214_25_fu_1765_p4 = {{input_V_q0[241:234]}};

assign trunc_ln214_26_fu_1795_p4 = {{input_V_q0[250:243]}};

assign trunc_ln214_27_fu_1825_p4 = {{input_V_q0[259:252]}};

assign trunc_ln214_28_fu_1855_p4 = {{input_V_q0[268:261]}};

assign trunc_ln214_29_fu_1885_p4 = {{input_V_q0[277:270]}};

assign trunc_ln214_2_fu_1045_p4 = {{input_V_q0[25:18]}};

assign trunc_ln214_30_fu_1915_p4 = {{input_V_q0[286:279]}};

assign trunc_ln214_3_fu_1075_p4 = {{input_V_q0[34:27]}};

assign trunc_ln214_4_fu_1105_p4 = {{input_V_q0[43:36]}};

assign trunc_ln214_5_fu_1135_p4 = {{input_V_q0[52:45]}};

assign trunc_ln214_6_fu_1165_p4 = {{input_V_q0[61:54]}};

assign trunc_ln214_7_fu_1195_p4 = {{input_V_q0[70:63]}};

assign trunc_ln214_8_fu_1225_p4 = {{input_V_q0[79:72]}};

assign trunc_ln214_9_fu_1255_p4 = {{input_V_q0[88:81]}};

assign trunc_ln214_fu_997_p1 = input_V_q0[7:0];

assign trunc_ln214_s_fu_1285_p4 = {{input_V_q0[97:90]}};

assign trunc_ln253_fu_2059_p1 = select_ln253_1_fu_2051_p3[5:0];

assign trunc_ln262_fu_2294_p1 = reg_V_fu_2291_p1[30:0];

assign trunc_ln270_fu_2320_p1 = reg_V_fu_2291_p1[22:0];

assign trunc_ln283_fu_2324_p1 = reg_V_fu_2291_p1[7:0];

assign trunc_ln286_fu_2416_p1 = lshr_ln286_fu_2410_p2[7:0];

assign trunc_ln294_fu_2370_p1 = sh_amt_fu_2342_p2[7:0];

assign trunc_ln544_fu_2145_p1 = lshr_ln544_fu_2139_p2[23:0];

assign trunc_ln700_fu_1005_p1 = buf_V_q0[23:0];

assign xor_ln1309_fu_2233_p2 = (mask_table1_q0 ^ 23'd8388607);

assign xor_ln241_fu_875_p2 = (icmp_ln242_fu_749_p2 ^ 1'd1);

assign xor_ln278_fu_2476_p2 = (icmp_ln278_fu_2336_p2 ^ 1'd1);

assign xor_ln282_fu_2442_p2 = (or_ln282_fu_2436_p2 ^ 1'd1);

assign xor_ln321_1_fu_2589_p2 = (select_ln321_fu_2565_p3 ^ 11'd1023);

assign xor_ln321_fu_2559_p2 = (zext_ln321_3_fu_2547_p1 ^ 11'd1023);

assign xor_ln849_fu_2274_p2 = (icmp_ln849_reg_2790 ^ 1'd1);

assign xs_sig_V_fu_2239_p2 = (xor_ln1309_fu_2233_p2 & tmp_V_2_fu_2229_p1);

assign zext_ln209_fu_2220_p1 = one_half_table2_q0;

assign zext_ln237_fu_638_p1 = co_0_reg_516;

assign zext_ln243_fu_949_p1 = select_ln247_2_fu_913_p3;

assign zext_ln247_10_fu_843_p1 = tmp_1384_fu_833_p4;

assign zext_ln247_11_fu_937_p1 = select_ln247_3_fu_929_p3;

assign zext_ln247_1_fu_953_p1 = select_ln247_2_fu_913_p3;

assign zext_ln247_2_fu_978_p1 = $unsigned(sext_ln247_fu_974_p1);

assign zext_ln247_3_fu_663_p1 = shl_ln247_1_fu_655_p3;

assign zext_ln247_4_fu_697_p1 = tmp_1381_fu_687_p4;

assign zext_ln247_5_fu_964_p1 = add_ln247_fu_958_p2;

assign zext_ln247_6_fu_717_p1 = tmp_1382_fu_707_p4;

assign zext_ln247_7_fu_777_p1 = shl_ln247_mid1_fu_769_p3;

assign zext_ln247_8_fu_789_p1 = shl_ln247_1_mid1_fu_781_p3;

assign zext_ln247_9_fu_823_p1 = tmp_1383_fu_813_p4;

assign zext_ln247_fu_651_p1 = shl_ln_fu_643_p3;

assign zext_ln253_fu_2071_p1 = select_ln253_1_fu_2051_p3;

assign zext_ln321_2_fu_2154_p1 = select_ln253_reg_2726;

assign zext_ln321_3_fu_2547_p1 = shl_ln5_fu_2528_p3;

assign zext_ln321_4_fu_2551_p1 = empty_87_fu_2535_p2;

assign zext_ln321_5_fu_2555_p1 = select_ln303_fu_2516_p3;

assign zext_ln321_6_fu_2595_p1 = select_ln321_2_fu_2581_p3;

assign zext_ln321_7_fu_2599_p1 = select_ln321_1_fu_2573_p3;

assign zext_ln321_8_fu_2603_p1 = xor_ln321_1_fu_2589_p2;

assign zext_ln321_9_fu_2656_p1 = add_ln321_1_reg_2763_pp2_iter24_reg;

assign zext_ln321_fu_2524_p1 = lshr_ln_reg_2748_pp2_iter24_reg;

assign zext_ln498_fu_2199_p1 = index_V_fu_2189_p4;

assign zext_ln544_1_fu_2125_p1 = p_shl2_fu_2118_p3;

assign zext_ln544_2_fu_2135_p1 = sub_ln544_fu_2129_p2;

assign zext_ln544_fu_2076_p1 = select_ln253_fu_2037_p3;

assign zext_ln700_10_fu_1295_p1 = trunc_ln214_s_fu_1285_p4;

assign zext_ln700_11_fu_1325_p1 = trunc_ln214_10_fu_1315_p4;

assign zext_ln700_12_fu_1355_p1 = trunc_ln214_11_fu_1345_p4;

assign zext_ln700_13_fu_1385_p1 = trunc_ln214_12_fu_1375_p4;

assign zext_ln700_14_fu_1415_p1 = trunc_ln214_13_fu_1405_p4;

assign zext_ln700_15_fu_1445_p1 = trunc_ln214_14_fu_1435_p4;

assign zext_ln700_16_fu_1475_p1 = trunc_ln214_15_fu_1465_p4;

assign zext_ln700_17_fu_1505_p1 = trunc_ln214_16_fu_1495_p4;

assign zext_ln700_18_fu_1535_p1 = trunc_ln214_17_fu_1525_p4;

assign zext_ln700_19_fu_1565_p1 = trunc_ln214_18_fu_1555_p4;

assign zext_ln700_1_fu_1025_p1 = trunc_ln214_1_fu_1015_p4;

assign zext_ln700_20_fu_1595_p1 = trunc_ln214_19_fu_1585_p4;

assign zext_ln700_21_fu_1625_p1 = trunc_ln214_20_fu_1615_p4;

assign zext_ln700_22_fu_1655_p1 = trunc_ln214_21_fu_1645_p4;

assign zext_ln700_23_fu_1685_p1 = trunc_ln214_22_fu_1675_p4;

assign zext_ln700_24_fu_1715_p1 = trunc_ln214_23_fu_1705_p4;

assign zext_ln700_25_fu_1745_p1 = trunc_ln214_24_fu_1735_p4;

assign zext_ln700_26_fu_1775_p1 = trunc_ln214_25_fu_1765_p4;

assign zext_ln700_27_fu_1805_p1 = trunc_ln214_26_fu_1795_p4;

assign zext_ln700_28_fu_1835_p1 = trunc_ln214_27_fu_1825_p4;

assign zext_ln700_29_fu_1865_p1 = trunc_ln214_28_fu_1855_p4;

assign zext_ln700_2_fu_1055_p1 = trunc_ln214_2_fu_1045_p4;

assign zext_ln700_30_fu_1895_p1 = trunc_ln214_29_fu_1885_p4;

assign zext_ln700_31_fu_1925_p1 = trunc_ln214_30_fu_1915_p4;

assign zext_ln700_3_fu_1085_p1 = trunc_ln214_3_fu_1075_p4;

assign zext_ln700_4_fu_1115_p1 = trunc_ln214_4_fu_1105_p4;

assign zext_ln700_5_fu_1145_p1 = trunc_ln214_5_fu_1135_p4;

assign zext_ln700_6_fu_1175_p1 = trunc_ln214_6_fu_1165_p4;

assign zext_ln700_7_fu_1205_p1 = trunc_ln214_7_fu_1195_p4;

assign zext_ln700_8_fu_1235_p1 = trunc_ln214_8_fu_1225_p4;

assign zext_ln700_9_fu_1265_p1 = trunc_ln214_9_fu_1255_p4;

assign zext_ln700_fu_1001_p1 = trunc_ln214_fu_997_p1;

endmodule //average_pool
