// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc_load_weight.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc_load_weight::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc_load_weight::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<137> fc_load_weight::ap_ST_fsm_state1 = "1";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state2 = "10";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state3 = "100";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state4 = "1000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state5 = "10000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state6 = "100000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state7 = "1000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state8 = "10000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state9 = "100000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state10 = "1000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state11 = "10000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state12 = "100000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state131 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state132 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state133 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state134 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state135 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state136 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<137> fc_load_weight::ap_ST_fsm_state137 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> fc_load_weight::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> fc_load_weight::ap_const_lv1_0 = "0";
const sc_lv<3> fc_load_weight::ap_const_lv3_0 = "000";
const sc_lv<2> fc_load_weight::ap_const_lv2_0 = "00";
const sc_lv<4> fc_load_weight::ap_const_lv4_0 = "0000";
const sc_lv<128> fc_load_weight::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<16> fc_load_weight::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> fc_load_weight::ap_const_lv32_1 = "1";
const sc_lv<32> fc_load_weight::ap_const_lv32_8 = "1000";
const sc_lv<32> fc_load_weight::ap_const_lv32_9 = "1001";
const sc_lv<32> fc_load_weight::ap_const_lv32_A = "1010";
const sc_lv<32> fc_load_weight::ap_const_lv32_B = "1011";
const sc_lv<32> fc_load_weight::ap_const_lv32_C = "1100";
const sc_lv<32> fc_load_weight::ap_const_lv32_D = "1101";
const sc_lv<32> fc_load_weight::ap_const_lv32_E = "1110";
const sc_lv<32> fc_load_weight::ap_const_lv32_F = "1111";
const sc_lv<32> fc_load_weight::ap_const_lv32_10 = "10000";
const sc_lv<32> fc_load_weight::ap_const_lv32_11 = "10001";
const sc_lv<32> fc_load_weight::ap_const_lv32_12 = "10010";
const sc_lv<32> fc_load_weight::ap_const_lv32_13 = "10011";
const sc_lv<32> fc_load_weight::ap_const_lv32_14 = "10100";
const sc_lv<32> fc_load_weight::ap_const_lv32_15 = "10101";
const sc_lv<32> fc_load_weight::ap_const_lv32_16 = "10110";
const sc_lv<32> fc_load_weight::ap_const_lv32_17 = "10111";
const sc_lv<32> fc_load_weight::ap_const_lv32_18 = "11000";
const sc_lv<32> fc_load_weight::ap_const_lv32_19 = "11001";
const sc_lv<32> fc_load_weight::ap_const_lv32_1A = "11010";
const sc_lv<32> fc_load_weight::ap_const_lv32_1B = "11011";
const sc_lv<32> fc_load_weight::ap_const_lv32_1C = "11100";
const sc_lv<32> fc_load_weight::ap_const_lv32_1D = "11101";
const sc_lv<32> fc_load_weight::ap_const_lv32_1E = "11110";
const sc_lv<32> fc_load_weight::ap_const_lv32_1F = "11111";
const sc_lv<32> fc_load_weight::ap_const_lv32_20 = "100000";
const sc_lv<32> fc_load_weight::ap_const_lv32_21 = "100001";
const sc_lv<32> fc_load_weight::ap_const_lv32_22 = "100010";
const sc_lv<32> fc_load_weight::ap_const_lv32_23 = "100011";
const sc_lv<32> fc_load_weight::ap_const_lv32_24 = "100100";
const sc_lv<32> fc_load_weight::ap_const_lv32_25 = "100101";
const sc_lv<32> fc_load_weight::ap_const_lv32_26 = "100110";
const sc_lv<32> fc_load_weight::ap_const_lv32_27 = "100111";
const sc_lv<32> fc_load_weight::ap_const_lv32_28 = "101000";
const sc_lv<32> fc_load_weight::ap_const_lv32_29 = "101001";
const sc_lv<32> fc_load_weight::ap_const_lv32_2A = "101010";
const sc_lv<32> fc_load_weight::ap_const_lv32_2B = "101011";
const sc_lv<32> fc_load_weight::ap_const_lv32_2C = "101100";
const sc_lv<32> fc_load_weight::ap_const_lv32_2D = "101101";
const sc_lv<32> fc_load_weight::ap_const_lv32_2E = "101110";
const sc_lv<32> fc_load_weight::ap_const_lv32_2F = "101111";
const sc_lv<32> fc_load_weight::ap_const_lv32_30 = "110000";
const sc_lv<32> fc_load_weight::ap_const_lv32_31 = "110001";
const sc_lv<32> fc_load_weight::ap_const_lv32_32 = "110010";
const sc_lv<32> fc_load_weight::ap_const_lv32_33 = "110011";
const sc_lv<32> fc_load_weight::ap_const_lv32_34 = "110100";
const sc_lv<32> fc_load_weight::ap_const_lv32_35 = "110101";
const sc_lv<32> fc_load_weight::ap_const_lv32_36 = "110110";
const sc_lv<32> fc_load_weight::ap_const_lv32_37 = "110111";
const sc_lv<32> fc_load_weight::ap_const_lv32_38 = "111000";
const sc_lv<32> fc_load_weight::ap_const_lv32_39 = "111001";
const sc_lv<32> fc_load_weight::ap_const_lv32_3A = "111010";
const sc_lv<32> fc_load_weight::ap_const_lv32_3B = "111011";
const sc_lv<32> fc_load_weight::ap_const_lv32_3C = "111100";
const sc_lv<32> fc_load_weight::ap_const_lv32_3D = "111101";
const sc_lv<32> fc_load_weight::ap_const_lv32_3E = "111110";
const sc_lv<32> fc_load_weight::ap_const_lv32_3F = "111111";
const sc_lv<32> fc_load_weight::ap_const_lv32_40 = "1000000";
const sc_lv<32> fc_load_weight::ap_const_lv32_41 = "1000001";
const sc_lv<32> fc_load_weight::ap_const_lv32_42 = "1000010";
const sc_lv<32> fc_load_weight::ap_const_lv32_43 = "1000011";
const sc_lv<32> fc_load_weight::ap_const_lv32_44 = "1000100";
const sc_lv<32> fc_load_weight::ap_const_lv32_45 = "1000101";
const sc_lv<32> fc_load_weight::ap_const_lv32_46 = "1000110";
const sc_lv<32> fc_load_weight::ap_const_lv32_47 = "1000111";
const sc_lv<32> fc_load_weight::ap_const_lv32_48 = "1001000";
const sc_lv<32> fc_load_weight::ap_const_lv32_49 = "1001001";
const sc_lv<32> fc_load_weight::ap_const_lv32_4A = "1001010";
const sc_lv<32> fc_load_weight::ap_const_lv32_4B = "1001011";
const sc_lv<32> fc_load_weight::ap_const_lv32_4C = "1001100";
const sc_lv<32> fc_load_weight::ap_const_lv32_4D = "1001101";
const sc_lv<32> fc_load_weight::ap_const_lv32_4E = "1001110";
const sc_lv<32> fc_load_weight::ap_const_lv32_4F = "1001111";
const sc_lv<32> fc_load_weight::ap_const_lv32_50 = "1010000";
const sc_lv<32> fc_load_weight::ap_const_lv32_51 = "1010001";
const sc_lv<32> fc_load_weight::ap_const_lv32_52 = "1010010";
const sc_lv<32> fc_load_weight::ap_const_lv32_53 = "1010011";
const sc_lv<32> fc_load_weight::ap_const_lv32_54 = "1010100";
const sc_lv<32> fc_load_weight::ap_const_lv32_55 = "1010101";
const sc_lv<32> fc_load_weight::ap_const_lv32_56 = "1010110";
const sc_lv<32> fc_load_weight::ap_const_lv32_57 = "1010111";
const sc_lv<32> fc_load_weight::ap_const_lv32_58 = "1011000";
const sc_lv<32> fc_load_weight::ap_const_lv32_59 = "1011001";
const sc_lv<32> fc_load_weight::ap_const_lv32_5A = "1011010";
const sc_lv<32> fc_load_weight::ap_const_lv32_5B = "1011011";
const sc_lv<32> fc_load_weight::ap_const_lv32_5C = "1011100";
const sc_lv<32> fc_load_weight::ap_const_lv32_5D = "1011101";
const sc_lv<32> fc_load_weight::ap_const_lv32_5E = "1011110";
const sc_lv<32> fc_load_weight::ap_const_lv32_5F = "1011111";
const sc_lv<32> fc_load_weight::ap_const_lv32_60 = "1100000";
const sc_lv<32> fc_load_weight::ap_const_lv32_61 = "1100001";
const sc_lv<32> fc_load_weight::ap_const_lv32_62 = "1100010";
const sc_lv<32> fc_load_weight::ap_const_lv32_63 = "1100011";
const sc_lv<32> fc_load_weight::ap_const_lv32_64 = "1100100";
const sc_lv<32> fc_load_weight::ap_const_lv32_65 = "1100101";
const sc_lv<32> fc_load_weight::ap_const_lv32_66 = "1100110";
const sc_lv<32> fc_load_weight::ap_const_lv32_67 = "1100111";
const sc_lv<32> fc_load_weight::ap_const_lv32_68 = "1101000";
const sc_lv<32> fc_load_weight::ap_const_lv32_69 = "1101001";
const sc_lv<32> fc_load_weight::ap_const_lv32_6A = "1101010";
const sc_lv<32> fc_load_weight::ap_const_lv32_6B = "1101011";
const sc_lv<32> fc_load_weight::ap_const_lv32_6C = "1101100";
const sc_lv<32> fc_load_weight::ap_const_lv32_6D = "1101101";
const sc_lv<32> fc_load_weight::ap_const_lv32_6E = "1101110";
const sc_lv<32> fc_load_weight::ap_const_lv32_6F = "1101111";
const sc_lv<32> fc_load_weight::ap_const_lv32_70 = "1110000";
const sc_lv<32> fc_load_weight::ap_const_lv32_71 = "1110001";
const sc_lv<32> fc_load_weight::ap_const_lv32_72 = "1110010";
const sc_lv<32> fc_load_weight::ap_const_lv32_73 = "1110011";
const sc_lv<32> fc_load_weight::ap_const_lv32_74 = "1110100";
const sc_lv<32> fc_load_weight::ap_const_lv32_75 = "1110101";
const sc_lv<32> fc_load_weight::ap_const_lv32_76 = "1110110";
const sc_lv<32> fc_load_weight::ap_const_lv32_77 = "1110111";
const sc_lv<32> fc_load_weight::ap_const_lv32_78 = "1111000";
const sc_lv<32> fc_load_weight::ap_const_lv32_79 = "1111001";
const sc_lv<32> fc_load_weight::ap_const_lv32_7A = "1111010";
const sc_lv<32> fc_load_weight::ap_const_lv32_7B = "1111011";
const sc_lv<32> fc_load_weight::ap_const_lv32_7C = "1111100";
const sc_lv<32> fc_load_weight::ap_const_lv32_7D = "1111101";
const sc_lv<32> fc_load_weight::ap_const_lv32_7E = "1111110";
const sc_lv<32> fc_load_weight::ap_const_lv32_7F = "1111111";
const sc_lv<32> fc_load_weight::ap_const_lv32_80 = "10000000";
const sc_lv<32> fc_load_weight::ap_const_lv32_81 = "10000001";
const sc_lv<32> fc_load_weight::ap_const_lv32_82 = "10000010";
const sc_lv<32> fc_load_weight::ap_const_lv32_83 = "10000011";
const sc_lv<32> fc_load_weight::ap_const_lv32_84 = "10000100";
const sc_lv<32> fc_load_weight::ap_const_lv32_85 = "10000101";
const sc_lv<32> fc_load_weight::ap_const_lv32_86 = "10000110";
const sc_lv<32> fc_load_weight::ap_const_lv32_87 = "10000111";
const sc_lv<64> fc_load_weight::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> fc_load_weight::ap_const_lv64_1 = "1";
const sc_lv<64> fc_load_weight::ap_const_lv64_2 = "10";
const sc_lv<64> fc_load_weight::ap_const_lv64_3 = "11";
const sc_lv<64> fc_load_weight::ap_const_lv64_4 = "100";
const sc_lv<64> fc_load_weight::ap_const_lv64_5 = "101";
const sc_lv<64> fc_load_weight::ap_const_lv64_6 = "110";
const sc_lv<64> fc_load_weight::ap_const_lv64_7 = "111";
const sc_lv<64> fc_load_weight::ap_const_lv64_8 = "1000";
const sc_lv<64> fc_load_weight::ap_const_lv64_9 = "1001";
const sc_lv<64> fc_load_weight::ap_const_lv64_A = "1010";
const sc_lv<64> fc_load_weight::ap_const_lv64_B = "1011";
const sc_lv<64> fc_load_weight::ap_const_lv64_C = "1100";
const sc_lv<64> fc_load_weight::ap_const_lv64_D = "1101";
const sc_lv<64> fc_load_weight::ap_const_lv64_E = "1110";
const sc_lv<64> fc_load_weight::ap_const_lv64_F = "1111";
const sc_lv<32> fc_load_weight::ap_const_lv32_88 = "10001000";
const sc_lv<11> fc_load_weight::ap_const_lv11_0 = "00000000000";
const sc_lv<24> fc_load_weight::ap_const_lv24_88C000 = "100010001100000000000000";
const sc_lv<32> fc_load_weight::ap_const_lv32_4 = "100";
const bool fc_load_weight::ap_const_boolean_1 = true;

fc_load_weight::fc_load_weight(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln340_fu_301_p2);
    sensitive << ( zext_ln340_fu_297_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state104);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state105);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state109);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state113);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state115);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state116);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state121);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state127);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state136);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state137);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( och_0_out_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state137 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state137 );

    SC_METHOD(thread_ddr_V_blk_n_AR);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ddr_V_blk_n_R);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state98 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state100 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state102 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state106 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state108 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state110 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state112 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state114 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( ap_CS_fsm_state118 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state122 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state126 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state128 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state132 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state134 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state136 );

    SC_METHOD(thread_m_axi_ddr_V_ARADDR);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln269_fu_317_p1 );

    SC_METHOD(thread_m_axi_ddr_V_ARBURST);

    SC_METHOD(thread_m_axi_ddr_V_ARCACHE);

    SC_METHOD(thread_m_axi_ddr_V_ARID);

    SC_METHOD(thread_m_axi_ddr_V_ARLEN);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_ddr_V_ARLOCK);

    SC_METHOD(thread_m_axi_ddr_V_ARPROT);

    SC_METHOD(thread_m_axi_ddr_V_ARQOS);

    SC_METHOD(thread_m_axi_ddr_V_ARREGION);

    SC_METHOD(thread_m_axi_ddr_V_ARSIZE);

    SC_METHOD(thread_m_axi_ddr_V_ARUSER);

    SC_METHOD(thread_m_axi_ddr_V_ARVALID);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_ddr_V_AWADDR);

    SC_METHOD(thread_m_axi_ddr_V_AWBURST);

    SC_METHOD(thread_m_axi_ddr_V_AWCACHE);

    SC_METHOD(thread_m_axi_ddr_V_AWID);

    SC_METHOD(thread_m_axi_ddr_V_AWLEN);

    SC_METHOD(thread_m_axi_ddr_V_AWLOCK);

    SC_METHOD(thread_m_axi_ddr_V_AWPROT);

    SC_METHOD(thread_m_axi_ddr_V_AWQOS);

    SC_METHOD(thread_m_axi_ddr_V_AWREGION);

    SC_METHOD(thread_m_axi_ddr_V_AWSIZE);

    SC_METHOD(thread_m_axi_ddr_V_AWUSER);

    SC_METHOD(thread_m_axi_ddr_V_AWVALID);

    SC_METHOD(thread_m_axi_ddr_V_BREADY);

    SC_METHOD(thread_m_axi_ddr_V_RREADY);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state98 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state100 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state102 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state106 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state108 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state110 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state112 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state114 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( ap_CS_fsm_state118 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state122 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state126 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state128 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state132 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state134 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state136 );

    SC_METHOD(thread_m_axi_ddr_V_WDATA);

    SC_METHOD(thread_m_axi_ddr_V_WID);

    SC_METHOD(thread_m_axi_ddr_V_WLAST);

    SC_METHOD(thread_m_axi_ddr_V_WSTRB);

    SC_METHOD(thread_m_axi_ddr_V_WUSER);

    SC_METHOD(thread_m_axi_ddr_V_WVALID);

    SC_METHOD(thread_och_0_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( och_0_out_full_n );

    SC_METHOD(thread_och_0_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( och_0 );
    sensitive << ( och_0_out_full_n );

    SC_METHOD(thread_och_0_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( och_0_out_full_n );

    SC_METHOD(thread_shl_ln_fu_289_p3);
    sensitive << ( och_0 );

    SC_METHOD(thread_tmp_1064_i_i_fu_390_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1192_i_i_fu_411_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1320_i_i_fu_432_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1448_i_i_fu_453_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1576_i_i_fu_474_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1704_i_i_fu_495_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1832_i_i_fu_516_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_1960_i_i_fu_537_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_2088_i_i_fu_558_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_2216_i_i_fu_579_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_2344_i_i_fu_600_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_2472_i_i_fu_621_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_2600_i_i_fu_642_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_680_i_i_fu_327_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_808_i_i_fu_348_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_tmp_936_i_i_fu_369_p9);
    sensitive << ( reg_257 );
    sensitive << ( reg_261 );
    sensitive << ( reg_265 );
    sensitive << ( reg_269 );
    sensitive << ( reg_273 );
    sensitive << ( reg_277 );
    sensitive << ( reg_281 );
    sensitive << ( reg_285 );

    SC_METHOD(thread_weight_V_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state137 );

    SC_METHOD(thread_weight_V_ce0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state137 );

    SC_METHOD(thread_weight_V_d0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( tmp_680_i_i_fu_327_p9 );
    sensitive << ( tmp_808_i_i_fu_348_p9 );
    sensitive << ( tmp_936_i_i_fu_369_p9 );
    sensitive << ( tmp_1064_i_i_fu_390_p9 );
    sensitive << ( tmp_1192_i_i_fu_411_p9 );
    sensitive << ( tmp_1320_i_i_fu_432_p9 );
    sensitive << ( tmp_1448_i_i_fu_453_p9 );
    sensitive << ( tmp_1576_i_i_fu_474_p9 );
    sensitive << ( tmp_1704_i_i_fu_495_p9 );
    sensitive << ( tmp_1832_i_i_fu_516_p9 );
    sensitive << ( tmp_1960_i_i_fu_537_p9 );
    sensitive << ( tmp_2088_i_i_fu_558_p9 );
    sensitive << ( tmp_2216_i_i_fu_579_p9 );
    sensitive << ( tmp_2344_i_i_fu_600_p9 );
    sensitive << ( tmp_2472_i_i_fu_621_p9 );
    sensitive << ( tmp_2600_i_i_fu_642_p9 );

    SC_METHOD(thread_weight_V_we0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state137 );

    SC_METHOD(thread_zext_ln269_fu_317_p1);
    sensitive << ( lshr_ln_reg_663 );

    SC_METHOD(thread_zext_ln340_fu_297_p1);
    sensitive << ( shl_ln_fu_289_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( och_0_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state98 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state100 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state102 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state106 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state108 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state110 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state112 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state114 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( ap_CS_fsm_state118 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state122 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state126 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state128 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state132 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state134 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state136 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc_load_weight_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, weight_V_address0, "(port)weight_V_address0");
    sc_trace(mVcdFile, weight_V_ce0, "(port)weight_V_ce0");
    sc_trace(mVcdFile, weight_V_we0, "(port)weight_V_we0");
    sc_trace(mVcdFile, weight_V_d0, "(port)weight_V_d0");
    sc_trace(mVcdFile, m_axi_ddr_V_AWVALID, "(port)m_axi_ddr_V_AWVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_AWREADY, "(port)m_axi_ddr_V_AWREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_AWADDR, "(port)m_axi_ddr_V_AWADDR");
    sc_trace(mVcdFile, m_axi_ddr_V_AWID, "(port)m_axi_ddr_V_AWID");
    sc_trace(mVcdFile, m_axi_ddr_V_AWLEN, "(port)m_axi_ddr_V_AWLEN");
    sc_trace(mVcdFile, m_axi_ddr_V_AWSIZE, "(port)m_axi_ddr_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_ddr_V_AWBURST, "(port)m_axi_ddr_V_AWBURST");
    sc_trace(mVcdFile, m_axi_ddr_V_AWLOCK, "(port)m_axi_ddr_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_ddr_V_AWCACHE, "(port)m_axi_ddr_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_ddr_V_AWPROT, "(port)m_axi_ddr_V_AWPROT");
    sc_trace(mVcdFile, m_axi_ddr_V_AWQOS, "(port)m_axi_ddr_V_AWQOS");
    sc_trace(mVcdFile, m_axi_ddr_V_AWREGION, "(port)m_axi_ddr_V_AWREGION");
    sc_trace(mVcdFile, m_axi_ddr_V_AWUSER, "(port)m_axi_ddr_V_AWUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_WVALID, "(port)m_axi_ddr_V_WVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_WREADY, "(port)m_axi_ddr_V_WREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_WDATA, "(port)m_axi_ddr_V_WDATA");
    sc_trace(mVcdFile, m_axi_ddr_V_WSTRB, "(port)m_axi_ddr_V_WSTRB");
    sc_trace(mVcdFile, m_axi_ddr_V_WLAST, "(port)m_axi_ddr_V_WLAST");
    sc_trace(mVcdFile, m_axi_ddr_V_WID, "(port)m_axi_ddr_V_WID");
    sc_trace(mVcdFile, m_axi_ddr_V_WUSER, "(port)m_axi_ddr_V_WUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_ARVALID, "(port)m_axi_ddr_V_ARVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_ARREADY, "(port)m_axi_ddr_V_ARREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_ARADDR, "(port)m_axi_ddr_V_ARADDR");
    sc_trace(mVcdFile, m_axi_ddr_V_ARID, "(port)m_axi_ddr_V_ARID");
    sc_trace(mVcdFile, m_axi_ddr_V_ARLEN, "(port)m_axi_ddr_V_ARLEN");
    sc_trace(mVcdFile, m_axi_ddr_V_ARSIZE, "(port)m_axi_ddr_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_ddr_V_ARBURST, "(port)m_axi_ddr_V_ARBURST");
    sc_trace(mVcdFile, m_axi_ddr_V_ARLOCK, "(port)m_axi_ddr_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_ddr_V_ARCACHE, "(port)m_axi_ddr_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_ddr_V_ARPROT, "(port)m_axi_ddr_V_ARPROT");
    sc_trace(mVcdFile, m_axi_ddr_V_ARQOS, "(port)m_axi_ddr_V_ARQOS");
    sc_trace(mVcdFile, m_axi_ddr_V_ARREGION, "(port)m_axi_ddr_V_ARREGION");
    sc_trace(mVcdFile, m_axi_ddr_V_ARUSER, "(port)m_axi_ddr_V_ARUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_RVALID, "(port)m_axi_ddr_V_RVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_RREADY, "(port)m_axi_ddr_V_RREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_RDATA, "(port)m_axi_ddr_V_RDATA");
    sc_trace(mVcdFile, m_axi_ddr_V_RLAST, "(port)m_axi_ddr_V_RLAST");
    sc_trace(mVcdFile, m_axi_ddr_V_RID, "(port)m_axi_ddr_V_RID");
    sc_trace(mVcdFile, m_axi_ddr_V_RUSER, "(port)m_axi_ddr_V_RUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_RRESP, "(port)m_axi_ddr_V_RRESP");
    sc_trace(mVcdFile, m_axi_ddr_V_BVALID, "(port)m_axi_ddr_V_BVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_BREADY, "(port)m_axi_ddr_V_BREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_BRESP, "(port)m_axi_ddr_V_BRESP");
    sc_trace(mVcdFile, m_axi_ddr_V_BID, "(port)m_axi_ddr_V_BID");
    sc_trace(mVcdFile, m_axi_ddr_V_BUSER, "(port)m_axi_ddr_V_BUSER");
    sc_trace(mVcdFile, och_0, "(port)och_0");
    sc_trace(mVcdFile, och_0_out_din, "(port)och_0_out_din");
    sc_trace(mVcdFile, och_0_out_full_n, "(port)och_0_out_full_n");
    sc_trace(mVcdFile, och_0_out_write, "(port)och_0_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ddr_V_blk_n_AR, "ddr_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ddr_V_blk_n_R, "ddr_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, ap_CS_fsm_state84, "ap_CS_fsm_state84");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, ap_CS_fsm_state91, "ap_CS_fsm_state91");
    sc_trace(mVcdFile, ap_CS_fsm_state92, "ap_CS_fsm_state92");
    sc_trace(mVcdFile, ap_CS_fsm_state93, "ap_CS_fsm_state93");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
    sc_trace(mVcdFile, ap_CS_fsm_state95, "ap_CS_fsm_state95");
    sc_trace(mVcdFile, ap_CS_fsm_state96, "ap_CS_fsm_state96");
    sc_trace(mVcdFile, ap_CS_fsm_state97, "ap_CS_fsm_state97");
    sc_trace(mVcdFile, ap_CS_fsm_state98, "ap_CS_fsm_state98");
    sc_trace(mVcdFile, ap_CS_fsm_state99, "ap_CS_fsm_state99");
    sc_trace(mVcdFile, ap_CS_fsm_state100, "ap_CS_fsm_state100");
    sc_trace(mVcdFile, ap_CS_fsm_state101, "ap_CS_fsm_state101");
    sc_trace(mVcdFile, ap_CS_fsm_state102, "ap_CS_fsm_state102");
    sc_trace(mVcdFile, ap_CS_fsm_state103, "ap_CS_fsm_state103");
    sc_trace(mVcdFile, ap_CS_fsm_state104, "ap_CS_fsm_state104");
    sc_trace(mVcdFile, ap_CS_fsm_state105, "ap_CS_fsm_state105");
    sc_trace(mVcdFile, ap_CS_fsm_state106, "ap_CS_fsm_state106");
    sc_trace(mVcdFile, ap_CS_fsm_state107, "ap_CS_fsm_state107");
    sc_trace(mVcdFile, ap_CS_fsm_state108, "ap_CS_fsm_state108");
    sc_trace(mVcdFile, ap_CS_fsm_state109, "ap_CS_fsm_state109");
    sc_trace(mVcdFile, ap_CS_fsm_state110, "ap_CS_fsm_state110");
    sc_trace(mVcdFile, ap_CS_fsm_state111, "ap_CS_fsm_state111");
    sc_trace(mVcdFile, ap_CS_fsm_state112, "ap_CS_fsm_state112");
    sc_trace(mVcdFile, ap_CS_fsm_state113, "ap_CS_fsm_state113");
    sc_trace(mVcdFile, ap_CS_fsm_state114, "ap_CS_fsm_state114");
    sc_trace(mVcdFile, ap_CS_fsm_state115, "ap_CS_fsm_state115");
    sc_trace(mVcdFile, ap_CS_fsm_state116, "ap_CS_fsm_state116");
    sc_trace(mVcdFile, ap_CS_fsm_state117, "ap_CS_fsm_state117");
    sc_trace(mVcdFile, ap_CS_fsm_state118, "ap_CS_fsm_state118");
    sc_trace(mVcdFile, ap_CS_fsm_state119, "ap_CS_fsm_state119");
    sc_trace(mVcdFile, ap_CS_fsm_state120, "ap_CS_fsm_state120");
    sc_trace(mVcdFile, ap_CS_fsm_state121, "ap_CS_fsm_state121");
    sc_trace(mVcdFile, ap_CS_fsm_state122, "ap_CS_fsm_state122");
    sc_trace(mVcdFile, ap_CS_fsm_state123, "ap_CS_fsm_state123");
    sc_trace(mVcdFile, ap_CS_fsm_state124, "ap_CS_fsm_state124");
    sc_trace(mVcdFile, ap_CS_fsm_state125, "ap_CS_fsm_state125");
    sc_trace(mVcdFile, ap_CS_fsm_state126, "ap_CS_fsm_state126");
    sc_trace(mVcdFile, ap_CS_fsm_state127, "ap_CS_fsm_state127");
    sc_trace(mVcdFile, ap_CS_fsm_state128, "ap_CS_fsm_state128");
    sc_trace(mVcdFile, ap_CS_fsm_state129, "ap_CS_fsm_state129");
    sc_trace(mVcdFile, ap_CS_fsm_state130, "ap_CS_fsm_state130");
    sc_trace(mVcdFile, ap_CS_fsm_state131, "ap_CS_fsm_state131");
    sc_trace(mVcdFile, ap_CS_fsm_state132, "ap_CS_fsm_state132");
    sc_trace(mVcdFile, ap_CS_fsm_state133, "ap_CS_fsm_state133");
    sc_trace(mVcdFile, ap_CS_fsm_state134, "ap_CS_fsm_state134");
    sc_trace(mVcdFile, ap_CS_fsm_state135, "ap_CS_fsm_state135");
    sc_trace(mVcdFile, ap_CS_fsm_state136, "ap_CS_fsm_state136");
    sc_trace(mVcdFile, och_0_out_blk_n, "och_0_out_blk_n");
    sc_trace(mVcdFile, reg_257, "reg_257");
    sc_trace(mVcdFile, reg_261, "reg_261");
    sc_trace(mVcdFile, reg_265, "reg_265");
    sc_trace(mVcdFile, reg_269, "reg_269");
    sc_trace(mVcdFile, reg_273, "reg_273");
    sc_trace(mVcdFile, reg_277, "reg_277");
    sc_trace(mVcdFile, reg_281, "reg_281");
    sc_trace(mVcdFile, reg_285, "reg_285");
    sc_trace(mVcdFile, lshr_ln_reg_663, "lshr_ln_reg_663");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state137, "ap_CS_fsm_state137");
    sc_trace(mVcdFile, zext_ln269_fu_317_p1, "zext_ln269_fu_317_p1");
    sc_trace(mVcdFile, tmp_680_i_i_fu_327_p9, "tmp_680_i_i_fu_327_p9");
    sc_trace(mVcdFile, tmp_808_i_i_fu_348_p9, "tmp_808_i_i_fu_348_p9");
    sc_trace(mVcdFile, tmp_936_i_i_fu_369_p9, "tmp_936_i_i_fu_369_p9");
    sc_trace(mVcdFile, tmp_1064_i_i_fu_390_p9, "tmp_1064_i_i_fu_390_p9");
    sc_trace(mVcdFile, tmp_1192_i_i_fu_411_p9, "tmp_1192_i_i_fu_411_p9");
    sc_trace(mVcdFile, tmp_1320_i_i_fu_432_p9, "tmp_1320_i_i_fu_432_p9");
    sc_trace(mVcdFile, tmp_1448_i_i_fu_453_p9, "tmp_1448_i_i_fu_453_p9");
    sc_trace(mVcdFile, tmp_1576_i_i_fu_474_p9, "tmp_1576_i_i_fu_474_p9");
    sc_trace(mVcdFile, tmp_1704_i_i_fu_495_p9, "tmp_1704_i_i_fu_495_p9");
    sc_trace(mVcdFile, tmp_1832_i_i_fu_516_p9, "tmp_1832_i_i_fu_516_p9");
    sc_trace(mVcdFile, tmp_1960_i_i_fu_537_p9, "tmp_1960_i_i_fu_537_p9");
    sc_trace(mVcdFile, tmp_2088_i_i_fu_558_p9, "tmp_2088_i_i_fu_558_p9");
    sc_trace(mVcdFile, tmp_2216_i_i_fu_579_p9, "tmp_2216_i_i_fu_579_p9");
    sc_trace(mVcdFile, tmp_2344_i_i_fu_600_p9, "tmp_2344_i_i_fu_600_p9");
    sc_trace(mVcdFile, tmp_2472_i_i_fu_621_p9, "tmp_2472_i_i_fu_621_p9");
    sc_trace(mVcdFile, tmp_2600_i_i_fu_642_p9, "tmp_2600_i_i_fu_642_p9");
    sc_trace(mVcdFile, shl_ln_fu_289_p3, "shl_ln_fu_289_p3");
    sc_trace(mVcdFile, zext_ln340_fu_297_p1, "zext_ln340_fu_297_p1");
    sc_trace(mVcdFile, add_ln340_fu_301_p2, "add_ln340_fu_301_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fc_load_weight::~fc_load_weight() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fc_load_weight::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, och_0_out_full_n.read())))) {
        lshr_ln_reg_663 = add_ln340_fu_301_p2.read().range(23, 4);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_257 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_261 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_265 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state108.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_269 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_273 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state110.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_277 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_281 = m_axi_ddr_V_RDATA.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()) && 
  esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        reg_285 = m_axi_ddr_V_RDATA.read();
    }
}

void fc_load_weight::thread_add_ln340_fu_301_p2() {
    add_ln340_fu_301_p2 = (!zext_ln340_fu_297_p1.read().is_01() || !ap_const_lv24_88C000.is_01())? sc_lv<24>(): (sc_biguint<24>(zext_ln340_fu_297_p1.read()) + sc_bigint<24>(ap_const_lv24_88C000));
}

void fc_load_weight::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc_load_weight::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fc_load_weight::thread_ap_CS_fsm_state100() {
    ap_CS_fsm_state100 = ap_CS_fsm.read()[99];
}

void fc_load_weight::thread_ap_CS_fsm_state101() {
    ap_CS_fsm_state101 = ap_CS_fsm.read()[100];
}

void fc_load_weight::thread_ap_CS_fsm_state102() {
    ap_CS_fsm_state102 = ap_CS_fsm.read()[101];
}

void fc_load_weight::thread_ap_CS_fsm_state103() {
    ap_CS_fsm_state103 = ap_CS_fsm.read()[102];
}

void fc_load_weight::thread_ap_CS_fsm_state104() {
    ap_CS_fsm_state104 = ap_CS_fsm.read()[103];
}

void fc_load_weight::thread_ap_CS_fsm_state105() {
    ap_CS_fsm_state105 = ap_CS_fsm.read()[104];
}

void fc_load_weight::thread_ap_CS_fsm_state106() {
    ap_CS_fsm_state106 = ap_CS_fsm.read()[105];
}

void fc_load_weight::thread_ap_CS_fsm_state107() {
    ap_CS_fsm_state107 = ap_CS_fsm.read()[106];
}

void fc_load_weight::thread_ap_CS_fsm_state108() {
    ap_CS_fsm_state108 = ap_CS_fsm.read()[107];
}

void fc_load_weight::thread_ap_CS_fsm_state109() {
    ap_CS_fsm_state109 = ap_CS_fsm.read()[108];
}

void fc_load_weight::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void fc_load_weight::thread_ap_CS_fsm_state110() {
    ap_CS_fsm_state110 = ap_CS_fsm.read()[109];
}

void fc_load_weight::thread_ap_CS_fsm_state111() {
    ap_CS_fsm_state111 = ap_CS_fsm.read()[110];
}

void fc_load_weight::thread_ap_CS_fsm_state112() {
    ap_CS_fsm_state112 = ap_CS_fsm.read()[111];
}

void fc_load_weight::thread_ap_CS_fsm_state113() {
    ap_CS_fsm_state113 = ap_CS_fsm.read()[112];
}

void fc_load_weight::thread_ap_CS_fsm_state114() {
    ap_CS_fsm_state114 = ap_CS_fsm.read()[113];
}

void fc_load_weight::thread_ap_CS_fsm_state115() {
    ap_CS_fsm_state115 = ap_CS_fsm.read()[114];
}

void fc_load_weight::thread_ap_CS_fsm_state116() {
    ap_CS_fsm_state116 = ap_CS_fsm.read()[115];
}

void fc_load_weight::thread_ap_CS_fsm_state117() {
    ap_CS_fsm_state117 = ap_CS_fsm.read()[116];
}

void fc_load_weight::thread_ap_CS_fsm_state118() {
    ap_CS_fsm_state118 = ap_CS_fsm.read()[117];
}

void fc_load_weight::thread_ap_CS_fsm_state119() {
    ap_CS_fsm_state119 = ap_CS_fsm.read()[118];
}

void fc_load_weight::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void fc_load_weight::thread_ap_CS_fsm_state120() {
    ap_CS_fsm_state120 = ap_CS_fsm.read()[119];
}

void fc_load_weight::thread_ap_CS_fsm_state121() {
    ap_CS_fsm_state121 = ap_CS_fsm.read()[120];
}

void fc_load_weight::thread_ap_CS_fsm_state122() {
    ap_CS_fsm_state122 = ap_CS_fsm.read()[121];
}

void fc_load_weight::thread_ap_CS_fsm_state123() {
    ap_CS_fsm_state123 = ap_CS_fsm.read()[122];
}

void fc_load_weight::thread_ap_CS_fsm_state124() {
    ap_CS_fsm_state124 = ap_CS_fsm.read()[123];
}

void fc_load_weight::thread_ap_CS_fsm_state125() {
    ap_CS_fsm_state125 = ap_CS_fsm.read()[124];
}

void fc_load_weight::thread_ap_CS_fsm_state126() {
    ap_CS_fsm_state126 = ap_CS_fsm.read()[125];
}

void fc_load_weight::thread_ap_CS_fsm_state127() {
    ap_CS_fsm_state127 = ap_CS_fsm.read()[126];
}

void fc_load_weight::thread_ap_CS_fsm_state128() {
    ap_CS_fsm_state128 = ap_CS_fsm.read()[127];
}

void fc_load_weight::thread_ap_CS_fsm_state129() {
    ap_CS_fsm_state129 = ap_CS_fsm.read()[128];
}

void fc_load_weight::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void fc_load_weight::thread_ap_CS_fsm_state130() {
    ap_CS_fsm_state130 = ap_CS_fsm.read()[129];
}

void fc_load_weight::thread_ap_CS_fsm_state131() {
    ap_CS_fsm_state131 = ap_CS_fsm.read()[130];
}

void fc_load_weight::thread_ap_CS_fsm_state132() {
    ap_CS_fsm_state132 = ap_CS_fsm.read()[131];
}

void fc_load_weight::thread_ap_CS_fsm_state133() {
    ap_CS_fsm_state133 = ap_CS_fsm.read()[132];
}

void fc_load_weight::thread_ap_CS_fsm_state134() {
    ap_CS_fsm_state134 = ap_CS_fsm.read()[133];
}

void fc_load_weight::thread_ap_CS_fsm_state135() {
    ap_CS_fsm_state135 = ap_CS_fsm.read()[134];
}

void fc_load_weight::thread_ap_CS_fsm_state136() {
    ap_CS_fsm_state136 = ap_CS_fsm.read()[135];
}

void fc_load_weight::thread_ap_CS_fsm_state137() {
    ap_CS_fsm_state137 = ap_CS_fsm.read()[136];
}

void fc_load_weight::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void fc_load_weight::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void fc_load_weight::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void fc_load_weight::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void fc_load_weight::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void fc_load_weight::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void fc_load_weight::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc_load_weight::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void fc_load_weight::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void fc_load_weight::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void fc_load_weight::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void fc_load_weight::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void fc_load_weight::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void fc_load_weight::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void fc_load_weight::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void fc_load_weight::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void fc_load_weight::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void fc_load_weight::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void fc_load_weight::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void fc_load_weight::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void fc_load_weight::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void fc_load_weight::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void fc_load_weight::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void fc_load_weight::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void fc_load_weight::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void fc_load_weight::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void fc_load_weight::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void fc_load_weight::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void fc_load_weight::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void fc_load_weight::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void fc_load_weight::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void fc_load_weight::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void fc_load_weight::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void fc_load_weight::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void fc_load_weight::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void fc_load_weight::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void fc_load_weight::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void fc_load_weight::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void fc_load_weight::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void fc_load_weight::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void fc_load_weight::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void fc_load_weight::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void fc_load_weight::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void fc_load_weight::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void fc_load_weight::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void fc_load_weight::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void fc_load_weight::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void fc_load_weight::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void fc_load_weight::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void fc_load_weight::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void fc_load_weight::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void fc_load_weight::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void fc_load_weight::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void fc_load_weight::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void fc_load_weight::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void fc_load_weight::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void fc_load_weight::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void fc_load_weight::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void fc_load_weight::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void fc_load_weight::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void fc_load_weight::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void fc_load_weight::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void fc_load_weight::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void fc_load_weight::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void fc_load_weight::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void fc_load_weight::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void fc_load_weight::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void fc_load_weight::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void fc_load_weight::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void fc_load_weight::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void fc_load_weight::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void fc_load_weight::thread_ap_CS_fsm_state84() {
    ap_CS_fsm_state84 = ap_CS_fsm.read()[83];
}

void fc_load_weight::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[84];
}

void fc_load_weight::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void fc_load_weight::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void fc_load_weight::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[87];
}

void fc_load_weight::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[88];
}

void fc_load_weight::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fc_load_weight::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[89];
}

void fc_load_weight::thread_ap_CS_fsm_state91() {
    ap_CS_fsm_state91 = ap_CS_fsm.read()[90];
}

void fc_load_weight::thread_ap_CS_fsm_state92() {
    ap_CS_fsm_state92 = ap_CS_fsm.read()[91];
}

void fc_load_weight::thread_ap_CS_fsm_state93() {
    ap_CS_fsm_state93 = ap_CS_fsm.read()[92];
}

void fc_load_weight::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void fc_load_weight::thread_ap_CS_fsm_state95() {
    ap_CS_fsm_state95 = ap_CS_fsm.read()[94];
}

void fc_load_weight::thread_ap_CS_fsm_state96() {
    ap_CS_fsm_state96 = ap_CS_fsm.read()[95];
}

void fc_load_weight::thread_ap_CS_fsm_state97() {
    ap_CS_fsm_state97 = ap_CS_fsm.read()[96];
}

void fc_load_weight::thread_ap_CS_fsm_state98() {
    ap_CS_fsm_state98 = ap_CS_fsm.read()[97];
}

void fc_load_weight::thread_ap_CS_fsm_state99() {
    ap_CS_fsm_state99 = ap_CS_fsm.read()[98];
}

void fc_load_weight::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, och_0_out_full_n.read()));
}

void fc_load_weight::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void fc_load_weight::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc_load_weight::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc_load_weight::thread_ddr_V_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ddr_V_blk_n_AR = m_axi_ddr_V_ARREADY.read();
    } else {
        ddr_V_blk_n_AR = ap_const_logic_1;
    }
}

void fc_load_weight::thread_ddr_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state108.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state110.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()))) {
        ddr_V_blk_n_R = m_axi_ddr_V_RVALID.read();
    } else {
        ddr_V_blk_n_R = ap_const_logic_1;
    }
}

void fc_load_weight::thread_m_axi_ddr_V_ARADDR() {
    m_axi_ddr_V_ARADDR =  (sc_lv<32>) (zext_ln269_fu_317_p1.read());
}

void fc_load_weight::thread_m_axi_ddr_V_ARBURST() {
    m_axi_ddr_V_ARBURST = ap_const_lv2_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARCACHE() {
    m_axi_ddr_V_ARCACHE = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARID() {
    m_axi_ddr_V_ARID = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARLEN() {
    m_axi_ddr_V_ARLEN = ap_const_lv32_80;
}

void fc_load_weight::thread_m_axi_ddr_V_ARLOCK() {
    m_axi_ddr_V_ARLOCK = ap_const_lv2_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARPROT() {
    m_axi_ddr_V_ARPROT = ap_const_lv3_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARQOS() {
    m_axi_ddr_V_ARQOS = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARREGION() {
    m_axi_ddr_V_ARREGION = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARSIZE() {
    m_axi_ddr_V_ARSIZE = ap_const_lv3_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARUSER() {
    m_axi_ddr_V_ARUSER = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(m_axi_ddr_V_ARREADY.read(), ap_const_logic_1))) {
        m_axi_ddr_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_ddr_V_ARVALID = ap_const_logic_0;
    }
}

void fc_load_weight::thread_m_axi_ddr_V_AWADDR() {
    m_axi_ddr_V_AWADDR = ap_const_lv32_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWBURST() {
    m_axi_ddr_V_AWBURST = ap_const_lv2_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWCACHE() {
    m_axi_ddr_V_AWCACHE = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWID() {
    m_axi_ddr_V_AWID = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWLEN() {
    m_axi_ddr_V_AWLEN = ap_const_lv32_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWLOCK() {
    m_axi_ddr_V_AWLOCK = ap_const_lv2_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWPROT() {
    m_axi_ddr_V_AWPROT = ap_const_lv3_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWQOS() {
    m_axi_ddr_V_AWQOS = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWREGION() {
    m_axi_ddr_V_AWREGION = ap_const_lv4_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWSIZE() {
    m_axi_ddr_V_AWSIZE = ap_const_lv3_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWUSER() {
    m_axi_ddr_V_AWUSER = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_AWVALID() {
    m_axi_ddr_V_AWVALID = ap_const_logic_0;
}

void fc_load_weight::thread_m_axi_ddr_V_BREADY() {
    m_axi_ddr_V_BREADY = ap_const_logic_0;
}

void fc_load_weight::thread_m_axi_ddr_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state108.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state110.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)))) {
        m_axi_ddr_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_ddr_V_RREADY = ap_const_logic_0;
    }
}

void fc_load_weight::thread_m_axi_ddr_V_WDATA() {
    m_axi_ddr_V_WDATA = ap_const_lv128_lc_1;
}

void fc_load_weight::thread_m_axi_ddr_V_WID() {
    m_axi_ddr_V_WID = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_WLAST() {
    m_axi_ddr_V_WLAST = ap_const_logic_0;
}

void fc_load_weight::thread_m_axi_ddr_V_WSTRB() {
    m_axi_ddr_V_WSTRB = ap_const_lv16_0;
}

void fc_load_weight::thread_m_axi_ddr_V_WUSER() {
    m_axi_ddr_V_WUSER = ap_const_lv1_0;
}

void fc_load_weight::thread_m_axi_ddr_V_WVALID() {
    m_axi_ddr_V_WVALID = ap_const_logic_0;
}

void fc_load_weight::thread_och_0_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        och_0_out_blk_n = och_0_out_full_n.read();
    } else {
        och_0_out_blk_n = ap_const_logic_1;
    }
}

void fc_load_weight::thread_och_0_out_din() {
    och_0_out_din = och_0.read();
}

void fc_load_weight::thread_och_0_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, och_0_out_full_n.read())))) {
        och_0_out_write = ap_const_logic_1;
    } else {
        och_0_out_write = ap_const_logic_0;
    }
}

void fc_load_weight::thread_shl_ln_fu_289_p3() {
    shl_ln_fu_289_p3 = esl_concat<10,11>(och_0.read(), ap_const_lv11_0);
}

void fc_load_weight::thread_tmp_1064_i_i_fu_390_p9() {
    tmp_1064_i_i_fu_390_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1192_i_i_fu_411_p9() {
    tmp_1192_i_i_fu_411_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1320_i_i_fu_432_p9() {
    tmp_1320_i_i_fu_432_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1448_i_i_fu_453_p9() {
    tmp_1448_i_i_fu_453_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1576_i_i_fu_474_p9() {
    tmp_1576_i_i_fu_474_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1704_i_i_fu_495_p9() {
    tmp_1704_i_i_fu_495_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1832_i_i_fu_516_p9() {
    tmp_1832_i_i_fu_516_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_1960_i_i_fu_537_p9() {
    tmp_1960_i_i_fu_537_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_2088_i_i_fu_558_p9() {
    tmp_2088_i_i_fu_558_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_2216_i_i_fu_579_p9() {
    tmp_2216_i_i_fu_579_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_2344_i_i_fu_600_p9() {
    tmp_2344_i_i_fu_600_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_2472_i_i_fu_621_p9() {
    tmp_2472_i_i_fu_621_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_2600_i_i_fu_642_p9() {
    tmp_2600_i_i_fu_642_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_680_i_i_fu_327_p9() {
    tmp_680_i_i_fu_327_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_808_i_i_fu_348_p9() {
    tmp_808_i_i_fu_348_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_tmp_936_i_i_fu_369_p9() {
    tmp_936_i_i_fu_369_p9 = esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(reg_285.read(), reg_281.read()), reg_277.read()), reg_273.read()), reg_269.read()), reg_265.read()), reg_261.read()), reg_257.read());
}

void fc_load_weight::thread_weight_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        weight_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        weight_V_address0 = "XXXX";
    }
}

void fc_load_weight::thread_weight_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()))) {
        weight_V_ce0 = ap_const_logic_1;
    } else {
        weight_V_ce0 = ap_const_logic_0;
    }
}

void fc_load_weight::thread_weight_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
        weight_V_d0 = tmp_2600_i_i_fu_642_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read())) {
        weight_V_d0 = tmp_2472_i_i_fu_621_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read())) {
        weight_V_d0 = tmp_2344_i_i_fu_600_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read())) {
        weight_V_d0 = tmp_2216_i_i_fu_579_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        weight_V_d0 = tmp_2088_i_i_fu_558_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        weight_V_d0 = tmp_1960_i_i_fu_537_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        weight_V_d0 = tmp_1832_i_i_fu_516_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        weight_V_d0 = tmp_1704_i_i_fu_495_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        weight_V_d0 = tmp_1576_i_i_fu_474_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        weight_V_d0 = tmp_1448_i_i_fu_453_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        weight_V_d0 = tmp_1320_i_i_fu_432_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        weight_V_d0 = tmp_1192_i_i_fu_411_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        weight_V_d0 = tmp_1064_i_i_fu_390_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        weight_V_d0 = tmp_936_i_i_fu_369_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        weight_V_d0 = tmp_808_i_i_fu_348_p9.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        weight_V_d0 = tmp_680_i_i_fu_327_p9.read();
    } else {
        weight_V_d0 =  (sc_lv
    }
}

void fc_load_weight::thread_weight_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && 
          esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()))) {
        weight_V_we0 = ap_const_logic_1;
    } else {
        weight_V_we0 = ap_const_logic_0;
    }
}

void fc_load_weight::thread_zext_ln269_fu_317_p1() {
    zext_ln269_fu_317_p1 = esl_zext<64,20>(lshr_ln_reg_663.read());
}

void fc_load_weight::thread_zext_ln340_fu_297_p1() {
    zext_ln340_fu_297_p1 = esl_zext<24,21>(shl_ln_fu_289_p3.read());
}

void fc_load_weight::thread_ap_NS_fsm() {
    if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, och_0_out_full_n.read())))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state11;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state12;
        } else {
            ap_NS_fsm = ap_ST_fsm_state11;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state13;
        } else {
            ap_NS_fsm = ap_ST_fsm_state12;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state13;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state15;
        } else {
            ap_NS_fsm = ap_ST_fsm_state14;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state16;
        } else {
            ap_NS_fsm = ap_ST_fsm_state15;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state17;
        } else {
            ap_NS_fsm = ap_ST_fsm_state16;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state17;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state19;
        } else {
            ap_NS_fsm = ap_ST_fsm_state18;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state20;
        } else {
            ap_NS_fsm = ap_ST_fsm_state19;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state21;
        } else {
            ap_NS_fsm = ap_ST_fsm_state20;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state22;
        } else {
            ap_NS_fsm = ap_ST_fsm_state21;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state23;
        } else {
            ap_NS_fsm = ap_ST_fsm_state22;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state24;
        } else {
            ap_NS_fsm = ap_ST_fsm_state23;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state25;
        } else {
            ap_NS_fsm = ap_ST_fsm_state24;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state26;
        } else {
            ap_NS_fsm = ap_ST_fsm_state25;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state27;
        } else {
            ap_NS_fsm = ap_ST_fsm_state26;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state27;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state29;
        } else {
            ap_NS_fsm = ap_ST_fsm_state28;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state30;
        } else {
            ap_NS_fsm = ap_ST_fsm_state29;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state31;
        } else {
            ap_NS_fsm = ap_ST_fsm_state30;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state32;
        } else {
            ap_NS_fsm = ap_ST_fsm_state31;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state33;
        } else {
            ap_NS_fsm = ap_ST_fsm_state32;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state34;
        } else {
            ap_NS_fsm = ap_ST_fsm_state33;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state35;
        } else {
            ap_NS_fsm = ap_ST_fsm_state34;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state37;
        } else {
            ap_NS_fsm = ap_ST_fsm_state36;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state38;
        } else {
            ap_NS_fsm = ap_ST_fsm_state37;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state39;
        } else {
            ap_NS_fsm = ap_ST_fsm_state38;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state40;
        } else {
            ap_NS_fsm = ap_ST_fsm_state39;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state41;
        } else {
            ap_NS_fsm = ap_ST_fsm_state40;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state43;
        } else {
            ap_NS_fsm = ap_ST_fsm_state42;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state45;
        } else {
            ap_NS_fsm = ap_ST_fsm_state44;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state46;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state47;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state49;
        } else {
            ap_NS_fsm = ap_ST_fsm_state48;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state50;
        } else {
            ap_NS_fsm = ap_ST_fsm_state49;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state51;
        } else {
            ap_NS_fsm = ap_ST_fsm_state50;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_state51;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state53;
        } else {
            ap_NS_fsm = ap_ST_fsm_state52;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state54;
        } else {
            ap_NS_fsm = ap_ST_fsm_state53;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state55;
        } else {
            ap_NS_fsm = ap_ST_fsm_state54;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state56;
        } else {
            ap_NS_fsm = ap_ST_fsm_state55;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state56;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state58;
        } else {
            ap_NS_fsm = ap_ST_fsm_state57;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state59;
        } else {
            ap_NS_fsm = ap_ST_fsm_state58;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state60;
        } else {
            ap_NS_fsm = ap_ST_fsm_state59;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state61;
        } else {
            ap_NS_fsm = ap_ST_fsm_state60;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state62;
        } else {
            ap_NS_fsm = ap_ST_fsm_state61;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state64;
        } else {
            ap_NS_fsm = ap_ST_fsm_state63;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state66;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state67;
        } else {
            ap_NS_fsm = ap_ST_fsm_state66;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state68;
        } else {
            ap_NS_fsm = ap_ST_fsm_state67;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state68;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state70;
        } else {
            ap_NS_fsm = ap_ST_fsm_state69;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state70;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state72;
        } else {
            ap_NS_fsm = ap_ST_fsm_state71;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state73;
        } else {
            ap_NS_fsm = ap_ST_fsm_state72;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state74;
        } else {
            ap_NS_fsm = ap_ST_fsm_state73;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state75;
        } else {
            ap_NS_fsm = ap_ST_fsm_state74;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state76;
        } else {
            ap_NS_fsm = ap_ST_fsm_state75;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state77;
        } else {
            ap_NS_fsm = ap_ST_fsm_state76;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state78;
        } else {
            ap_NS_fsm = ap_ST_fsm_state77;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state79;
        } else {
            ap_NS_fsm = ap_ST_fsm_state78;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state80;
        } else {
            ap_NS_fsm = ap_ST_fsm_state79;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state81;
        } else {
            ap_NS_fsm = ap_ST_fsm_state80;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state82;
        } else {
            ap_NS_fsm = ap_ST_fsm_state81;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state83;
        } else {
            ap_NS_fsm = ap_ST_fsm_state82;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state84;
        } else {
            ap_NS_fsm = ap_ST_fsm_state83;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state85;
        } else {
            ap_NS_fsm = ap_ST_fsm_state84;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state86;
        } else {
            ap_NS_fsm = ap_ST_fsm_state85;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state87;
        } else {
            ap_NS_fsm = ap_ST_fsm_state86;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state88;
        } else {
            ap_NS_fsm = ap_ST_fsm_state87;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state89;
        } else {
            ap_NS_fsm = ap_ST_fsm_state88;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state90;
        } else {
            ap_NS_fsm = ap_ST_fsm_state89;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state91;
        } else {
            ap_NS_fsm = ap_ST_fsm_state90;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state92;
        } else {
            ap_NS_fsm = ap_ST_fsm_state91;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state93;
        } else {
            ap_NS_fsm = ap_ST_fsm_state92;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state94;
        } else {
            ap_NS_fsm = ap_ST_fsm_state93;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state95;
        } else {
            ap_NS_fsm = ap_ST_fsm_state94;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state96;
        } else {
            ap_NS_fsm = ap_ST_fsm_state95;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state97;
        } else {
            ap_NS_fsm = ap_ST_fsm_state96;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state98;
        } else {
            ap_NS_fsm = ap_ST_fsm_state97;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state99;
        } else {
            ap_NS_fsm = ap_ST_fsm_state98;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state100;
        } else {
            ap_NS_fsm = ap_ST_fsm_state99;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state101;
        } else {
            ap_NS_fsm = ap_ST_fsm_state100;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state102;
        } else {
            ap_NS_fsm = ap_ST_fsm_state101;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state103;
        } else {
            ap_NS_fsm = ap_ST_fsm_state102;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state104;
        } else {
            ap_NS_fsm = ap_ST_fsm_state103;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state105;
        } else {
            ap_NS_fsm = ap_ST_fsm_state104;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state106;
        } else {
            ap_NS_fsm = ap_ST_fsm_state105;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state107;
        } else {
            ap_NS_fsm = ap_ST_fsm_state106;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state108;
        } else {
            ap_NS_fsm = ap_ST_fsm_state107;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state108.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state109;
        } else {
            ap_NS_fsm = ap_ST_fsm_state108;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state110;
        } else {
            ap_NS_fsm = ap_ST_fsm_state109;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state110.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state111;
        } else {
            ap_NS_fsm = ap_ST_fsm_state110;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state112;
        } else {
            ap_NS_fsm = ap_ST_fsm_state111;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state113;
        } else {
            ap_NS_fsm = ap_ST_fsm_state112;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state114;
        } else {
            ap_NS_fsm = ap_ST_fsm_state113;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state115;
        } else {
            ap_NS_fsm = ap_ST_fsm_state114;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state116;
        } else {
            ap_NS_fsm = ap_ST_fsm_state115;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state117;
        } else {
            ap_NS_fsm = ap_ST_fsm_state116;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state118;
        } else {
            ap_NS_fsm = ap_ST_fsm_state117;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state119;
        } else {
            ap_NS_fsm = ap_ST_fsm_state118;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state120;
        } else {
            ap_NS_fsm = ap_ST_fsm_state119;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state121;
        } else {
            ap_NS_fsm = ap_ST_fsm_state120;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state122;
        } else {
            ap_NS_fsm = ap_ST_fsm_state121;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state123;
        } else {
            ap_NS_fsm = ap_ST_fsm_state122;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state124;
        } else {
            ap_NS_fsm = ap_ST_fsm_state123;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state125;
        } else {
            ap_NS_fsm = ap_ST_fsm_state124;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state126;
        } else {
            ap_NS_fsm = ap_ST_fsm_state125;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state127;
        } else {
            ap_NS_fsm = ap_ST_fsm_state126;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state128;
        } else {
            ap_NS_fsm = ap_ST_fsm_state127;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state129;
        } else {
            ap_NS_fsm = ap_ST_fsm_state128;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state130;
        } else {
            ap_NS_fsm = ap_ST_fsm_state129;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state131;
        } else {
            ap_NS_fsm = ap_ST_fsm_state130;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state131))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state132;
        } else {
            ap_NS_fsm = ap_ST_fsm_state131;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state132))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state133;
        } else {
            ap_NS_fsm = ap_ST_fsm_state132;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state133))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state134;
        } else {
            ap_NS_fsm = ap_ST_fsm_state133;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state134))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state135;
        } else {
            ap_NS_fsm = ap_ST_fsm_state134;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state135))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state136;
        } else {
            ap_NS_fsm = ap_ST_fsm_state135;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state136))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()) && esl_seteq<1,1,1>(m_axi_ddr_V_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state137;
        } else {
            ap_NS_fsm = ap_ST_fsm_state136;
        }
    }
    else if (esl_seteq<1,137,137>(ap_CS_fsm.read(), ap_ST_fsm_state137))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<137>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

