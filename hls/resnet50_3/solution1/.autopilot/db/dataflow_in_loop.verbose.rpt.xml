<profile>

<section name = "Vivado HLS Report for 'dataflow_in_loop'" level="0">
<item name = "Date">Sun Jun  6 15:19:15 2021
</item>
<item name = "Version">2019.1.3 (Build 2642998 on Wed Sep 04 10:25:22 MDT 2019)</item>
<item name = "Project">resnet50_3</item>
<item name = "Solution">solution1</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu19eg-ffvc1760-2-i</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.750, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">164, 164, 137, 137, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="fc_compute_1_U0">fc_compute_1, 27, 27, 27, 27, none</column>
<column name="fc_load_weight_U0">fc_load_weight, 136, 136, 136, 136, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 2, -</column>
<column name="FIFO">0, -, 5, 22, -</column>
<column name="Instance">-, 69, 1904, 5908, -</column>
<column name="Memory">29, -, 0, 0, 0</column>
<column name="Multiplexer">-, -, -, -, -</column>
<column name="Register">-, -, -, -, -</column>
<specialColumn name="Available">1968, 1968, 1045440, 522720, 128</specialColumn>
<specialColumn name="Utilization (%)">1, 3, ~0, 1, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="fc_compute_1_U0">fc_compute_1, 0, 69, 729, 5052, 0</column>
<column name="fc_load_weight_U0">fc_load_weight, 0, 0, 1175, 856, 0</column>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="weight_V_U">dataflow_in_loop_weight_V, 29, 0, 0, 0, 16, 1024, 2, 32768</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="och_0_c_U">0, 5, 0, -, 2, 10, 20</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, dataflow_in_loop, return value</column>
<column name="m_axi_ddr_V_AWVALID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWREADY">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWADDR">out, 32, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWLEN">out, 32, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWSIZE">out, 3, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWBURST">out, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWLOCK">out, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWCACHE">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWPROT">out, 3, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWQOS">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWREGION">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_AWUSER">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WVALID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WREADY">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WDATA">out, 128, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WSTRB">out, 16, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WLAST">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_WUSER">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARVALID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARREADY">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARADDR">out, 32, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARID">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARLEN">out, 32, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARSIZE">out, 3, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARBURST">out, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARLOCK">out, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARCACHE">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARPROT">out, 3, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARQOS">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARREGION">out, 4, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_ARUSER">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RVALID">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RREADY">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RDATA">in, 128, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RLAST">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RID">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RUSER">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_RRESP">in, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_BVALID">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_BREADY">out, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_BRESP">in, 2, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_BID">in, 1, m_axi, ddr_V, pointer</column>
<column name="m_axi_ddr_V_BUSER">in, 1, m_axi, ddr_V, pointer</column>
<column name="och_0">in, 10, ap_none, och_0, scalar</column>
<column name="och_0_ap_vld">in, 1, ap_none, och_0, scalar</column>
<column name="input_V_address0">out, 4, ap_memory, input_V, array</column>
<column name="input_V_ce0">out, 1, ap_memory, input_V, array</column>
<column name="input_V_d0">out, 1024, ap_memory, input_V, array</column>
<column name="input_V_q0">in, 1024, ap_memory, input_V, array</column>
<column name="input_V_we0">out, 1, ap_memory, input_V, array</column>
<column name="input_V_address1">out, 4, ap_memory, input_V, array</column>
<column name="input_V_ce1">out, 1, ap_memory, input_V, array</column>
<column name="input_V_d1">out, 1024, ap_memory, input_V, array</column>
<column name="input_V_q1">in, 1024, ap_memory, input_V, array</column>
<column name="input_V_we1">out, 1, ap_memory, input_V, array</column>
<column name="bias_address0">out, 10, ap_memory, bias, array</column>
<column name="bias_ce0">out, 1, ap_memory, bias, array</column>
<column name="bias_d0">out, 32, ap_memory, bias, array</column>
<column name="bias_q0">in, 32, ap_memory, bias, array</column>
<column name="bias_we0">out, 1, ap_memory, bias, array</column>
<column name="bias_address1">out, 10, ap_memory, bias, array</column>
<column name="bias_ce1">out, 1, ap_memory, bias, array</column>
<column name="bias_d1">out, 32, ap_memory, bias, array</column>
<column name="bias_q1">in, 32, ap_memory, bias, array</column>
<column name="bias_we1">out, 1, ap_memory, bias, array</column>
<column name="scale_address0">out, 10, ap_memory, scale, array</column>
<column name="scale_ce0">out, 1, ap_memory, scale, array</column>
<column name="scale_d0">out, 32, ap_memory, scale, array</column>
<column name="scale_q0">in, 32, ap_memory, scale, array</column>
<column name="scale_we0">out, 1, ap_memory, scale, array</column>
<column name="scale_address1">out, 10, ap_memory, scale, array</column>
<column name="scale_ce1">out, 1, ap_memory, scale, array</column>
<column name="scale_d1">out, 32, ap_memory, scale, array</column>
<column name="scale_q1">in, 32, ap_memory, scale, array</column>
<column name="scale_we1">out, 1, ap_memory, scale, array</column>
<column name="output_r_address0">out, 10, ap_memory, output_r, array</column>
<column name="output_r_ce0">out, 1, ap_memory, output_r, array</column>
<column name="output_r_d0">out, 32, ap_memory, output_r, array</column>
<column name="output_r_q0">in, 32, ap_memory, output_r, array</column>
<column name="output_r_we0">out, 1, ap_memory, output_r, array</column>
</table>
</item>
</section>
</profile>
