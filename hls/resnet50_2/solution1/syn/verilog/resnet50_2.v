// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="resnet50_2,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=434,HLS_SYN_DSP=1448,HLS_SYN_FF=152731,HLS_SYN_LUT=276614,HLS_VERSION=2019_1_3}" *)

module resnet50_2 (
        ap_clk,
        ap_rst_n,
        sw0in_V_TDATA,
        sw0in_V_TVALID,
        sw0in_V_TREADY,
        sw0out_V_TDATA,
        sw0out_V_TVALID,
        sw0out_V_TREADY,
        m_axi_ddr_V_AWVALID,
        m_axi_ddr_V_AWREADY,
        m_axi_ddr_V_AWADDR,
        m_axi_ddr_V_AWID,
        m_axi_ddr_V_AWLEN,
        m_axi_ddr_V_AWSIZE,
        m_axi_ddr_V_AWBURST,
        m_axi_ddr_V_AWLOCK,
        m_axi_ddr_V_AWCACHE,
        m_axi_ddr_V_AWPROT,
        m_axi_ddr_V_AWQOS,
        m_axi_ddr_V_AWREGION,
        m_axi_ddr_V_AWUSER,
        m_axi_ddr_V_WVALID,
        m_axi_ddr_V_WREADY,
        m_axi_ddr_V_WDATA,
        m_axi_ddr_V_WSTRB,
        m_axi_ddr_V_WLAST,
        m_axi_ddr_V_WID,
        m_axi_ddr_V_WUSER,
        m_axi_ddr_V_ARVALID,
        m_axi_ddr_V_ARREADY,
        m_axi_ddr_V_ARADDR,
        m_axi_ddr_V_ARID,
        m_axi_ddr_V_ARLEN,
        m_axi_ddr_V_ARSIZE,
        m_axi_ddr_V_ARBURST,
        m_axi_ddr_V_ARLOCK,
        m_axi_ddr_V_ARCACHE,
        m_axi_ddr_V_ARPROT,
        m_axi_ddr_V_ARQOS,
        m_axi_ddr_V_ARREGION,
        m_axi_ddr_V_ARUSER,
        m_axi_ddr_V_RVALID,
        m_axi_ddr_V_RREADY,
        m_axi_ddr_V_RDATA,
        m_axi_ddr_V_RLAST,
        m_axi_ddr_V_RID,
        m_axi_ddr_V_RUSER,
        m_axi_ddr_V_RRESP,
        m_axi_ddr_V_BVALID,
        m_axi_ddr_V_BREADY,
        m_axi_ddr_V_BRESP,
        m_axi_ddr_V_BID,
        m_axi_ddr_V_BUSER,
        startt_V_TDATA,
        startt_V_TVALID,
        startt_V_TREADY,
        stopt_V_TDATA,
        stopt_V_TVALID,
        stopt_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 53'd1;
parameter    ap_ST_fsm_state2 = 53'd2;
parameter    ap_ST_fsm_state3 = 53'd4;
parameter    ap_ST_fsm_state4 = 53'd8;
parameter    ap_ST_fsm_state5 = 53'd16;
parameter    ap_ST_fsm_state6 = 53'd32;
parameter    ap_ST_fsm_state7 = 53'd64;
parameter    ap_ST_fsm_state8 = 53'd128;
parameter    ap_ST_fsm_state9 = 53'd256;
parameter    ap_ST_fsm_state10 = 53'd512;
parameter    ap_ST_fsm_state11 = 53'd1024;
parameter    ap_ST_fsm_state12 = 53'd2048;
parameter    ap_ST_fsm_state13 = 53'd4096;
parameter    ap_ST_fsm_state14 = 53'd8192;
parameter    ap_ST_fsm_state15 = 53'd16384;
parameter    ap_ST_fsm_state16 = 53'd32768;
parameter    ap_ST_fsm_state17 = 53'd65536;
parameter    ap_ST_fsm_state18 = 53'd131072;
parameter    ap_ST_fsm_state19 = 53'd262144;
parameter    ap_ST_fsm_state20 = 53'd524288;
parameter    ap_ST_fsm_state21 = 53'd1048576;
parameter    ap_ST_fsm_state22 = 53'd2097152;
parameter    ap_ST_fsm_state23 = 53'd4194304;
parameter    ap_ST_fsm_state24 = 53'd8388608;
parameter    ap_ST_fsm_state25 = 53'd16777216;
parameter    ap_ST_fsm_state26 = 53'd33554432;
parameter    ap_ST_fsm_state27 = 53'd67108864;
parameter    ap_ST_fsm_state28 = 53'd134217728;
parameter    ap_ST_fsm_state29 = 53'd268435456;
parameter    ap_ST_fsm_state30 = 53'd536870912;
parameter    ap_ST_fsm_state31 = 53'd1073741824;
parameter    ap_ST_fsm_state32 = 53'd2147483648;
parameter    ap_ST_fsm_state33 = 53'd4294967296;
parameter    ap_ST_fsm_state34 = 53'd8589934592;
parameter    ap_ST_fsm_state35 = 53'd17179869184;
parameter    ap_ST_fsm_state36 = 53'd34359738368;
parameter    ap_ST_fsm_state37 = 53'd68719476736;
parameter    ap_ST_fsm_state38 = 53'd137438953472;
parameter    ap_ST_fsm_state39 = 53'd274877906944;
parameter    ap_ST_fsm_state40 = 53'd549755813888;
parameter    ap_ST_fsm_state41 = 53'd1099511627776;
parameter    ap_ST_fsm_state42 = 53'd2199023255552;
parameter    ap_ST_fsm_state43 = 53'd4398046511104;
parameter    ap_ST_fsm_state44 = 53'd8796093022208;
parameter    ap_ST_fsm_state45 = 53'd17592186044416;
parameter    ap_ST_fsm_state46 = 53'd35184372088832;
parameter    ap_ST_fsm_state47 = 53'd70368744177664;
parameter    ap_ST_fsm_state48 = 53'd140737488355328;
parameter    ap_ST_fsm_state49 = 53'd281474976710656;
parameter    ap_ST_fsm_pp2_stage0 = 53'd562949953421312;
parameter    ap_ST_fsm_state53 = 53'd1125899906842624;
parameter    ap_ST_fsm_state54 = 53'd2251799813685248;
parameter    ap_ST_fsm_state55 = 53'd4503599627370496;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DDR_V_ID_WIDTH = 1;
parameter    C_M_AXI_DDR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_DDR_V_DATA_WIDTH = 128;
parameter    C_M_AXI_DDR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_DDR_V_USER_VALUE = 0;
parameter    C_M_AXI_DDR_V_PROT_VALUE = 0;
parameter    C_M_AXI_DDR_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DDR_V_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [175:0] sw0in_V_TDATA;
input   sw0in_V_TVALID;
output   sw0in_V_TREADY;
output  [175:0] sw0out_V_TDATA;
output   sw0out_V_TVALID;
input   sw0out_V_TREADY;
output   m_axi_ddr_V_AWVALID;
input   m_axi_ddr_V_AWREADY;
output  [C_M_AXI_DDR_V_ADDR_WIDTH - 1:0] m_axi_ddr_V_AWADDR;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_AWID;
output  [7:0] m_axi_ddr_V_AWLEN;
output  [2:0] m_axi_ddr_V_AWSIZE;
output  [1:0] m_axi_ddr_V_AWBURST;
output  [1:0] m_axi_ddr_V_AWLOCK;
output  [3:0] m_axi_ddr_V_AWCACHE;
output  [2:0] m_axi_ddr_V_AWPROT;
output  [3:0] m_axi_ddr_V_AWQOS;
output  [3:0] m_axi_ddr_V_AWREGION;
output  [C_M_AXI_DDR_V_AWUSER_WIDTH - 1:0] m_axi_ddr_V_AWUSER;
output   m_axi_ddr_V_WVALID;
input   m_axi_ddr_V_WREADY;
output  [C_M_AXI_DDR_V_DATA_WIDTH - 1:0] m_axi_ddr_V_WDATA;
output  [C_M_AXI_DDR_V_WSTRB_WIDTH - 1:0] m_axi_ddr_V_WSTRB;
output   m_axi_ddr_V_WLAST;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_WID;
output  [C_M_AXI_DDR_V_WUSER_WIDTH - 1:0] m_axi_ddr_V_WUSER;
output   m_axi_ddr_V_ARVALID;
input   m_axi_ddr_V_ARREADY;
output  [C_M_AXI_DDR_V_ADDR_WIDTH - 1:0] m_axi_ddr_V_ARADDR;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_ARID;
output  [7:0] m_axi_ddr_V_ARLEN;
output  [2:0] m_axi_ddr_V_ARSIZE;
output  [1:0] m_axi_ddr_V_ARBURST;
output  [1:0] m_axi_ddr_V_ARLOCK;
output  [3:0] m_axi_ddr_V_ARCACHE;
output  [2:0] m_axi_ddr_V_ARPROT;
output  [3:0] m_axi_ddr_V_ARQOS;
output  [3:0] m_axi_ddr_V_ARREGION;
output  [C_M_AXI_DDR_V_ARUSER_WIDTH - 1:0] m_axi_ddr_V_ARUSER;
input   m_axi_ddr_V_RVALID;
output   m_axi_ddr_V_RREADY;
input  [C_M_AXI_DDR_V_DATA_WIDTH - 1:0] m_axi_ddr_V_RDATA;
input   m_axi_ddr_V_RLAST;
input  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_RID;
input  [C_M_AXI_DDR_V_RUSER_WIDTH - 1:0] m_axi_ddr_V_RUSER;
input  [1:0] m_axi_ddr_V_RRESP;
input   m_axi_ddr_V_BVALID;
output   m_axi_ddr_V_BREADY;
input  [1:0] m_axi_ddr_V_BRESP;
input  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_BID;
input  [C_M_AXI_DDR_V_BUSER_WIDTH - 1:0] m_axi_ddr_V_BUSER;
output  [7:0] startt_V_TDATA;
output   startt_V_TVALID;
input   startt_V_TREADY;
output  [7:0] stopt_V_TDATA;
output   stopt_V_TVALID;
input   stopt_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [52:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [175:0] sw0in_V_0_data_out;
wire    sw0in_V_0_vld_in;
wire    sw0in_V_0_vld_out;
wire    sw0in_V_0_ack_in;
reg    sw0in_V_0_ack_out;
reg   [175:0] sw0in_V_0_payload_A;
reg   [175:0] sw0in_V_0_payload_B;
reg    sw0in_V_0_sel_rd;
reg    sw0in_V_0_sel_wr;
wire    sw0in_V_0_sel;
wire    sw0in_V_0_load_A;
wire    sw0in_V_0_load_B;
reg   [1:0] sw0in_V_0_state;
wire    sw0in_V_0_state_cmp_full;
reg   [175:0] sw0out_V_1_data_out;
reg    sw0out_V_1_vld_in;
wire    sw0out_V_1_vld_out;
wire    sw0out_V_1_ack_in;
wire    sw0out_V_1_ack_out;
reg   [175:0] sw0out_V_1_payload_A;
reg   [175:0] sw0out_V_1_payload_B;
reg    sw0out_V_1_sel_rd;
reg    sw0out_V_1_sel_wr;
wire    sw0out_V_1_sel;
wire    sw0out_V_1_load_A;
wire    sw0out_V_1_load_B;
reg   [1:0] sw0out_V_1_state;
wire    sw0out_V_1_state_cmp_full;
reg   [7:0] startt_V_1_data_out;
reg    startt_V_1_vld_in;
wire    startt_V_1_vld_out;
wire    startt_V_1_ack_in;
wire    startt_V_1_ack_out;
reg   [7:0] startt_V_1_payload_A;
reg   [7:0] startt_V_1_payload_B;
reg    startt_V_1_sel_rd;
reg    startt_V_1_sel_wr;
wire    startt_V_1_sel;
wire    startt_V_1_load_A;
wire    startt_V_1_load_B;
reg   [1:0] startt_V_1_state;
wire    startt_V_1_state_cmp_full;
reg   [7:0] stopt_V_1_data_out;
reg    stopt_V_1_vld_in;
wire    stopt_V_1_vld_out;
wire    stopt_V_1_ack_in;
wire    stopt_V_1_ack_out;
reg   [7:0] stopt_V_1_payload_A;
reg   [7:0] stopt_V_1_payload_B;
reg    stopt_V_1_sel_rd;
reg    stopt_V_1_sel_wr;
wire    stopt_V_1_sel;
wire    stopt_V_1_load_A;
wire    stopt_V_1_load_B;
reg   [1:0] stopt_V_1_state;
wire    stopt_V_1_state_cmp_full;
reg   [12:0] buf2_V_address0;
reg    buf2_V_ce0;
wire   [287:0] buf2_V_q0;
reg   [12:0] buf2_V_address1;
reg    buf2_V_ce1;
reg    buf2_V_we1;
reg   [287:0] buf2_V_d1;
reg    outbuf_V_ce0;
wire   [1535:0] outbuf_V_q0;
reg   [11:0] outbuf_V_address1;
reg    outbuf_V_ce1;
reg    outbuf_V_we1;
reg   [1535:0] outbuf_V_d1;
reg   [12:0] buf1_V_address0;
reg    buf1_V_ce0;
wire   [287:0] buf1_V_q0;
reg    buf1_V_ce1;
reg    buf1_V_we1;
reg   [12:0] buf0_V_address0;
reg    buf0_V_ce0;
wire   [287:0] buf0_V_q0;
reg   [12:0] buf0_V_address1;
reg    buf0_V_ce1;
reg    buf0_V_we1;
reg   [287:0] buf0_V_d1;
reg    sw0in_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln276_fu_702_p2;
wire    ap_CS_fsm_state3;
reg    sw0out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln324_reg_2567;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln324_reg_2567_pp2_iter1_reg;
reg    startt_V_TDATA_blk_n;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    stopt_V_TDATA_blk_n;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ddr_V_AWREADY;
wire    ddr_V_WREADY;
reg    ddr_V_ARVALID;
wire    ddr_V_ARREADY;
wire    ddr_V_RVALID;
reg    ddr_V_RREADY;
wire   [127:0] ddr_V_RDATA;
wire    ddr_V_RLAST;
wire   [0:0] ddr_V_RID;
wire   [0:0] ddr_V_RUSER;
wire   [1:0] ddr_V_RRESP;
wire    ddr_V_BVALID;
wire   [1:0] ddr_V_BRESP;
wire   [0:0] ddr_V_BID;
wire   [0:0] ddr_V_BUSER;
reg   [12:0] indvar_flatten_reg_415;
reg   [11:0] s_0_reg_426;
reg   [1:0] i3_0_reg_437;
wire   [12:0] l_fu_708_p2;
reg   [12:0] l_reg_2463;
reg    ap_block_state2;
wire   [7:0] trunc_ln647_fu_714_p1;
reg   [7:0] trunc_ln647_reg_2468;
wire   [7:0] grp_fu_542_p4;
reg   [7:0] p_Result_0_1_reg_2473;
wire   [7:0] grp_fu_552_p4;
reg   [7:0] p_Result_0_2_reg_2478;
wire   [7:0] grp_fu_562_p4;
reg   [7:0] p_Result_0_3_reg_2483;
wire   [7:0] grp_fu_572_p4;
reg   [7:0] p_Result_0_4_reg_2488;
wire   [7:0] grp_fu_582_p4;
reg   [7:0] p_Result_0_5_reg_2493;
wire   [7:0] grp_fu_592_p4;
reg   [7:0] p_Result_0_6_reg_2498;
wire   [7:0] grp_fu_602_p4;
reg   [7:0] p_Result_0_7_reg_2503;
wire   [7:0] grp_fu_612_p4;
reg   [7:0] p_Result_0_8_reg_2508;
wire   [7:0] grp_fu_622_p4;
reg   [7:0] p_Result_0_9_reg_2513;
wire   [7:0] grp_fu_632_p4;
reg   [7:0] p_Result_0_s_reg_2518;
wire   [7:0] grp_fu_642_p4;
reg   [7:0] p_Result_0_10_reg_2523;
wire   [7:0] grp_fu_652_p4;
reg   [7:0] p_Result_0_11_reg_2528;
wire   [7:0] grp_fu_662_p4;
reg   [7:0] p_Result_0_12_reg_2533;
wire   [7:0] grp_fu_672_p4;
reg   [7:0] p_Result_0_13_reg_2538;
wire   [7:0] grp_fu_682_p4;
reg   [7:0] p_Result_0_14_reg_2543;
wire   [7:0] zext_ln321_fu_908_p1;
wire   [11:0] i_fu_919_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln324_fu_930_p2;
wire    ap_block_state50_pp2_stage0_iter0;
wire    ap_block_state51_pp2_stage0_iter1;
reg    ap_block_state51_io;
wire    ap_block_state52_pp2_stage0_iter2;
reg    ap_block_state52_io;
reg    ap_block_pp2_stage0_11001;
wire   [12:0] add_ln324_fu_936_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [11:0] select_ln330_1_fu_962_p3;
reg   [11:0] select_ln330_1_reg_2576;
wire   [0:0] trunc_ln214_fu_975_p1;
reg   [0:0] trunc_ln214_reg_2581;
wire   [1:0] i_1_fu_979_p2;
wire   [175:0] zext_ln332_fu_2445_p1;
wire   [7:0] zext_ln321_1_fu_2455_p1;
wire    ap_CS_fsm_state49;
wire    grp_add_fu_506_ap_ready;
wire    grp_add_fu_506_ap_done;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state50;
wire    grp_conv_layer_fu_448_ap_start;
wire    grp_conv_layer_fu_448_ap_done;
wire    grp_conv_layer_fu_448_ap_idle;
wire    grp_conv_layer_fu_448_ap_ready;
wire   [12:0] grp_conv_layer_fu_448_input_V_address0;
wire    grp_conv_layer_fu_448_input_V_ce0;
reg   [287:0] grp_conv_layer_fu_448_input_V_q0;
wire   [12:0] grp_conv_layer_fu_448_output_V_address1;
wire    grp_conv_layer_fu_448_output_V_ce1;
wire    grp_conv_layer_fu_448_output_V_we1;
wire   [287:0] grp_conv_layer_fu_448_output_V_d1;
wire   [11:0] grp_conv_layer_fu_448_outbuf_V_4_address0;
wire    grp_conv_layer_fu_448_outbuf_V_4_ce0;
wire   [11:0] grp_conv_layer_fu_448_outbuf_V_4_address1;
wire    grp_conv_layer_fu_448_outbuf_V_4_ce1;
wire    grp_conv_layer_fu_448_outbuf_V_4_we1;
wire   [1535:0] grp_conv_layer_fu_448_outbuf_V_4_d1;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_AWVALID;
wire   [31:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWADDR;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWID;
wire   [31:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWLEN;
wire   [2:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWSIZE;
wire   [1:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWBURST;
wire   [1:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWLOCK;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWCACHE;
wire   [2:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWPROT;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWQOS;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWREGION;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_AWUSER;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_WVALID;
wire   [127:0] grp_conv_layer_fu_448_m_axi_ddr_V_WDATA;
wire   [15:0] grp_conv_layer_fu_448_m_axi_ddr_V_WSTRB;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_WLAST;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_WID;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_WUSER;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_ARVALID;
wire   [31:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARADDR;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARID;
wire   [31:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARLEN;
wire   [2:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARSIZE;
wire   [1:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARBURST;
wire   [1:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARLOCK;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARCACHE;
wire   [2:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARPROT;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARQOS;
wire   [3:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARREGION;
wire   [0:0] grp_conv_layer_fu_448_m_axi_ddr_V_ARUSER;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_RREADY;
wire    grp_conv_layer_fu_448_m_axi_ddr_V_BREADY;
reg   [4:0] grp_conv_layer_fu_448_OSIZE;
reg   [6:0] grp_conv_layer_fu_448_TO_r;
reg   [6:0] grp_conv_layer_fu_448_TI;
reg   [3:0] grp_conv_layer_fu_448_K;
reg   [3:0] grp_conv_layer_fu_448_S;
reg   [0:0] grp_conv_layer_fu_448_P;
reg   [24:0] grp_conv_layer_fu_448_OFFSET;
wire    grp_add_fu_506_ap_start;
wire    grp_add_fu_506_ap_idle;
wire   [12:0] grp_add_fu_506_input1_V_address0;
wire    grp_add_fu_506_input1_V_ce0;
reg   [287:0] grp_add_fu_506_input1_V_q0;
wire   [12:0] grp_add_fu_506_input2_V_address0;
wire    grp_add_fu_506_input2_V_ce0;
reg   [287:0] grp_add_fu_506_input2_V_q0;
wire   [12:0] grp_add_fu_506_output_V_address1;
wire    grp_add_fu_506_output_V_ce1;
wire    grp_add_fu_506_output_V_we1;
wire   [287:0] grp_add_fu_506_output_V_d1;
reg   [4:0] grp_add_fu_506_OSIZE;
reg   [7:0] grp_add_fu_506_TI;
reg   [31:0] grp_add_fu_506_SCALE1;
reg   [31:0] grp_add_fu_506_SCALE2;
reg   [12:0] l_0_reg_392;
reg   [11:0] i1_0_reg_404;
wire   [0:0] icmp_ln291_fu_913_p2;
reg   [11:0] ap_phi_mux_s_0_phi_fu_430_p4;
reg    grp_conv_layer_fu_448_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
reg    grp_add_fu_506_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln284_fu_718_p1;
wire   [63:0] zext_ln294_fu_925_p1;
wire   [63:0] zext_ln330_fu_970_p1;
reg   [168:0] p_0114_1_fu_316;
wire   [168:0] p_Result_22_s_fu_2433_p5;
wire    ap_block_pp2_stage0_01001;
wire   [287:0] zext_ln180_fu_903_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state53;
wire   [7:0] trunc_ln647_1_fu_771_p1;
wire   [8:0] zext_ln78_30_fu_831_p1;
wire   [8:0] zext_ln78_29_fu_827_p1;
wire   [8:0] zext_ln78_28_fu_823_p1;
wire   [8:0] zext_ln78_27_fu_819_p1;
wire   [8:0] zext_ln78_26_fu_815_p1;
wire   [8:0] zext_ln78_25_fu_811_p1;
wire   [8:0] zext_ln78_24_fu_807_p1;
wire   [8:0] zext_ln78_23_fu_803_p1;
wire   [8:0] zext_ln78_22_fu_799_p1;
wire   [8:0] zext_ln78_21_fu_795_p1;
wire   [8:0] zext_ln78_20_fu_791_p1;
wire   [8:0] zext_ln78_19_fu_787_p1;
wire   [8:0] zext_ln78_18_fu_783_p1;
wire   [8:0] zext_ln78_17_fu_779_p1;
wire   [8:0] zext_ln78_16_fu_775_p1;
wire   [8:0] zext_ln78_15_fu_768_p1;
wire   [8:0] zext_ln78_14_fu_765_p1;
wire   [8:0] zext_ln78_13_fu_762_p1;
wire   [8:0] zext_ln78_12_fu_759_p1;
wire   [8:0] zext_ln78_11_fu_756_p1;
wire   [8:0] zext_ln78_10_fu_753_p1;
wire   [8:0] zext_ln78_9_fu_750_p1;
wire   [8:0] zext_ln78_8_fu_747_p1;
wire   [8:0] zext_ln78_7_fu_744_p1;
wire   [8:0] zext_ln78_6_fu_741_p1;
wire   [8:0] zext_ln78_5_fu_738_p1;
wire   [8:0] zext_ln78_4_fu_735_p1;
wire   [8:0] zext_ln78_3_fu_732_p1;
wire   [8:0] zext_ln78_2_fu_729_p1;
wire   [8:0] zext_ln78_1_fu_726_p1;
wire   [8:0] zext_ln78_fu_723_p1;
wire   [286:0] tmp_fu_835_p33;
wire   [3:0] grp_fu_692_p4;
wire   [0:0] icmp_ln325_fu_942_p2;
wire   [11:0] add_ln324_1_fu_956_p2;
wire   [1:0] select_ln330_fu_948_p3;
wire   [7:0] tmp_358_fu_995_p5;
wire   [7:0] empty_30_fu_1005_p2;
wire   [8:0] zext_ln214_fu_1017_p1;
wire   [8:0] zext_ln214_1_fu_1021_p1;
wire   [0:0] icmp_ln214_fu_1011_p2;
wire   [8:0] sub_ln214_fu_1035_p2;
wire   [8:0] sub_ln214_2_fu_1047_p2;
reg   [287:0] tmp_517_fu_1025_p4;
wire   [8:0] sub_ln214_1_fu_1041_p2;
wire   [8:0] select_ln214_fu_1053_p3;
wire   [8:0] select_ln214_2_fu_1069_p3;
wire   [8:0] sub_ln214_3_fu_1077_p2;
wire   [287:0] select_ln214_1_fu_1061_p3;
wire   [287:0] zext_ln214_2_fu_1083_p1;
wire   [287:0] zext_ln214_3_fu_1087_p1;
wire   [287:0] lshr_ln214_fu_1091_p2;
wire   [287:0] lshr_ln214_1_fu_1097_p2;
wire   [287:0] and_ln214_fu_1103_p2;
wire   [4:0] shl_ln_fu_988_p3;
wire   [4:0] or_ln214_fu_1113_p2;
wire   [2:0] tmp_359_fu_1125_p4;
wire   [4:0] empty_31_fu_1119_p2;
wire   [7:0] tmp_360_fu_1135_p3;
wire   [8:0] p_cast226_fu_1147_p1;
wire   [8:0] empty_32_fu_1151_p2;
wire   [9:0] p_cast227_fu_1143_p1;
wire   [9:0] p_cast225_fu_1157_p1;
wire   [8:0] zext_ln214_4_fu_1167_p1;
wire   [0:0] icmp_ln214_1_fu_1161_p2;
wire   [8:0] sub_ln214_4_fu_1181_p2;
wire   [8:0] sub_ln214_6_fu_1193_p2;
reg   [287:0] tmp_518_fu_1171_p4;
wire   [8:0] sub_ln214_5_fu_1187_p2;
wire   [8:0] select_ln214_3_fu_1199_p3;
wire   [8:0] select_ln214_5_fu_1215_p3;
wire   [8:0] sub_ln214_7_fu_1223_p2;
wire   [287:0] select_ln214_4_fu_1207_p3;
wire   [287:0] zext_ln214_5_fu_1229_p1;
wire   [287:0] zext_ln214_6_fu_1233_p1;
wire   [287:0] lshr_ln214_2_fu_1237_p2;
wire   [287:0] lshr_ln214_3_fu_1243_p2;
wire   [287:0] and_ln214_1_fu_1249_p2;
wire   [4:0] or_ln214_1_fu_1259_p2;
wire   [7:0] p_shl1_fu_1269_p3;
wire   [8:0] zext_ln214_2_cast224_fu_1265_p1;
wire   [8:0] p_shl181_cast_fu_1277_p1;
wire   [8:0] empty_33_fu_1281_p2;
wire   [8:0] empty_34_fu_1287_p2;
wire   [0:0] icmp_ln214_2_fu_1293_p2;
wire   [8:0] sub_ln214_8_fu_1309_p2;
wire   [8:0] sub_ln214_10_fu_1321_p2;
reg   [287:0] tmp_519_fu_1299_p4;
wire   [8:0] sub_ln214_9_fu_1315_p2;
wire   [8:0] select_ln214_6_fu_1327_p3;
wire   [8:0] select_ln214_8_fu_1343_p3;
wire   [8:0] sub_ln214_11_fu_1351_p2;
wire   [287:0] select_ln214_7_fu_1335_p3;
wire   [287:0] zext_ln214_7_fu_1357_p1;
wire   [287:0] zext_ln214_8_fu_1361_p1;
wire   [287:0] lshr_ln214_4_fu_1365_p2;
wire   [287:0] lshr_ln214_5_fu_1371_p2;
wire   [287:0] and_ln214_2_fu_1377_p2;
wire   [4:0] or_ln214_2_fu_1387_p2;
wire   [7:0] p_shl2_fu_1397_p3;
wire   [8:0] zext_ln214_3_cast221_fu_1393_p1;
wire   [8:0] p_shl180_cast_fu_1405_p1;
wire   [8:0] empty_35_fu_1409_p2;
wire   [287:0] zext_ln214_9_fu_1415_p1;
wire   [287:0] lshr_ln214_6_fu_1419_p2;
wire   [4:0] or_ln214_3_fu_1429_p2;
wire   [2:0] tmp_361_fu_1435_p4;
wire   [7:0] tmp_362_fu_1445_p3;
wire   [7:0] empty_36_fu_1453_p2;
wire   [8:0] zext_ln214_10_fu_1465_p1;
wire   [8:0] zext_ln214_11_fu_1469_p1;
wire   [0:0] icmp_ln214_3_fu_1459_p2;
wire   [8:0] sub_ln214_12_fu_1483_p2;
wire   [8:0] sub_ln214_14_fu_1495_p2;
reg   [287:0] tmp_520_fu_1473_p4;
wire   [8:0] sub_ln214_13_fu_1489_p2;
wire   [8:0] select_ln214_9_fu_1501_p3;
wire   [8:0] select_ln214_11_fu_1517_p3;
wire   [8:0] sub_ln214_15_fu_1525_p2;
wire   [287:0] select_ln214_10_fu_1509_p3;
wire   [287:0] zext_ln214_12_fu_1531_p1;
wire   [287:0] zext_ln214_13_fu_1535_p1;
wire   [287:0] lshr_ln214_7_fu_1539_p2;
wire   [287:0] lshr_ln214_8_fu_1545_p2;
wire   [287:0] and_ln214_3_fu_1551_p2;
wire   [4:0] or_ln214_4_fu_1561_p2;
wire   [2:0] tmp_363_fu_1573_p4;
wire   [4:0] empty_37_fu_1567_p2;
wire   [7:0] tmp_364_fu_1583_p3;
wire   [8:0] empty_38_fu_1591_p1;
wire   [8:0] empty_39_fu_1599_p2;
wire   [9:0] p_cast214_fu_1595_p1;
wire   [9:0] p_cast213_fu_1605_p1;
wire   [8:0] zext_ln214_14_fu_1615_p1;
wire   [0:0] icmp_ln214_4_fu_1609_p2;
wire   [8:0] sub_ln214_16_fu_1629_p2;
wire   [8:0] sub_ln214_18_fu_1641_p2;
reg   [287:0] tmp_521_fu_1619_p4;
wire   [8:0] sub_ln214_17_fu_1635_p2;
wire   [8:0] select_ln214_12_fu_1647_p3;
wire   [8:0] select_ln214_14_fu_1663_p3;
wire   [8:0] sub_ln214_19_fu_1671_p2;
wire   [287:0] select_ln214_13_fu_1655_p3;
wire   [287:0] zext_ln214_15_fu_1677_p1;
wire   [287:0] zext_ln214_16_fu_1681_p1;
wire   [287:0] lshr_ln214_9_fu_1685_p2;
wire   [287:0] lshr_ln214_10_fu_1691_p2;
wire   [287:0] and_ln214_4_fu_1697_p2;
wire   [4:0] or_ln214_5_fu_1707_p2;
wire   [7:0] p_shl3_fu_1717_p3;
wire   [8:0] zext_ln214_6_cast212_fu_1713_p1;
wire   [8:0] p_shl177_cast_fu_1725_p1;
wire   [8:0] empty_40_fu_1729_p2;
wire   [8:0] empty_41_fu_1735_p2;
wire   [0:0] icmp_ln214_5_fu_1741_p2;
wire   [8:0] sub_ln214_20_fu_1757_p2;
wire   [8:0] sub_ln214_22_fu_1769_p2;
reg   [287:0] tmp_522_fu_1747_p4;
wire   [8:0] sub_ln214_21_fu_1763_p2;
wire   [8:0] select_ln214_15_fu_1775_p3;
wire   [8:0] select_ln214_17_fu_1791_p3;
wire   [8:0] sub_ln214_23_fu_1799_p2;
wire   [287:0] select_ln214_16_fu_1783_p3;
wire   [287:0] zext_ln214_17_fu_1805_p1;
wire   [287:0] zext_ln214_18_fu_1809_p1;
wire   [287:0] lshr_ln214_11_fu_1813_p2;
wire   [287:0] lshr_ln214_12_fu_1819_p2;
wire   [287:0] and_ln214_5_fu_1825_p2;
wire   [4:0] or_ln214_6_fu_1835_p2;
wire   [7:0] p_shl4_fu_1845_p3;
wire   [8:0] zext_ln214_7_cast209_fu_1841_p1;
wire   [8:0] p_shl176_cast_fu_1853_p1;
wire   [8:0] empty_42_fu_1857_p2;
wire   [287:0] zext_ln214_19_fu_1863_p1;
wire   [287:0] lshr_ln214_13_fu_1867_p2;
wire   [4:0] or_ln214_7_fu_1877_p2;
wire   [2:0] tmp_365_fu_1883_p4;
wire   [7:0] tmp_366_fu_1893_p3;
wire   [8:0] empty_43_fu_1901_p1;
wire   [8:0] empty_44_fu_1909_p2;
wire   [9:0] p_cast205_fu_1905_p1;
wire   [9:0] p_cast204_fu_1915_p1;
wire   [8:0] zext_ln214_20_fu_1925_p1;
wire   [0:0] icmp_ln214_6_fu_1919_p2;
wire   [8:0] sub_ln214_24_fu_1939_p2;
wire   [8:0] sub_ln214_26_fu_1951_p2;
reg   [287:0] tmp_523_fu_1929_p4;
wire   [8:0] sub_ln214_25_fu_1945_p2;
wire   [8:0] select_ln214_18_fu_1957_p3;
wire   [8:0] select_ln214_20_fu_1973_p3;
wire   [8:0] sub_ln214_27_fu_1981_p2;
wire   [287:0] select_ln214_19_fu_1965_p3;
wire   [287:0] zext_ln214_21_fu_1987_p1;
wire   [287:0] zext_ln214_22_fu_1991_p1;
wire   [287:0] lshr_ln214_14_fu_1995_p2;
wire   [287:0] lshr_ln214_15_fu_2001_p2;
wire   [287:0] and_ln214_6_fu_2007_p2;
wire   [7:0] p_shl5_fu_2021_p3;
wire   [8:0] zext_ln214_9_cast203_fu_2017_p1;
wire   [8:0] p_shl174_cast_fu_2029_p1;
wire   [8:0] empty_45_fu_2033_p2;
wire   [287:0] zext_ln214_23_fu_2039_p1;
wire   [287:0] lshr_ln214_16_fu_2043_p2;
wire   [4:0] or_ln214_8_fu_2053_p2;
wire   [7:0] p_shl6_fu_2063_p3;
wire   [8:0] zext_ln214_10_cast20_fu_2059_p1;
wire   [8:0] p_shl173_cast_fu_2071_p1;
wire   [8:0] empty_46_fu_2075_p2;
wire   [287:0] zext_ln214_24_fu_2081_p1;
wire   [287:0] lshr_ln214_17_fu_2085_p2;
wire   [4:0] or_ln214_9_fu_2095_p2;
wire   [7:0] p_shl7_fu_2105_p3;
wire   [8:0] zext_ln214_11_cast19_fu_2101_p1;
wire   [8:0] p_shl172_cast_fu_2113_p1;
wire   [8:0] empty_47_fu_2117_p2;
wire   [287:0] zext_ln214_25_fu_2123_p1;
wire   [287:0] lshr_ln214_18_fu_2127_p2;
wire   [4:0] or_ln214_10_fu_2137_p2;
wire   [2:0] tmp_367_fu_2143_p4;
wire   [7:0] tmp_368_fu_2153_p3;
wire   [8:0] empty_48_fu_2161_p1;
wire   [8:0] empty_49_fu_2169_p2;
wire   [9:0] p_cast193_fu_2165_p1;
wire   [9:0] p_cast192_fu_2175_p1;
wire   [8:0] zext_ln214_26_fu_2185_p1;
wire   [0:0] icmp_ln214_7_fu_2179_p2;
wire   [8:0] sub_ln214_28_fu_2199_p2;
wire   [8:0] sub_ln214_30_fu_2211_p2;
reg   [287:0] tmp_524_fu_2189_p4;
wire   [8:0] sub_ln214_29_fu_2205_p2;
wire   [8:0] select_ln214_21_fu_2217_p3;
wire   [8:0] select_ln214_23_fu_2233_p3;
wire   [8:0] sub_ln214_31_fu_2241_p2;
wire   [287:0] select_ln214_22_fu_2225_p3;
wire   [287:0] zext_ln214_27_fu_2247_p1;
wire   [287:0] zext_ln214_28_fu_2251_p1;
wire   [287:0] lshr_ln214_19_fu_2255_p2;
wire   [287:0] lshr_ln214_20_fu_2261_p2;
wire   [287:0] and_ln214_7_fu_2267_p2;
wire   [7:0] p_shl8_fu_2281_p3;
wire   [8:0] zext_ln214_13_cast19_fu_2277_p1;
wire   [8:0] p_shl170_cast_fu_2289_p1;
wire   [8:0] empty_50_fu_2293_p2;
wire   [287:0] zext_ln214_29_fu_2299_p1;
wire   [287:0] lshr_ln214_21_fu_2303_p2;
wire   [4:0] or_ln214_11_fu_2313_p2;
wire   [7:0] p_shl9_fu_2323_p3;
wire   [8:0] zext_ln214_14_cast18_fu_2319_p1;
wire   [8:0] p_shl169_cast_fu_2331_p1;
wire   [8:0] empty_51_fu_2335_p2;
wire   [287:0] zext_ln214_30_fu_2341_p1;
wire   [287:0] lshr_ln214_22_fu_2345_p2;
wire   [4:0] or_ln214_12_fu_2355_p2;
wire   [7:0] p_shl_fu_2365_p3;
wire   [8:0] zext_ln214_15_cast18_fu_2361_p1;
wire   [8:0] p_shl_cast_fu_2373_p1;
wire   [8:0] empty_52_fu_2377_p2;
wire   [287:0] zext_ln214_31_fu_2383_p1;
wire   [287:0] lshr_ln214_23_fu_2387_p2;
wire   [7:0] trunc_ln214_16_fu_2393_p1;
wire   [7:0] trunc_ln214_15_fu_2351_p1;
wire   [7:0] trunc_ln214_14_fu_2309_p1;
wire   [7:0] trunc_ln214_13_fu_2273_p1;
wire   [7:0] trunc_ln214_12_fu_2133_p1;
wire   [7:0] trunc_ln214_11_fu_2091_p1;
wire   [7:0] trunc_ln214_10_fu_2049_p1;
wire   [7:0] trunc_ln214_9_fu_2013_p1;
wire   [7:0] trunc_ln214_8_fu_1873_p1;
wire   [7:0] trunc_ln214_7_fu_1831_p1;
wire   [7:0] trunc_ln214_6_fu_1703_p1;
wire   [7:0] trunc_ln214_5_fu_1557_p1;
wire   [7:0] trunc_ln214_4_fu_1425_p1;
wire   [7:0] trunc_ln214_3_fu_1383_p1;
wire   [7:0] trunc_ln214_2_fu_1255_p1;
wire   [7:0] trunc_ln214_1_fu_1109_p1;
wire   [127:0] tmp_369_fu_2397_p17;
reg    ap_block_state55;
reg   [52:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 53'd1;
#0 sw0in_V_0_sel_rd = 1'b0;
#0 sw0in_V_0_sel_wr = 1'b0;
#0 sw0in_V_0_state = 2'd0;
#0 sw0out_V_1_sel_rd = 1'b0;
#0 sw0out_V_1_sel_wr = 1'b0;
#0 sw0out_V_1_state = 2'd0;
#0 startt_V_1_sel_rd = 1'b0;
#0 startt_V_1_sel_wr = 1'b0;
#0 startt_V_1_state = 2'd0;
#0 stopt_V_1_sel_rd = 1'b0;
#0 stopt_V_1_sel_wr = 1'b0;
#0 stopt_V_1_state = 2'd0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 grp_conv_layer_fu_448_ap_start_reg = 1'b0;
#0 grp_add_fu_506_ap_start_reg = 1'b0;
end

resnet50_2_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 6272 ),
    .AddressWidth( 13 ))
buf2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf2_V_address0),
    .ce0(buf2_V_ce0),
    .q0(buf2_V_q0),
    .address1(buf2_V_address1),
    .ce1(buf2_V_ce1),
    .we1(buf2_V_we1),
    .d1(buf2_V_d1)
);

resnet50_2_outbuf_V #(
    .DataWidth( 1536 ),
    .AddressRange( 3136 ),
    .AddressWidth( 12 ))
outbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_conv_layer_fu_448_outbuf_V_4_address0),
    .ce0(outbuf_V_ce0),
    .q0(outbuf_V_q0),
    .address1(outbuf_V_address1),
    .ce1(outbuf_V_ce1),
    .we1(outbuf_V_we1),
    .d1(outbuf_V_d1)
);

resnet50_2_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 6272 ),
    .AddressWidth( 13 ))
buf1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf1_V_address0),
    .ce0(buf1_V_ce0),
    .q0(buf1_V_q0),
    .address1(grp_conv_layer_fu_448_output_V_address1),
    .ce1(buf1_V_ce1),
    .we1(buf1_V_we1),
    .d1(grp_conv_layer_fu_448_output_V_d1)
);

resnet50_2_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 6272 ),
    .AddressWidth( 13 ))
buf0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf0_V_address0),
    .ce0(buf0_V_ce0),
    .q0(buf0_V_q0),
    .address1(buf0_V_address1),
    .ce1(buf0_V_ce1),
    .we1(buf0_V_we1),
    .d1(buf0_V_d1)
);

resnet50_2_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
resnet50_2_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

resnet50_2_ddr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 128 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DDR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DDR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DDR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DDR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DDR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DDR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DDR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DDR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DDR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DDR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DDR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DDR_V_CACHE_VALUE ))
resnet50_2_ddr_V_m_axi_U(
    .AWVALID(m_axi_ddr_V_AWVALID),
    .AWREADY(m_axi_ddr_V_AWREADY),
    .AWADDR(m_axi_ddr_V_AWADDR),
    .AWID(m_axi_ddr_V_AWID),
    .AWLEN(m_axi_ddr_V_AWLEN),
    .AWSIZE(m_axi_ddr_V_AWSIZE),
    .AWBURST(m_axi_ddr_V_AWBURST),
    .AWLOCK(m_axi_ddr_V_AWLOCK),
    .AWCACHE(m_axi_ddr_V_AWCACHE),
    .AWPROT(m_axi_ddr_V_AWPROT),
    .AWQOS(m_axi_ddr_V_AWQOS),
    .AWREGION(m_axi_ddr_V_AWREGION),
    .AWUSER(m_axi_ddr_V_AWUSER),
    .WVALID(m_axi_ddr_V_WVALID),
    .WREADY(m_axi_ddr_V_WREADY),
    .WDATA(m_axi_ddr_V_WDATA),
    .WSTRB(m_axi_ddr_V_WSTRB),
    .WLAST(m_axi_ddr_V_WLAST),
    .WID(m_axi_ddr_V_WID),
    .WUSER(m_axi_ddr_V_WUSER),
    .ARVALID(m_axi_ddr_V_ARVALID),
    .ARREADY(m_axi_ddr_V_ARREADY),
    .ARADDR(m_axi_ddr_V_ARADDR),
    .ARID(m_axi_ddr_V_ARID),
    .ARLEN(m_axi_ddr_V_ARLEN),
    .ARSIZE(m_axi_ddr_V_ARSIZE),
    .ARBURST(m_axi_ddr_V_ARBURST),
    .ARLOCK(m_axi_ddr_V_ARLOCK),
    .ARCACHE(m_axi_ddr_V_ARCACHE),
    .ARPROT(m_axi_ddr_V_ARPROT),
    .ARQOS(m_axi_ddr_V_ARQOS),
    .ARREGION(m_axi_ddr_V_ARREGION),
    .ARUSER(m_axi_ddr_V_ARUSER),
    .RVALID(m_axi_ddr_V_RVALID),
    .RREADY(m_axi_ddr_V_RREADY),
    .RDATA(m_axi_ddr_V_RDATA),
    .RLAST(m_axi_ddr_V_RLAST),
    .RID(m_axi_ddr_V_RID),
    .RUSER(m_axi_ddr_V_RUSER),
    .RRESP(m_axi_ddr_V_RRESP),
    .BVALID(m_axi_ddr_V_BVALID),
    .BREADY(m_axi_ddr_V_BREADY),
    .BRESP(m_axi_ddr_V_BRESP),
    .BID(m_axi_ddr_V_BID),
    .BUSER(m_axi_ddr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(ddr_V_ARVALID),
    .I_ARREADY(ddr_V_ARREADY),
    .I_ARADDR(grp_conv_layer_fu_448_m_axi_ddr_V_ARADDR),
    .I_ARID(grp_conv_layer_fu_448_m_axi_ddr_V_ARID),
    .I_ARLEN(grp_conv_layer_fu_448_m_axi_ddr_V_ARLEN),
    .I_ARSIZE(grp_conv_layer_fu_448_m_axi_ddr_V_ARSIZE),
    .I_ARLOCK(grp_conv_layer_fu_448_m_axi_ddr_V_ARLOCK),
    .I_ARCACHE(grp_conv_layer_fu_448_m_axi_ddr_V_ARCACHE),
    .I_ARQOS(grp_conv_layer_fu_448_m_axi_ddr_V_ARQOS),
    .I_ARPROT(grp_conv_layer_fu_448_m_axi_ddr_V_ARPROT),
    .I_ARUSER(grp_conv_layer_fu_448_m_axi_ddr_V_ARUSER),
    .I_ARBURST(grp_conv_layer_fu_448_m_axi_ddr_V_ARBURST),
    .I_ARREGION(grp_conv_layer_fu_448_m_axi_ddr_V_ARREGION),
    .I_RVALID(ddr_V_RVALID),
    .I_RREADY(ddr_V_RREADY),
    .I_RDATA(ddr_V_RDATA),
    .I_RID(ddr_V_RID),
    .I_RUSER(ddr_V_RUSER),
    .I_RRESP(ddr_V_RRESP),
    .I_RLAST(ddr_V_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(ddr_V_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(ddr_V_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(ddr_V_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(ddr_V_BRESP),
    .I_BID(ddr_V_BID),
    .I_BUSER(ddr_V_BUSER)
);

conv_layer grp_conv_layer_fu_448(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_layer_fu_448_ap_start),
    .ap_done(grp_conv_layer_fu_448_ap_done),
    .ap_idle(grp_conv_layer_fu_448_ap_idle),
    .ap_ready(grp_conv_layer_fu_448_ap_ready),
    .input_V_address0(grp_conv_layer_fu_448_input_V_address0),
    .input_V_ce0(grp_conv_layer_fu_448_input_V_ce0),
    .input_V_q0(grp_conv_layer_fu_448_input_V_q0),
    .output_V_address1(grp_conv_layer_fu_448_output_V_address1),
    .output_V_ce1(grp_conv_layer_fu_448_output_V_ce1),
    .output_V_we1(grp_conv_layer_fu_448_output_V_we1),
    .output_V_d1(grp_conv_layer_fu_448_output_V_d1),
    .outbuf_V_4_address0(grp_conv_layer_fu_448_outbuf_V_4_address0),
    .outbuf_V_4_ce0(grp_conv_layer_fu_448_outbuf_V_4_ce0),
    .outbuf_V_4_q0(outbuf_V_q0),
    .outbuf_V_4_address1(grp_conv_layer_fu_448_outbuf_V_4_address1),
    .outbuf_V_4_ce1(grp_conv_layer_fu_448_outbuf_V_4_ce1),
    .outbuf_V_4_we1(grp_conv_layer_fu_448_outbuf_V_4_we1),
    .outbuf_V_4_d1(grp_conv_layer_fu_448_outbuf_V_4_d1),
    .m_axi_ddr_V_AWVALID(grp_conv_layer_fu_448_m_axi_ddr_V_AWVALID),
    .m_axi_ddr_V_AWREADY(1'b0),
    .m_axi_ddr_V_AWADDR(grp_conv_layer_fu_448_m_axi_ddr_V_AWADDR),
    .m_axi_ddr_V_AWID(grp_conv_layer_fu_448_m_axi_ddr_V_AWID),
    .m_axi_ddr_V_AWLEN(grp_conv_layer_fu_448_m_axi_ddr_V_AWLEN),
    .m_axi_ddr_V_AWSIZE(grp_conv_layer_fu_448_m_axi_ddr_V_AWSIZE),
    .m_axi_ddr_V_AWBURST(grp_conv_layer_fu_448_m_axi_ddr_V_AWBURST),
    .m_axi_ddr_V_AWLOCK(grp_conv_layer_fu_448_m_axi_ddr_V_AWLOCK),
    .m_axi_ddr_V_AWCACHE(grp_conv_layer_fu_448_m_axi_ddr_V_AWCACHE),
    .m_axi_ddr_V_AWPROT(grp_conv_layer_fu_448_m_axi_ddr_V_AWPROT),
    .m_axi_ddr_V_AWQOS(grp_conv_layer_fu_448_m_axi_ddr_V_AWQOS),
    .m_axi_ddr_V_AWREGION(grp_conv_layer_fu_448_m_axi_ddr_V_AWREGION),
    .m_axi_ddr_V_AWUSER(grp_conv_layer_fu_448_m_axi_ddr_V_AWUSER),
    .m_axi_ddr_V_WVALID(grp_conv_layer_fu_448_m_axi_ddr_V_WVALID),
    .m_axi_ddr_V_WREADY(1'b0),
    .m_axi_ddr_V_WDATA(grp_conv_layer_fu_448_m_axi_ddr_V_WDATA),
    .m_axi_ddr_V_WSTRB(grp_conv_layer_fu_448_m_axi_ddr_V_WSTRB),
    .m_axi_ddr_V_WLAST(grp_conv_layer_fu_448_m_axi_ddr_V_WLAST),
    .m_axi_ddr_V_WID(grp_conv_layer_fu_448_m_axi_ddr_V_WID),
    .m_axi_ddr_V_WUSER(grp_conv_layer_fu_448_m_axi_ddr_V_WUSER),
    .m_axi_ddr_V_ARVALID(grp_conv_layer_fu_448_m_axi_ddr_V_ARVALID),
    .m_axi_ddr_V_ARREADY(ddr_V_ARREADY),
    .m_axi_ddr_V_ARADDR(grp_conv_layer_fu_448_m_axi_ddr_V_ARADDR),
    .m_axi_ddr_V_ARID(grp_conv_layer_fu_448_m_axi_ddr_V_ARID),
    .m_axi_ddr_V_ARLEN(grp_conv_layer_fu_448_m_axi_ddr_V_ARLEN),
    .m_axi_ddr_V_ARSIZE(grp_conv_layer_fu_448_m_axi_ddr_V_ARSIZE),
    .m_axi_ddr_V_ARBURST(grp_conv_layer_fu_448_m_axi_ddr_V_ARBURST),
    .m_axi_ddr_V_ARLOCK(grp_conv_layer_fu_448_m_axi_ddr_V_ARLOCK),
    .m_axi_ddr_V_ARCACHE(grp_conv_layer_fu_448_m_axi_ddr_V_ARCACHE),
    .m_axi_ddr_V_ARPROT(grp_conv_layer_fu_448_m_axi_ddr_V_ARPROT),
    .m_axi_ddr_V_ARQOS(grp_conv_layer_fu_448_m_axi_ddr_V_ARQOS),
    .m_axi_ddr_V_ARREGION(grp_conv_layer_fu_448_m_axi_ddr_V_ARREGION),
    .m_axi_ddr_V_ARUSER(grp_conv_layer_fu_448_m_axi_ddr_V_ARUSER),
    .m_axi_ddr_V_RVALID(ddr_V_RVALID),
    .m_axi_ddr_V_RREADY(grp_conv_layer_fu_448_m_axi_ddr_V_RREADY),
    .m_axi_ddr_V_RDATA(ddr_V_RDATA),
    .m_axi_ddr_V_RLAST(ddr_V_RLAST),
    .m_axi_ddr_V_RID(ddr_V_RID),
    .m_axi_ddr_V_RUSER(ddr_V_RUSER),
    .m_axi_ddr_V_RRESP(ddr_V_RRESP),
    .m_axi_ddr_V_BVALID(1'b0),
    .m_axi_ddr_V_BREADY(grp_conv_layer_fu_448_m_axi_ddr_V_BREADY),
    .m_axi_ddr_V_BRESP(2'd0),
    .m_axi_ddr_V_BID(1'd0),
    .m_axi_ddr_V_BUSER(1'd0),
    .OSIZE(grp_conv_layer_fu_448_OSIZE),
    .TO_r(grp_conv_layer_fu_448_TO_r),
    .TI(grp_conv_layer_fu_448_TI),
    .K(grp_conv_layer_fu_448_K),
    .S(grp_conv_layer_fu_448_S),
    .P(grp_conv_layer_fu_448_P),
    .OFFSET(grp_conv_layer_fu_448_OFFSET)
);

add grp_add_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_add_fu_506_ap_start),
    .ap_done(grp_add_fu_506_ap_done),
    .ap_idle(grp_add_fu_506_ap_idle),
    .ap_ready(grp_add_fu_506_ap_ready),
    .input1_V_address0(grp_add_fu_506_input1_V_address0),
    .input1_V_ce0(grp_add_fu_506_input1_V_ce0),
    .input1_V_q0(grp_add_fu_506_input1_V_q0),
    .input2_V_address0(grp_add_fu_506_input2_V_address0),
    .input2_V_ce0(grp_add_fu_506_input2_V_ce0),
    .input2_V_q0(grp_add_fu_506_input2_V_q0),
    .output_V_address1(grp_add_fu_506_output_V_address1),
    .output_V_ce1(grp_add_fu_506_output_V_ce1),
    .output_V_we1(grp_add_fu_506_output_V_we1),
    .output_V_d1(grp_add_fu_506_output_V_d1),
    .OSIZE(grp_add_fu_506_OSIZE),
    .TI(grp_add_fu_506_TI),
    .SCALE1(grp_add_fu_506_SCALE1),
    .SCALE2(grp_add_fu_506_SCALE2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state50) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state50)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state50);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_add_fu_506_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14))) begin
            grp_add_fu_506_ap_start_reg <= 1'b1;
        end else if ((grp_add_fu_506_ap_ready == 1'b1)) begin
            grp_add_fu_506_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_layer_fu_448_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
            grp_conv_layer_fu_448_ap_start_reg <= 1'b1;
        end else if ((grp_conv_layer_fu_448_ap_ready == 1'b1)) begin
            grp_conv_layer_fu_448_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_sel_rd <= 1'b0;
    end else begin
        if (((startt_V_1_ack_out == 1'b1) & (startt_V_1_vld_out == 1'b1))) begin
            startt_V_1_sel_rd <= ~startt_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_sel_wr <= 1'b0;
    end else begin
        if (((startt_V_1_ack_in == 1'b1) & (startt_V_1_vld_in == 1'b1))) begin
            startt_V_1_sel_wr <= ~startt_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_state <= 2'd0;
    end else begin
        if ((((startt_V_1_vld_in == 1'b0) & (startt_V_1_state == 2'd2)) | ((startt_V_1_vld_in == 1'b0) & (startt_V_1_ack_out == 1'b1) & (startt_V_1_state == 2'd3)))) begin
            startt_V_1_state <= 2'd2;
        end else if ((((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd1)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_vld_in == 1'b1) & (startt_V_1_state == 2'd3)))) begin
            startt_V_1_state <= 2'd1;
        end else if (((~((startt_V_1_vld_in == 1'b0) & (startt_V_1_ack_out == 1'b1)) & ~((startt_V_TREADY == 1'b0) & (startt_V_1_vld_in == 1'b1)) & (startt_V_1_state == 2'd3)) | ((startt_V_1_ack_out == 1'b1) & (startt_V_1_state == 2'd1)) | ((startt_V_1_vld_in == 1'b1) & (startt_V_1_state == 2'd2)))) begin
            startt_V_1_state <= 2'd3;
        end else begin
            startt_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stopt_V_1_ack_out == 1'b1) & (stopt_V_1_vld_out == 1'b1))) begin
            stopt_V_1_sel_rd <= ~stopt_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stopt_V_1_ack_in == 1'b1) & (stopt_V_1_vld_in == 1'b1))) begin
            stopt_V_1_sel_wr <= ~stopt_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_state <= 2'd0;
    end else begin
        if ((((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_state == 2'd2)) | ((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_ack_out == 1'b1) & (stopt_V_1_state == 2'd3)))) begin
            stopt_V_1_state <= 2'd2;
        end else if ((((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd1)) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_vld_in == 1'b1) & (stopt_V_1_state == 2'd3)))) begin
            stopt_V_1_state <= 2'd1;
        end else if (((~((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_ack_out == 1'b1)) & ~((stopt_V_TREADY == 1'b0) & (stopt_V_1_vld_in == 1'b1)) & (stopt_V_1_state == 2'd3)) | ((stopt_V_1_ack_out == 1'b1) & (stopt_V_1_state == 2'd1)) | ((stopt_V_1_vld_in == 1'b1) & (stopt_V_1_state == 2'd2)))) begin
            stopt_V_1_state <= 2'd3;
        end else begin
            stopt_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_sel_rd <= 1'b0;
    end else begin
        if (((sw0in_V_0_ack_out == 1'b1) & (sw0in_V_0_vld_out == 1'b1))) begin
            sw0in_V_0_sel_rd <= ~sw0in_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_sel_wr <= 1'b0;
    end else begin
        if (((sw0in_V_0_ack_in == 1'b1) & (sw0in_V_0_vld_in == 1'b1))) begin
            sw0in_V_0_sel_wr <= ~sw0in_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_state <= 2'd0;
    end else begin
        if ((((sw0in_V_0_state == 2'd2) & (sw0in_V_0_vld_in == 1'b0)) | ((sw0in_V_0_state == 2'd3) & (sw0in_V_0_vld_in == 1'b0) & (sw0in_V_0_ack_out == 1'b1)))) begin
            sw0in_V_0_state <= 2'd2;
        end else if ((((sw0in_V_0_state == 2'd1) & (sw0in_V_0_ack_out == 1'b0)) | ((sw0in_V_0_state == 2'd3) & (sw0in_V_0_ack_out == 1'b0) & (sw0in_V_0_vld_in == 1'b1)))) begin
            sw0in_V_0_state <= 2'd1;
        end else if (((~((sw0in_V_0_vld_in == 1'b0) & (sw0in_V_0_ack_out == 1'b1)) & ~((sw0in_V_0_ack_out == 1'b0) & (sw0in_V_0_vld_in == 1'b1)) & (sw0in_V_0_state == 2'd3)) | ((sw0in_V_0_state == 2'd1) & (sw0in_V_0_ack_out == 1'b1)) | ((sw0in_V_0_state == 2'd2) & (sw0in_V_0_vld_in == 1'b1)))) begin
            sw0in_V_0_state <= 2'd3;
        end else begin
            sw0in_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_vld_out == 1'b1))) begin
            sw0out_V_1_sel_rd <= ~sw0out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((sw0out_V_1_ack_in == 1'b1) & (sw0out_V_1_vld_in == 1'b1))) begin
            sw0out_V_1_sel_wr <= ~sw0out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_state <= 2'd0;
    end else begin
        if ((((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_state == 2'd2)) | ((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_state == 2'd3)))) begin
            sw0out_V_1_state <= 2'd2;
        end else if ((((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd1)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_vld_in == 1'b1) & (sw0out_V_1_state == 2'd3)))) begin
            sw0out_V_1_state <= 2'd1;
        end else if (((~((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_ack_out == 1'b1)) & ~((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_vld_in == 1'b1)) & (sw0out_V_1_state == 2'd3)) | ((sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_state == 2'd1)) | ((sw0out_V_1_vld_in == 1'b1) & (sw0out_V_1_state == 2'd2)))) begin
            sw0out_V_1_state <= 2'd3;
        end else begin
            sw0out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_fu_913_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i1_0_reg_404 <= i_fu_919_p2;
    end else if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_404 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_930_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i3_0_reg_437 <= i_1_fu_979_p2;
    end else if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        i3_0_reg_437 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_930_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_415 <= add_ln324_fu_936_p2;
    end else if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        indvar_flatten_reg_415 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((sw0in_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        l_0_reg_392 <= l_reg_2463;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l_0_reg_392 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2567 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        s_0_reg_426 <= select_ln330_1_reg_2576;
    end else if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        s_0_reg_426 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln324_reg_2567 <= icmp_ln324_fu_930_p2;
        icmp_ln324_reg_2567_pp2_iter1_reg <= icmp_ln324_reg_2567;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        l_reg_2463 <= l_fu_708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2567 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_0114_1_fu_316 <= p_Result_22_s_fu_2433_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0)) & (icmp_ln276_fu_702_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Result_0_10_reg_2523 <= {{sw0in_V_0_data_out[95:88]}};
        p_Result_0_11_reg_2528 <= {{sw0in_V_0_data_out[103:96]}};
        p_Result_0_12_reg_2533 <= {{sw0in_V_0_data_out[111:104]}};
        p_Result_0_13_reg_2538 <= {{sw0in_V_0_data_out[119:112]}};
        p_Result_0_14_reg_2543 <= {{sw0in_V_0_data_out[127:120]}};
        p_Result_0_1_reg_2473 <= {{sw0in_V_0_data_out[15:8]}};
        p_Result_0_2_reg_2478 <= {{sw0in_V_0_data_out[23:16]}};
        p_Result_0_3_reg_2483 <= {{sw0in_V_0_data_out[31:24]}};
        p_Result_0_4_reg_2488 <= {{sw0in_V_0_data_out[39:32]}};
        p_Result_0_5_reg_2493 <= {{sw0in_V_0_data_out[47:40]}};
        p_Result_0_6_reg_2498 <= {{sw0in_V_0_data_out[55:48]}};
        p_Result_0_7_reg_2503 <= {{sw0in_V_0_data_out[63:56]}};
        p_Result_0_8_reg_2508 <= {{sw0in_V_0_data_out[71:64]}};
        p_Result_0_9_reg_2513 <= {{sw0in_V_0_data_out[79:72]}};
        p_Result_0_s_reg_2518 <= {{sw0in_V_0_data_out[87:80]}};
        trunc_ln647_reg_2468 <= trunc_ln647_fu_714_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_930_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln330_1_reg_2576 <= select_ln330_1_fu_962_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((startt_V_1_load_A == 1'b1)) begin
        startt_V_1_payload_A <= zext_ln321_fu_908_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((startt_V_1_load_B == 1'b1)) begin
        startt_V_1_payload_B <= zext_ln321_fu_908_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((stopt_V_1_load_A == 1'b1)) begin
        stopt_V_1_payload_A <= zext_ln321_1_fu_2455_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((stopt_V_1_load_B == 1'b1)) begin
        stopt_V_1_payload_B <= zext_ln321_1_fu_2455_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0in_V_0_load_A == 1'b1)) begin
        sw0in_V_0_payload_A <= sw0in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0in_V_0_load_B == 1'b1)) begin
        sw0in_V_0_payload_B <= sw0in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0out_V_1_load_A == 1'b1)) begin
        sw0out_V_1_payload_A <= zext_ln332_fu_2445_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0out_V_1_load_B == 1'b1)) begin
        sw0out_V_1_payload_B <= zext_ln332_fu_2445_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_930_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln214_reg_2581 <= trunc_ln214_fu_975_p1;
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_930_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln324_reg_2567 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_s_0_phi_fu_430_p4 = select_ln330_1_reg_2576;
    end else begin
        ap_phi_mux_s_0_phi_fu_430_p4 = s_0_reg_426;
    end
end

always @ (*) begin
    if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state55))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        buf0_V_address0 = grp_add_fu_506_input2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf0_V_address0 = grp_add_fu_506_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state45))) begin
        buf0_V_address0 = grp_conv_layer_fu_448_input_V_address0;
    end else begin
        buf0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf0_V_address1 = grp_add_fu_506_output_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state47))) begin
        buf0_V_address1 = grp_conv_layer_fu_448_output_V_address1;
    end else begin
        buf0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        buf0_V_ce0 = grp_add_fu_506_input2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf0_V_ce0 = grp_add_fu_506_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state45))) begin
        buf0_V_ce0 = grp_conv_layer_fu_448_input_V_ce0;
    end else begin
        buf0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf0_V_ce1 = grp_add_fu_506_output_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state47))) begin
        buf0_V_ce1 = grp_conv_layer_fu_448_output_V_ce1;
    end else begin
        buf0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf0_V_d1 = grp_add_fu_506_output_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state47))) begin
        buf0_V_d1 = grp_conv_layer_fu_448_output_V_d1;
    end else begin
        buf0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf0_V_we1 = grp_add_fu_506_output_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state47))) begin
        buf0_V_we1 = grp_conv_layer_fu_448_output_V_we1;
    end else begin
        buf0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        buf1_V_address0 = grp_add_fu_506_input2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        buf1_V_address0 = grp_add_fu_506_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        buf1_V_address0 = grp_conv_layer_fu_448_input_V_address0;
    end else begin
        buf1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        buf1_V_ce0 = grp_add_fu_506_input2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        buf1_V_ce0 = grp_add_fu_506_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        buf1_V_ce0 = grp_conv_layer_fu_448_input_V_ce0;
    end else begin
        buf1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        buf1_V_ce1 = grp_conv_layer_fu_448_output_V_ce1;
    end else begin
        buf1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        buf1_V_we1 = grp_conv_layer_fu_448_output_V_we1;
    end else begin
        buf1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        buf2_V_address0 = 13'd3135;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf2_V_address0 = zext_ln330_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf2_V_address0 = 13'd6271;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf2_V_address0 = grp_add_fu_506_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        buf2_V_address0 = grp_conv_layer_fu_448_input_V_address0;
    end else begin
        buf2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf2_V_address1 = zext_ln284_fu_718_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf2_V_address1 = grp_add_fu_506_output_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state45))) begin
        buf2_V_address1 = grp_conv_layer_fu_448_output_V_address1;
    end else begin
        buf2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        buf2_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        buf2_V_ce0 = grp_add_fu_506_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        buf2_V_ce0 = grp_conv_layer_fu_448_input_V_ce0;
    end else begin
        buf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((sw0in_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        buf2_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf2_V_ce1 = grp_add_fu_506_output_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state45))) begin
        buf2_V_ce1 = grp_conv_layer_fu_448_output_V_ce1;
    end else begin
        buf2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf2_V_d1 = zext_ln180_fu_903_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf2_V_d1 = grp_add_fu_506_output_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state45))) begin
        buf2_V_d1 = grp_conv_layer_fu_448_output_V_d1;
    end else begin
        buf2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((sw0in_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        buf2_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        buf2_V_we1 = grp_add_fu_506_output_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state45))) begin
        buf2_V_we1 = grp_conv_layer_fu_448_output_V_we1;
    end else begin
        buf2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ddr_V_ARVALID = grp_conv_layer_fu_448_m_axi_ddr_V_ARVALID;
    end else begin
        ddr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        ddr_V_RREADY = grp_conv_layer_fu_448_m_axi_ddr_V_RREADY;
    end else begin
        ddr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_OSIZE = 5'd7;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_add_fu_506_OSIZE = 5'd14;
    end else begin
        grp_add_fu_506_OSIZE = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_SCALE1 = 32'd1060664827;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_add_fu_506_SCALE1 = 32'd1062524296;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_add_fu_506_SCALE1 = 32'd1064654872;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_add_fu_506_SCALE1 = 32'd1063584595;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_add_fu_506_SCALE1 = 32'd1067371773;
    end else begin
        grp_add_fu_506_SCALE1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_SCALE2 = 32'd1061605007;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_add_fu_506_SCALE2 = 32'd1062205558;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_add_fu_506_SCALE2 = 32'd1060038227;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_add_fu_506_SCALE2 = 32'd1060772824;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_add_fu_506_SCALE2 = 32'd1058484576;
    end else begin
        grp_add_fu_506_SCALE2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_TI = 8'd64;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_add_fu_506_TI = 8'd32;
    end else begin
        grp_add_fu_506_TI = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_input1_V_q0 = buf1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_add_fu_506_input1_V_q0 = buf0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_add_fu_506_input1_V_q0 = buf2_V_q0;
    end else begin
        grp_add_fu_506_input1_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_add_fu_506_input2_V_q0 = buf0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_add_fu_506_input2_V_q0 = buf1_V_q0;
    end else begin
        grp_add_fu_506_input2_V_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_K = 4'd3;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_conv_layer_fu_448_K = 4'd1;
    end else begin
        grp_conv_layer_fu_448_K = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd9510912;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd7147520;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd6619136;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd4505600;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd4235264;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd3643392;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd3379200;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd3108864;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd2516992;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd2252800;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd1982464;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd1390592;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd1126400;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd856064;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd264192;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_conv_layer_fu_448_OFFSET = 25'd0;
    end else begin
        grp_conv_layer_fu_448_OFFSET = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_OSIZE = 5'd7;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_conv_layer_fu_448_OSIZE = 5'd14;
    end else begin
        grp_conv_layer_fu_448_OSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_P = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_conv_layer_fu_448_P = 1'd0;
    end else begin
        grp_conv_layer_fu_448_P = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_S = 4'd2;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_conv_layer_fu_448_S = 4'd1;
    end else begin
        grp_conv_layer_fu_448_S = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_TI = 7'd16;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_conv_layer_fu_448_TI = 7'd8;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_conv_layer_fu_448_TI = 7'd32;
    end else begin
        grp_conv_layer_fu_448_TI = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_TO_r = 7'd8;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_conv_layer_fu_448_TO_r = 7'd32;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_conv_layer_fu_448_TO_r = 7'd16;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_conv_layer_fu_448_TO_r = 7'd4;
    end else begin
        grp_conv_layer_fu_448_TO_r = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_conv_layer_fu_448_input_V_q0 = buf0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_conv_layer_fu_448_input_V_q0 = buf1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_conv_layer_fu_448_input_V_q0 = buf2_V_q0;
    end else begin
        grp_conv_layer_fu_448_input_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        outbuf_V_address1 = zext_ln294_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        outbuf_V_address1 = grp_conv_layer_fu_448_outbuf_V_4_address1;
    end else begin
        outbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        outbuf_V_ce0 = grp_conv_layer_fu_448_outbuf_V_4_ce0;
    end else begin
        outbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        outbuf_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        outbuf_V_ce1 = grp_conv_layer_fu_448_outbuf_V_4_ce1;
    end else begin
        outbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        outbuf_V_d1 = 1536'd0;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        outbuf_V_d1 = grp_conv_layer_fu_448_outbuf_V_4_d1;
    end else begin
        outbuf_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln291_fu_913_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        outbuf_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45))) begin
        outbuf_V_we1 = grp_conv_layer_fu_448_outbuf_V_4_we1;
    end else begin
        outbuf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((startt_V_1_sel == 1'b1)) begin
        startt_V_1_data_out = startt_V_1_payload_B;
    end else begin
        startt_V_1_data_out = startt_V_1_payload_A;
    end
end

always @ (*) begin
    if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        startt_V_1_vld_in = 1'b1;
    end else begin
        startt_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        startt_V_TDATA_blk_n = startt_V_1_state[1'd1];
    end else begin
        startt_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((stopt_V_1_sel == 1'b1)) begin
        stopt_V_1_data_out = stopt_V_1_payload_B;
    end else begin
        stopt_V_1_data_out = stopt_V_1_payload_A;
    end
end

always @ (*) begin
    if (((stopt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
        stopt_V_1_vld_in = 1'b1;
    end else begin
        stopt_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54))) begin
        stopt_V_TDATA_blk_n = stopt_V_1_state[1'd1];
    end else begin
        stopt_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((sw0in_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0)) & (icmp_ln276_fu_702_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        sw0in_V_0_ack_out = 1'b1;
    end else begin
        sw0in_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((sw0in_V_0_sel == 1'b1)) begin
        sw0in_V_0_data_out = sw0in_V_0_payload_B;
    end else begin
        sw0in_V_0_data_out = sw0in_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln276_fu_702_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        sw0in_V_TDATA_blk_n = sw0in_V_0_state[1'd0];
    end else begin
        sw0in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((sw0out_V_1_sel == 1'b1)) begin
        sw0out_V_1_data_out = sw0out_V_1_payload_B;
    end else begin
        sw0out_V_1_data_out = sw0out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln324_reg_2567 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        sw0out_V_1_vld_in = 1'b1;
    end else begin
        sw0out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln324_reg_2567_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln324_reg_2567 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        sw0out_V_TDATA_blk_n = sw0out_V_1_state[1'd1];
    end else begin
        sw0out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0)) & (icmp_ln276_fu_702_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0)) & (icmp_ln276_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((sw0in_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln291_fu_913_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((grp_conv_layer_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((grp_add_fu_506_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln324_fu_930_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((icmp_ln324_fu_930_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((stopt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln324_1_fu_956_p2 = (ap_phi_mux_s_0_phi_fu_430_p4 + 12'd1);

assign add_ln324_fu_936_p2 = (indvar_flatten_reg_415 + 13'd1);

assign and_ln214_1_fu_1249_p2 = (lshr_ln214_3_fu_1243_p2 & lshr_ln214_2_fu_1237_p2);

assign and_ln214_2_fu_1377_p2 = (lshr_ln214_5_fu_1371_p2 & lshr_ln214_4_fu_1365_p2);

assign and_ln214_3_fu_1551_p2 = (lshr_ln214_8_fu_1545_p2 & lshr_ln214_7_fu_1539_p2);

assign and_ln214_4_fu_1697_p2 = (lshr_ln214_9_fu_1685_p2 & lshr_ln214_10_fu_1691_p2);

assign and_ln214_5_fu_1825_p2 = (lshr_ln214_12_fu_1819_p2 & lshr_ln214_11_fu_1813_p2);

assign and_ln214_6_fu_2007_p2 = (lshr_ln214_15_fu_2001_p2 & lshr_ln214_14_fu_1995_p2);

assign and_ln214_7_fu_2267_p2 = (lshr_ln214_20_fu_2261_p2 & lshr_ln214_19_fu_2255_p2);

assign and_ln214_fu_1103_p2 = (lshr_ln214_fu_1091_p2 & lshr_ln214_1_fu_1097_p2);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state52_io) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b1 == ap_block_state51_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state52_io) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b1 == ap_block_state51_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln276_fu_702_p2 == 1'd0) & (sw0in_V_0_vld_out == 1'b0));
end

assign ap_block_state50_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state51_io = ((icmp_ln324_reg_2567 == 1'd0) & (sw0out_V_1_ack_in == 1'b0));
end

assign ap_block_state51_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_io = ((icmp_ln324_reg_2567_pp2_iter1_reg == 1'd0) & (sw0out_V_1_ack_in == 1'b0));
end

assign ap_block_state52_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55 = ((stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3)));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_30_fu_1005_p2 = (tmp_358_fu_995_p5 | 8'd8);

assign empty_31_fu_1119_p2 = (shl_ln_fu_988_p3 | 5'd9);

assign empty_32_fu_1151_p2 = (p_cast226_fu_1147_p1 + 9'd8);

assign empty_33_fu_1281_p2 = (zext_ln214_2_cast224_fu_1265_p1 + p_shl181_cast_fu_1277_p1);

assign empty_34_fu_1287_p2 = (empty_33_fu_1281_p2 | 9'd8);

assign empty_35_fu_1409_p2 = (zext_ln214_3_cast221_fu_1393_p1 + p_shl180_cast_fu_1405_p1);

assign empty_36_fu_1453_p2 = (tmp_362_fu_1445_p3 | 8'd8);

assign empty_37_fu_1567_p2 = (shl_ln_fu_988_p3 | 5'd13);

assign empty_38_fu_1591_p1 = tmp_364_fu_1583_p3;

assign empty_39_fu_1599_p2 = (empty_38_fu_1591_p1 + 9'd8);

assign empty_40_fu_1729_p2 = (zext_ln214_6_cast212_fu_1713_p1 + p_shl177_cast_fu_1725_p1);

assign empty_41_fu_1735_p2 = (empty_40_fu_1729_p2 | 9'd8);

assign empty_42_fu_1857_p2 = (zext_ln214_7_cast209_fu_1841_p1 + p_shl176_cast_fu_1853_p1);

assign empty_43_fu_1901_p1 = tmp_366_fu_1893_p3;

assign empty_44_fu_1909_p2 = (empty_43_fu_1901_p1 + 9'd8);

assign empty_45_fu_2033_p2 = (zext_ln214_9_cast203_fu_2017_p1 + p_shl174_cast_fu_2029_p1);

assign empty_46_fu_2075_p2 = (zext_ln214_10_cast20_fu_2059_p1 + p_shl173_cast_fu_2071_p1);

assign empty_47_fu_2117_p2 = (zext_ln214_11_cast19_fu_2101_p1 + p_shl172_cast_fu_2113_p1);

assign empty_48_fu_2161_p1 = tmp_368_fu_2153_p3;

assign empty_49_fu_2169_p2 = (empty_48_fu_2161_p1 + 9'd8);

assign empty_50_fu_2293_p2 = (zext_ln214_13_cast19_fu_2277_p1 + p_shl170_cast_fu_2289_p1);

assign empty_51_fu_2335_p2 = (zext_ln214_14_cast18_fu_2319_p1 + p_shl169_cast_fu_2331_p1);

assign empty_52_fu_2377_p2 = (zext_ln214_15_cast18_fu_2361_p1 + p_shl_cast_fu_2373_p1);

assign grp_add_fu_506_ap_start = grp_add_fu_506_ap_start_reg;

assign grp_conv_layer_fu_448_ap_start = grp_conv_layer_fu_448_ap_start_reg;

assign grp_fu_542_p4 = {{sw0in_V_0_data_out[15:8]}};

assign grp_fu_552_p4 = {{sw0in_V_0_data_out[23:16]}};

assign grp_fu_562_p4 = {{sw0in_V_0_data_out[31:24]}};

assign grp_fu_572_p4 = {{sw0in_V_0_data_out[39:32]}};

assign grp_fu_582_p4 = {{sw0in_V_0_data_out[47:40]}};

assign grp_fu_592_p4 = {{sw0in_V_0_data_out[55:48]}};

assign grp_fu_602_p4 = {{sw0in_V_0_data_out[63:56]}};

assign grp_fu_612_p4 = {{sw0in_V_0_data_out[71:64]}};

assign grp_fu_622_p4 = {{sw0in_V_0_data_out[79:72]}};

assign grp_fu_632_p4 = {{sw0in_V_0_data_out[87:80]}};

assign grp_fu_642_p4 = {{sw0in_V_0_data_out[95:88]}};

assign grp_fu_652_p4 = {{sw0in_V_0_data_out[103:96]}};

assign grp_fu_662_p4 = {{sw0in_V_0_data_out[111:104]}};

assign grp_fu_672_p4 = {{sw0in_V_0_data_out[119:112]}};

assign grp_fu_682_p4 = {{sw0in_V_0_data_out[127:120]}};

assign grp_fu_692_p4 = {{buf2_V_q0[282:279]}};

assign i_1_fu_979_p2 = (select_ln330_fu_948_p3 + 2'd1);

assign i_fu_919_p2 = (i1_0_reg_404 + 12'd1);

assign icmp_ln214_1_fu_1161_p2 = ((p_cast227_fu_1143_p1 > p_cast225_fu_1157_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_2_fu_1293_p2 = ((empty_33_fu_1281_p2 > empty_34_fu_1287_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_3_fu_1459_p2 = ((tmp_362_fu_1445_p3 > empty_36_fu_1453_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_4_fu_1609_p2 = ((p_cast214_fu_1595_p1 > p_cast213_fu_1605_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_5_fu_1741_p2 = ((empty_40_fu_1729_p2 > empty_41_fu_1735_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_6_fu_1919_p2 = ((p_cast205_fu_1905_p1 > p_cast204_fu_1915_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_7_fu_2179_p2 = ((p_cast193_fu_2165_p1 > p_cast192_fu_2175_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_fu_1011_p2 = ((tmp_358_fu_995_p5 > empty_30_fu_1005_p2) ? 1'b1 : 1'b0);

assign icmp_ln276_fu_702_p2 = ((l_0_reg_392 == 13'd6272) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_913_p2 = ((i1_0_reg_404 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_930_p2 = ((indvar_flatten_reg_415 == 13'd6272) ? 1'b1 : 1'b0);

assign icmp_ln325_fu_942_p2 = ((i3_0_reg_437 == 2'd2) ? 1'b1 : 1'b0);

assign l_fu_708_p2 = (l_0_reg_392 + 13'd1);

assign lshr_ln214_10_fu_1691_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_16_fu_1681_p1;

assign lshr_ln214_11_fu_1813_p2 = select_ln214_16_fu_1783_p3 >> zext_ln214_17_fu_1805_p1;

assign lshr_ln214_12_fu_1819_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_18_fu_1809_p1;

assign lshr_ln214_13_fu_1867_p2 = buf2_V_q0 >> zext_ln214_19_fu_1863_p1;

assign lshr_ln214_14_fu_1995_p2 = select_ln214_19_fu_1965_p3 >> zext_ln214_21_fu_1987_p1;

assign lshr_ln214_15_fu_2001_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_22_fu_1991_p1;

assign lshr_ln214_16_fu_2043_p2 = buf2_V_q0 >> zext_ln214_23_fu_2039_p1;

assign lshr_ln214_17_fu_2085_p2 = buf2_V_q0 >> zext_ln214_24_fu_2081_p1;

assign lshr_ln214_18_fu_2127_p2 = buf2_V_q0 >> zext_ln214_25_fu_2123_p1;

assign lshr_ln214_19_fu_2255_p2 = select_ln214_22_fu_2225_p3 >> zext_ln214_27_fu_2247_p1;

assign lshr_ln214_1_fu_1097_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_3_fu_1087_p1;

assign lshr_ln214_20_fu_2261_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_28_fu_2251_p1;

assign lshr_ln214_21_fu_2303_p2 = buf2_V_q0 >> zext_ln214_29_fu_2299_p1;

assign lshr_ln214_22_fu_2345_p2 = buf2_V_q0 >> zext_ln214_30_fu_2341_p1;

assign lshr_ln214_23_fu_2387_p2 = buf2_V_q0 >> zext_ln214_31_fu_2383_p1;

assign lshr_ln214_2_fu_1237_p2 = select_ln214_4_fu_1207_p3 >> zext_ln214_5_fu_1229_p1;

assign lshr_ln214_3_fu_1243_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_6_fu_1233_p1;

assign lshr_ln214_4_fu_1365_p2 = select_ln214_7_fu_1335_p3 >> zext_ln214_7_fu_1357_p1;

assign lshr_ln214_5_fu_1371_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_8_fu_1361_p1;

assign lshr_ln214_6_fu_1419_p2 = buf2_V_q0 >> zext_ln214_9_fu_1415_p1;

assign lshr_ln214_7_fu_1539_p2 = select_ln214_10_fu_1509_p3 >> zext_ln214_12_fu_1531_p1;

assign lshr_ln214_8_fu_1545_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_13_fu_1535_p1;

assign lshr_ln214_9_fu_1685_p2 = select_ln214_13_fu_1655_p3 >> zext_ln214_15_fu_1677_p1;

assign lshr_ln214_fu_1091_p2 = select_ln214_1_fu_1061_p3 >> zext_ln214_2_fu_1083_p1;

assign or_ln214_10_fu_2137_p2 = (shl_ln_fu_988_p3 | 5'd12);

assign or_ln214_11_fu_2313_p2 = (shl_ln_fu_988_p3 | 5'd14);

assign or_ln214_12_fu_2355_p2 = (shl_ln_fu_988_p3 | 5'd15);

assign or_ln214_1_fu_1259_p2 = (shl_ln_fu_988_p3 | 5'd2);

assign or_ln214_2_fu_1387_p2 = (shl_ln_fu_988_p3 | 5'd3);

assign or_ln214_3_fu_1429_p2 = (shl_ln_fu_988_p3 | 5'd4);

assign or_ln214_4_fu_1561_p2 = (shl_ln_fu_988_p3 | 5'd5);

assign or_ln214_5_fu_1707_p2 = (shl_ln_fu_988_p3 | 5'd6);

assign or_ln214_6_fu_1835_p2 = (shl_ln_fu_988_p3 | 5'd7);

assign or_ln214_7_fu_1877_p2 = (shl_ln_fu_988_p3 | 5'd8);

assign or_ln214_8_fu_2053_p2 = (shl_ln_fu_988_p3 | 5'd10);

assign or_ln214_9_fu_2095_p2 = (shl_ln_fu_988_p3 | 5'd11);

assign or_ln214_fu_1113_p2 = (shl_ln_fu_988_p3 | 5'd1);

assign p_Result_22_s_fu_2433_p5 = {{p_0114_1_fu_316[168:128]}, {tmp_369_fu_2397_p17}};

assign p_cast192_fu_2175_p1 = empty_49_fu_2169_p2;

assign p_cast193_fu_2165_p1 = tmp_368_fu_2153_p3;

assign p_cast204_fu_1915_p1 = empty_44_fu_1909_p2;

assign p_cast205_fu_1905_p1 = tmp_366_fu_1893_p3;

assign p_cast213_fu_1605_p1 = empty_39_fu_1599_p2;

assign p_cast214_fu_1595_p1 = tmp_364_fu_1583_p3;

assign p_cast225_fu_1157_p1 = empty_32_fu_1151_p2;

assign p_cast226_fu_1147_p1 = tmp_360_fu_1135_p3;

assign p_cast227_fu_1143_p1 = tmp_360_fu_1135_p3;

assign p_shl169_cast_fu_2331_p1 = p_shl9_fu_2323_p3;

assign p_shl170_cast_fu_2289_p1 = p_shl8_fu_2281_p3;

assign p_shl172_cast_fu_2113_p1 = p_shl7_fu_2105_p3;

assign p_shl173_cast_fu_2071_p1 = p_shl6_fu_2063_p3;

assign p_shl174_cast_fu_2029_p1 = p_shl5_fu_2021_p3;

assign p_shl176_cast_fu_1853_p1 = p_shl4_fu_1845_p3;

assign p_shl177_cast_fu_1725_p1 = p_shl3_fu_1717_p3;

assign p_shl180_cast_fu_1405_p1 = p_shl2_fu_1397_p3;

assign p_shl181_cast_fu_1277_p1 = p_shl1_fu_1269_p3;

assign p_shl1_fu_1269_p3 = {{or_ln214_1_fu_1259_p2}, {3'd0}};

assign p_shl2_fu_1397_p3 = {{or_ln214_2_fu_1387_p2}, {3'd0}};

assign p_shl3_fu_1717_p3 = {{or_ln214_5_fu_1707_p2}, {3'd0}};

assign p_shl4_fu_1845_p3 = {{or_ln214_6_fu_1835_p2}, {3'd0}};

assign p_shl5_fu_2021_p3 = {{empty_31_fu_1119_p2}, {3'd0}};

assign p_shl6_fu_2063_p3 = {{or_ln214_8_fu_2053_p2}, {3'd0}};

assign p_shl7_fu_2105_p3 = {{or_ln214_9_fu_2095_p2}, {3'd0}};

assign p_shl8_fu_2281_p3 = {{empty_37_fu_1567_p2}, {3'd0}};

assign p_shl9_fu_2323_p3 = {{or_ln214_11_fu_2313_p2}, {3'd0}};

assign p_shl_cast_fu_2373_p1 = p_shl_fu_2365_p3;

assign p_shl_fu_2365_p3 = {{or_ln214_12_fu_2355_p2}, {3'd0}};

assign select_ln214_10_fu_1509_p3 = ((icmp_ln214_3_fu_1459_p2[0:0] === 1'b1) ? tmp_520_fu_1473_p4 : buf2_V_q0);

assign select_ln214_11_fu_1517_p3 = ((icmp_ln214_3_fu_1459_p2[0:0] === 1'b1) ? sub_ln214_13_fu_1489_p2 : zext_ln214_10_fu_1465_p1);

assign select_ln214_12_fu_1647_p3 = ((icmp_ln214_4_fu_1609_p2[0:0] === 1'b1) ? sub_ln214_16_fu_1629_p2 : sub_ln214_18_fu_1641_p2);

assign select_ln214_13_fu_1655_p3 = ((icmp_ln214_4_fu_1609_p2[0:0] === 1'b1) ? tmp_521_fu_1619_p4 : buf2_V_q0);

assign select_ln214_14_fu_1663_p3 = ((icmp_ln214_4_fu_1609_p2[0:0] === 1'b1) ? sub_ln214_17_fu_1635_p2 : zext_ln214_14_fu_1615_p1);

assign select_ln214_15_fu_1775_p3 = ((icmp_ln214_5_fu_1741_p2[0:0] === 1'b1) ? sub_ln214_20_fu_1757_p2 : sub_ln214_22_fu_1769_p2);

assign select_ln214_16_fu_1783_p3 = ((icmp_ln214_5_fu_1741_p2[0:0] === 1'b1) ? tmp_522_fu_1747_p4 : buf2_V_q0);

assign select_ln214_17_fu_1791_p3 = ((icmp_ln214_5_fu_1741_p2[0:0] === 1'b1) ? sub_ln214_21_fu_1763_p2 : empty_40_fu_1729_p2);

assign select_ln214_18_fu_1957_p3 = ((icmp_ln214_6_fu_1919_p2[0:0] === 1'b1) ? sub_ln214_24_fu_1939_p2 : sub_ln214_26_fu_1951_p2);

assign select_ln214_19_fu_1965_p3 = ((icmp_ln214_6_fu_1919_p2[0:0] === 1'b1) ? tmp_523_fu_1929_p4 : buf2_V_q0);

assign select_ln214_1_fu_1061_p3 = ((icmp_ln214_fu_1011_p2[0:0] === 1'b1) ? tmp_517_fu_1025_p4 : buf2_V_q0);

assign select_ln214_20_fu_1973_p3 = ((icmp_ln214_6_fu_1919_p2[0:0] === 1'b1) ? sub_ln214_25_fu_1945_p2 : zext_ln214_20_fu_1925_p1);

assign select_ln214_21_fu_2217_p3 = ((icmp_ln214_7_fu_2179_p2[0:0] === 1'b1) ? sub_ln214_28_fu_2199_p2 : sub_ln214_30_fu_2211_p2);

assign select_ln214_22_fu_2225_p3 = ((icmp_ln214_7_fu_2179_p2[0:0] === 1'b1) ? tmp_524_fu_2189_p4 : buf2_V_q0);

assign select_ln214_23_fu_2233_p3 = ((icmp_ln214_7_fu_2179_p2[0:0] === 1'b1) ? sub_ln214_29_fu_2205_p2 : zext_ln214_26_fu_2185_p1);

assign select_ln214_2_fu_1069_p3 = ((icmp_ln214_fu_1011_p2[0:0] === 1'b1) ? sub_ln214_1_fu_1041_p2 : zext_ln214_fu_1017_p1);

assign select_ln214_3_fu_1199_p3 = ((icmp_ln214_1_fu_1161_p2[0:0] === 1'b1) ? sub_ln214_4_fu_1181_p2 : sub_ln214_6_fu_1193_p2);

assign select_ln214_4_fu_1207_p3 = ((icmp_ln214_1_fu_1161_p2[0:0] === 1'b1) ? tmp_518_fu_1171_p4 : buf2_V_q0);

assign select_ln214_5_fu_1215_p3 = ((icmp_ln214_1_fu_1161_p2[0:0] === 1'b1) ? sub_ln214_5_fu_1187_p2 : zext_ln214_4_fu_1167_p1);

assign select_ln214_6_fu_1327_p3 = ((icmp_ln214_2_fu_1293_p2[0:0] === 1'b1) ? sub_ln214_8_fu_1309_p2 : sub_ln214_10_fu_1321_p2);

assign select_ln214_7_fu_1335_p3 = ((icmp_ln214_2_fu_1293_p2[0:0] === 1'b1) ? tmp_519_fu_1299_p4 : buf2_V_q0);

assign select_ln214_8_fu_1343_p3 = ((icmp_ln214_2_fu_1293_p2[0:0] === 1'b1) ? sub_ln214_9_fu_1315_p2 : empty_33_fu_1281_p2);

assign select_ln214_9_fu_1501_p3 = ((icmp_ln214_3_fu_1459_p2[0:0] === 1'b1) ? sub_ln214_12_fu_1483_p2 : sub_ln214_14_fu_1495_p2);

assign select_ln214_fu_1053_p3 = ((icmp_ln214_fu_1011_p2[0:0] === 1'b1) ? sub_ln214_fu_1035_p2 : sub_ln214_2_fu_1047_p2);

assign select_ln330_1_fu_962_p3 = ((icmp_ln325_fu_942_p2[0:0] === 1'b1) ? add_ln324_1_fu_956_p2 : ap_phi_mux_s_0_phi_fu_430_p4);

assign select_ln330_fu_948_p3 = ((icmp_ln325_fu_942_p2[0:0] === 1'b1) ? 2'd0 : i3_0_reg_437);

assign shl_ln_fu_988_p3 = {{trunc_ln214_reg_2581}, {4'd0}};

assign startt_V_1_ack_in = startt_V_1_state[1'd1];

assign startt_V_1_ack_out = startt_V_TREADY;

assign startt_V_1_load_A = (startt_V_1_state_cmp_full & ~startt_V_1_sel_wr);

assign startt_V_1_load_B = (startt_V_1_state_cmp_full & startt_V_1_sel_wr);

assign startt_V_1_sel = startt_V_1_sel_rd;

assign startt_V_1_state_cmp_full = ((startt_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign startt_V_1_vld_out = startt_V_1_state[1'd0];

assign startt_V_TDATA = startt_V_1_data_out;

assign startt_V_TVALID = startt_V_1_state[1'd0];

assign stopt_V_1_ack_in = stopt_V_1_state[1'd1];

assign stopt_V_1_ack_out = stopt_V_TREADY;

assign stopt_V_1_load_A = (stopt_V_1_state_cmp_full & ~stopt_V_1_sel_wr);

assign stopt_V_1_load_B = (stopt_V_1_state_cmp_full & stopt_V_1_sel_wr);

assign stopt_V_1_sel = stopt_V_1_sel_rd;

assign stopt_V_1_state_cmp_full = ((stopt_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stopt_V_1_vld_out = stopt_V_1_state[1'd0];

assign stopt_V_TDATA = stopt_V_1_data_out;

assign stopt_V_TVALID = stopt_V_1_state[1'd0];

assign sub_ln214_10_fu_1321_p2 = (empty_34_fu_1287_p2 - empty_33_fu_1281_p2);

assign sub_ln214_11_fu_1351_p2 = ($signed(9'd287) - $signed(select_ln214_6_fu_1327_p3));

assign sub_ln214_12_fu_1483_p2 = (zext_ln214_10_fu_1465_p1 - zext_ln214_11_fu_1469_p1);

assign sub_ln214_13_fu_1489_p2 = ($signed(9'd287) - $signed(zext_ln214_10_fu_1465_p1));

assign sub_ln214_14_fu_1495_p2 = (zext_ln214_11_fu_1469_p1 - zext_ln214_10_fu_1465_p1);

assign sub_ln214_15_fu_1525_p2 = ($signed(9'd287) - $signed(select_ln214_9_fu_1501_p3));

assign sub_ln214_16_fu_1629_p2 = (zext_ln214_14_fu_1615_p1 - empty_39_fu_1599_p2);

assign sub_ln214_17_fu_1635_p2 = ($signed(9'd287) - $signed(zext_ln214_14_fu_1615_p1));

assign sub_ln214_18_fu_1641_p2 = (empty_39_fu_1599_p2 - zext_ln214_14_fu_1615_p1);

assign sub_ln214_19_fu_1671_p2 = ($signed(9'd287) - $signed(select_ln214_12_fu_1647_p3));

assign sub_ln214_1_fu_1041_p2 = ($signed(9'd287) - $signed(zext_ln214_fu_1017_p1));

assign sub_ln214_20_fu_1757_p2 = (empty_40_fu_1729_p2 - empty_41_fu_1735_p2);

assign sub_ln214_21_fu_1763_p2 = ($signed(9'd287) - $signed(empty_40_fu_1729_p2));

assign sub_ln214_22_fu_1769_p2 = (empty_41_fu_1735_p2 - empty_40_fu_1729_p2);

assign sub_ln214_23_fu_1799_p2 = ($signed(9'd287) - $signed(select_ln214_15_fu_1775_p3));

assign sub_ln214_24_fu_1939_p2 = (zext_ln214_20_fu_1925_p1 - empty_44_fu_1909_p2);

assign sub_ln214_25_fu_1945_p2 = ($signed(9'd287) - $signed(zext_ln214_20_fu_1925_p1));

assign sub_ln214_26_fu_1951_p2 = (empty_44_fu_1909_p2 - zext_ln214_20_fu_1925_p1);

assign sub_ln214_27_fu_1981_p2 = ($signed(9'd287) - $signed(select_ln214_18_fu_1957_p3));

assign sub_ln214_28_fu_2199_p2 = (zext_ln214_26_fu_2185_p1 - empty_49_fu_2169_p2);

assign sub_ln214_29_fu_2205_p2 = ($signed(9'd287) - $signed(zext_ln214_26_fu_2185_p1));

assign sub_ln214_2_fu_1047_p2 = (zext_ln214_1_fu_1021_p1 - zext_ln214_fu_1017_p1);

assign sub_ln214_30_fu_2211_p2 = (empty_49_fu_2169_p2 - zext_ln214_26_fu_2185_p1);

assign sub_ln214_31_fu_2241_p2 = ($signed(9'd287) - $signed(select_ln214_21_fu_2217_p3));

assign sub_ln214_3_fu_1077_p2 = ($signed(9'd287) - $signed(select_ln214_fu_1053_p3));

assign sub_ln214_4_fu_1181_p2 = (zext_ln214_4_fu_1167_p1 - empty_32_fu_1151_p2);

assign sub_ln214_5_fu_1187_p2 = ($signed(9'd287) - $signed(zext_ln214_4_fu_1167_p1));

assign sub_ln214_6_fu_1193_p2 = (empty_32_fu_1151_p2 - zext_ln214_4_fu_1167_p1);

assign sub_ln214_7_fu_1223_p2 = ($signed(9'd287) - $signed(select_ln214_3_fu_1199_p3));

assign sub_ln214_8_fu_1309_p2 = (empty_33_fu_1281_p2 - empty_34_fu_1287_p2);

assign sub_ln214_9_fu_1315_p2 = ($signed(9'd287) - $signed(empty_33_fu_1281_p2));

assign sub_ln214_fu_1035_p2 = (zext_ln214_fu_1017_p1 - zext_ln214_1_fu_1021_p1);

assign sw0in_V_0_ack_in = sw0in_V_0_state[1'd1];

assign sw0in_V_0_load_A = (sw0in_V_0_state_cmp_full & ~sw0in_V_0_sel_wr);

assign sw0in_V_0_load_B = (sw0in_V_0_state_cmp_full & sw0in_V_0_sel_wr);

assign sw0in_V_0_sel = sw0in_V_0_sel_rd;

assign sw0in_V_0_state_cmp_full = ((sw0in_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign sw0in_V_0_vld_in = sw0in_V_TVALID;

assign sw0in_V_0_vld_out = sw0in_V_0_state[1'd0];

assign sw0in_V_TREADY = sw0in_V_0_state[1'd1];

assign sw0out_V_1_ack_in = sw0out_V_1_state[1'd1];

assign sw0out_V_1_ack_out = sw0out_V_TREADY;

assign sw0out_V_1_load_A = (sw0out_V_1_state_cmp_full & ~sw0out_V_1_sel_wr);

assign sw0out_V_1_load_B = (sw0out_V_1_state_cmp_full & sw0out_V_1_sel_wr);

assign sw0out_V_1_sel = sw0out_V_1_sel_rd;

assign sw0out_V_1_state_cmp_full = ((sw0out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign sw0out_V_1_vld_out = sw0out_V_1_state[1'd0];

assign sw0out_V_TDATA = sw0out_V_1_data_out;

assign sw0out_V_TVALID = sw0out_V_1_state[1'd0];

assign tmp_358_fu_995_p5 = {{{{trunc_ln214_reg_2581}, {2'd0}}, {trunc_ln214_reg_2581}}, {4'd0}};

assign tmp_359_fu_1125_p4 = {{or_ln214_fu_1113_p2[4:2]}};

assign tmp_360_fu_1135_p3 = {{tmp_359_fu_1125_p4}, {empty_31_fu_1119_p2}};

assign tmp_361_fu_1435_p4 = {{or_ln214_3_fu_1429_p2[4:2]}};

assign tmp_362_fu_1445_p3 = {{tmp_361_fu_1435_p4}, {or_ln214_3_fu_1429_p2}};

assign tmp_363_fu_1573_p4 = {{or_ln214_4_fu_1561_p2[4:2]}};

assign tmp_364_fu_1583_p3 = {{tmp_363_fu_1573_p4}, {empty_37_fu_1567_p2}};

assign tmp_365_fu_1883_p4 = {{or_ln214_7_fu_1877_p2[4:2]}};

assign tmp_366_fu_1893_p3 = {{tmp_365_fu_1883_p4}, {or_ln214_7_fu_1877_p2}};

assign tmp_367_fu_2143_p4 = {{or_ln214_10_fu_2137_p2[4:2]}};

assign tmp_368_fu_2153_p3 = {{tmp_367_fu_2143_p4}, {or_ln214_10_fu_2137_p2}};

assign tmp_369_fu_2397_p17 = {{{{{{{{{{{{{{{{trunc_ln214_16_fu_2393_p1}, {trunc_ln214_15_fu_2351_p1}}, {trunc_ln214_14_fu_2309_p1}}, {trunc_ln214_13_fu_2273_p1}}, {trunc_ln214_12_fu_2133_p1}}, {trunc_ln214_11_fu_2091_p1}}, {trunc_ln214_10_fu_2049_p1}}, {trunc_ln214_9_fu_2013_p1}}, {trunc_ln214_8_fu_1873_p1}}, {trunc_ln214_7_fu_1831_p1}}, {trunc_ln214_6_fu_1703_p1}}, {trunc_ln214_5_fu_1557_p1}}, {trunc_ln214_4_fu_1425_p1}}, {trunc_ln214_3_fu_1383_p1}}, {trunc_ln214_2_fu_1255_p1}}, {trunc_ln214_1_fu_1109_p1}};

integer ap_tvar_int_0;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_0 = 288 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 287 - 0) begin
            tmp_517_fu_1025_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_517_fu_1025_p4[ap_tvar_int_0] = buf2_V_q0[287 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_1 = 288 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 287 - 0) begin
            tmp_518_fu_1171_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_518_fu_1171_p4[ap_tvar_int_1] = buf2_V_q0[287 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_2 = 288 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 287 - 0) begin
            tmp_519_fu_1299_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_519_fu_1299_p4[ap_tvar_int_2] = buf2_V_q0[287 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_3 = 288 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 287 - 0) begin
            tmp_520_fu_1473_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_520_fu_1473_p4[ap_tvar_int_3] = buf2_V_q0[287 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_4 = 288 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 287 - 0) begin
            tmp_521_fu_1619_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_521_fu_1619_p4[ap_tvar_int_4] = buf2_V_q0[287 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_5 = 288 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 287 - 0) begin
            tmp_522_fu_1747_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_522_fu_1747_p4[ap_tvar_int_5] = buf2_V_q0[287 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_6 = 288 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 287 - 0) begin
            tmp_523_fu_1929_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_523_fu_1929_p4[ap_tvar_int_6] = buf2_V_q0[287 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (buf2_V_q0) begin
    for (ap_tvar_int_7 = 288 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 287 - 0) begin
            tmp_524_fu_2189_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_524_fu_2189_p4[ap_tvar_int_7] = buf2_V_q0[287 - ap_tvar_int_7];
        end
    end
end

assign tmp_fu_835_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{grp_fu_682_p4}, {zext_ln78_30_fu_831_p1}}, {zext_ln78_29_fu_827_p1}}, {zext_ln78_28_fu_823_p1}}, {zext_ln78_27_fu_819_p1}}, {zext_ln78_26_fu_815_p1}}, {zext_ln78_25_fu_811_p1}}, {zext_ln78_24_fu_807_p1}}, {zext_ln78_23_fu_803_p1}}, {zext_ln78_22_fu_799_p1}}, {zext_ln78_21_fu_795_p1}}, {zext_ln78_20_fu_791_p1}}, {zext_ln78_19_fu_787_p1}}, {zext_ln78_18_fu_783_p1}}, {zext_ln78_17_fu_779_p1}}, {zext_ln78_16_fu_775_p1}}, {zext_ln78_15_fu_768_p1}}, {zext_ln78_14_fu_765_p1}}, {zext_ln78_13_fu_762_p1}}, {zext_ln78_12_fu_759_p1}}, {zext_ln78_11_fu_756_p1}}, {zext_ln78_10_fu_753_p1}}, {zext_ln78_9_fu_750_p1}}, {zext_ln78_8_fu_747_p1}}, {zext_ln78_7_fu_744_p1}}, {zext_ln78_6_fu_741_p1}}, {zext_ln78_5_fu_738_p1}}, {zext_ln78_4_fu_735_p1}}, {zext_ln78_3_fu_732_p1}}, {zext_ln78_2_fu_729_p1}}, {zext_ln78_1_fu_726_p1}}, {zext_ln78_fu_723_p1}};

assign trunc_ln214_10_fu_2049_p1 = lshr_ln214_16_fu_2043_p2[7:0];

assign trunc_ln214_11_fu_2091_p1 = lshr_ln214_17_fu_2085_p2[7:0];

assign trunc_ln214_12_fu_2133_p1 = lshr_ln214_18_fu_2127_p2[7:0];

assign trunc_ln214_13_fu_2273_p1 = and_ln214_7_fu_2267_p2[7:0];

assign trunc_ln214_14_fu_2309_p1 = lshr_ln214_21_fu_2303_p2[7:0];

assign trunc_ln214_15_fu_2351_p1 = lshr_ln214_22_fu_2345_p2[7:0];

assign trunc_ln214_16_fu_2393_p1 = lshr_ln214_23_fu_2387_p2[7:0];

assign trunc_ln214_1_fu_1109_p1 = and_ln214_fu_1103_p2[7:0];

assign trunc_ln214_2_fu_1255_p1 = and_ln214_1_fu_1249_p2[7:0];

assign trunc_ln214_3_fu_1383_p1 = and_ln214_2_fu_1377_p2[7:0];

assign trunc_ln214_4_fu_1425_p1 = lshr_ln214_6_fu_1419_p2[7:0];

assign trunc_ln214_5_fu_1557_p1 = and_ln214_3_fu_1551_p2[7:0];

assign trunc_ln214_6_fu_1703_p1 = and_ln214_4_fu_1697_p2[7:0];

assign trunc_ln214_7_fu_1831_p1 = and_ln214_5_fu_1825_p2[7:0];

assign trunc_ln214_8_fu_1873_p1 = lshr_ln214_13_fu_1867_p2[7:0];

assign trunc_ln214_9_fu_2013_p1 = and_ln214_6_fu_2007_p2[7:0];

assign trunc_ln214_fu_975_p1 = select_ln330_fu_948_p3[0:0];

assign trunc_ln647_1_fu_771_p1 = sw0in_V_0_data_out[7:0];

assign trunc_ln647_fu_714_p1 = sw0in_V_0_data_out[7:0];

assign zext_ln180_fu_903_p1 = tmp_fu_835_p33;

assign zext_ln214_10_cast20_fu_2059_p1 = or_ln214_8_fu_2053_p2;

assign zext_ln214_10_fu_1465_p1 = tmp_362_fu_1445_p3;

assign zext_ln214_11_cast19_fu_2101_p1 = or_ln214_9_fu_2095_p2;

assign zext_ln214_11_fu_1469_p1 = empty_36_fu_1453_p2;

assign zext_ln214_12_fu_1531_p1 = select_ln214_11_fu_1517_p3;

assign zext_ln214_13_cast19_fu_2277_p1 = empty_37_fu_1567_p2;

assign zext_ln214_13_fu_1535_p1 = sub_ln214_15_fu_1525_p2;

assign zext_ln214_14_cast18_fu_2319_p1 = or_ln214_11_fu_2313_p2;

assign zext_ln214_14_fu_1615_p1 = tmp_364_fu_1583_p3;

assign zext_ln214_15_cast18_fu_2361_p1 = or_ln214_12_fu_2355_p2;

assign zext_ln214_15_fu_1677_p1 = select_ln214_14_fu_1663_p3;

assign zext_ln214_16_fu_1681_p1 = sub_ln214_19_fu_1671_p2;

assign zext_ln214_17_fu_1805_p1 = select_ln214_17_fu_1791_p3;

assign zext_ln214_18_fu_1809_p1 = sub_ln214_23_fu_1799_p2;

assign zext_ln214_19_fu_1863_p1 = empty_42_fu_1857_p2;

assign zext_ln214_1_fu_1021_p1 = empty_30_fu_1005_p2;

assign zext_ln214_20_fu_1925_p1 = tmp_366_fu_1893_p3;

assign zext_ln214_21_fu_1987_p1 = select_ln214_20_fu_1973_p3;

assign zext_ln214_22_fu_1991_p1 = sub_ln214_27_fu_1981_p2;

assign zext_ln214_23_fu_2039_p1 = empty_45_fu_2033_p2;

assign zext_ln214_24_fu_2081_p1 = empty_46_fu_2075_p2;

assign zext_ln214_25_fu_2123_p1 = empty_47_fu_2117_p2;

assign zext_ln214_26_fu_2185_p1 = tmp_368_fu_2153_p3;

assign zext_ln214_27_fu_2247_p1 = select_ln214_23_fu_2233_p3;

assign zext_ln214_28_fu_2251_p1 = sub_ln214_31_fu_2241_p2;

assign zext_ln214_29_fu_2299_p1 = empty_50_fu_2293_p2;

assign zext_ln214_2_cast224_fu_1265_p1 = or_ln214_1_fu_1259_p2;

assign zext_ln214_2_fu_1083_p1 = select_ln214_2_fu_1069_p3;

assign zext_ln214_30_fu_2341_p1 = empty_51_fu_2335_p2;

assign zext_ln214_31_fu_2383_p1 = empty_52_fu_2377_p2;

assign zext_ln214_3_cast221_fu_1393_p1 = or_ln214_2_fu_1387_p2;

assign zext_ln214_3_fu_1087_p1 = sub_ln214_3_fu_1077_p2;

assign zext_ln214_4_fu_1167_p1 = tmp_360_fu_1135_p3;

assign zext_ln214_5_fu_1229_p1 = select_ln214_5_fu_1215_p3;

assign zext_ln214_6_cast212_fu_1713_p1 = or_ln214_5_fu_1707_p2;

assign zext_ln214_6_fu_1233_p1 = sub_ln214_7_fu_1223_p2;

assign zext_ln214_7_cast209_fu_1841_p1 = or_ln214_6_fu_1835_p2;

assign zext_ln214_7_fu_1357_p1 = select_ln214_8_fu_1343_p3;

assign zext_ln214_8_fu_1361_p1 = sub_ln214_11_fu_1351_p2;

assign zext_ln214_9_cast203_fu_2017_p1 = empty_31_fu_1119_p2;

assign zext_ln214_9_fu_1415_p1 = empty_35_fu_1409_p2;

assign zext_ln214_fu_1017_p1 = tmp_358_fu_995_p5;

assign zext_ln284_fu_718_p1 = l_0_reg_392;

assign zext_ln294_fu_925_p1 = i1_0_reg_404;

assign zext_ln321_1_fu_2455_p1 = grp_fu_692_p4;

assign zext_ln321_fu_908_p1 = grp_fu_692_p4;

assign zext_ln330_fu_970_p1 = select_ln330_1_fu_962_p3;

assign zext_ln332_fu_2445_p1 = p_Result_22_s_fu_2433_p5;

assign zext_ln78_10_fu_753_p1 = p_Result_0_s_reg_2518;

assign zext_ln78_11_fu_756_p1 = p_Result_0_10_reg_2523;

assign zext_ln78_12_fu_759_p1 = p_Result_0_11_reg_2528;

assign zext_ln78_13_fu_762_p1 = p_Result_0_12_reg_2533;

assign zext_ln78_14_fu_765_p1 = p_Result_0_13_reg_2538;

assign zext_ln78_15_fu_768_p1 = p_Result_0_14_reg_2543;

assign zext_ln78_16_fu_775_p1 = trunc_ln647_1_fu_771_p1;

assign zext_ln78_17_fu_779_p1 = grp_fu_542_p4;

assign zext_ln78_18_fu_783_p1 = grp_fu_552_p4;

assign zext_ln78_19_fu_787_p1 = grp_fu_562_p4;

assign zext_ln78_1_fu_726_p1 = p_Result_0_1_reg_2473;

assign zext_ln78_20_fu_791_p1 = grp_fu_572_p4;

assign zext_ln78_21_fu_795_p1 = grp_fu_582_p4;

assign zext_ln78_22_fu_799_p1 = grp_fu_592_p4;

assign zext_ln78_23_fu_803_p1 = grp_fu_602_p4;

assign zext_ln78_24_fu_807_p1 = grp_fu_612_p4;

assign zext_ln78_25_fu_811_p1 = grp_fu_622_p4;

assign zext_ln78_26_fu_815_p1 = grp_fu_632_p4;

assign zext_ln78_27_fu_819_p1 = grp_fu_642_p4;

assign zext_ln78_28_fu_823_p1 = grp_fu_652_p4;

assign zext_ln78_29_fu_827_p1 = grp_fu_662_p4;

assign zext_ln78_2_fu_729_p1 = p_Result_0_2_reg_2478;

assign zext_ln78_30_fu_831_p1 = grp_fu_672_p4;

assign zext_ln78_3_fu_732_p1 = p_Result_0_3_reg_2483;

assign zext_ln78_4_fu_735_p1 = p_Result_0_4_reg_2488;

assign zext_ln78_5_fu_738_p1 = p_Result_0_5_reg_2493;

assign zext_ln78_6_fu_741_p1 = p_Result_0_6_reg_2498;

assign zext_ln78_7_fu_744_p1 = p_Result_0_7_reg_2503;

assign zext_ln78_8_fu_747_p1 = p_Result_0_8_reg_2508;

assign zext_ln78_9_fu_750_p1 = p_Result_0_9_reg_2513;

assign zext_ln78_fu_723_p1 = trunc_ln647_reg_2468;

endmodule //resnet50_2
