// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "load_bias_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic load_bias_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic load_bias_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> load_bias_scale::ap_ST_fsm_state1 = "1";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp0_stage15 = "10000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_state27 = "100000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage0 = "1000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage1 = "10000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage2 = "100000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage3 = "1000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage4 = "10000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage5 = "100000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage6 = "1000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage7 = "10000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage8 = "100000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage9 = "1000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage10 = "10000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage11 = "100000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage12 = "1000000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage13 = "10000000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage14 = "100000000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_pp1_stage15 = "1000000000000000000000000000000000";
const sc_lv<35> load_bias_scale::ap_ST_fsm_state53 = "10000000000000000000000000000000000";
const bool load_bias_scale::ap_const_boolean_1 = true;
const sc_lv<32> load_bias_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> load_bias_scale::ap_const_lv1_0 = "0";
const sc_lv<3> load_bias_scale::ap_const_lv3_0 = "000";
const sc_lv<2> load_bias_scale::ap_const_lv2_0 = "00";
const sc_lv<4> load_bias_scale::ap_const_lv4_0 = "0000";
const sc_lv<128> load_bias_scale::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<16> load_bias_scale::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> load_bias_scale::ap_const_lv32_2 = "10";
const bool load_bias_scale::ap_const_boolean_0 = false;
const sc_lv<32> load_bias_scale::ap_const_lv32_9 = "1001";
const sc_lv<32> load_bias_scale::ap_const_lv32_A = "1010";
const sc_lv<32> load_bias_scale::ap_const_lv32_B = "1011";
const sc_lv<32> load_bias_scale::ap_const_lv32_C = "1100";
const sc_lv<32> load_bias_scale::ap_const_lv32_D = "1101";
const sc_lv<32> load_bias_scale::ap_const_lv32_E = "1110";
const sc_lv<32> load_bias_scale::ap_const_lv32_F = "1111";
const sc_lv<32> load_bias_scale::ap_const_lv32_10 = "10000";
const sc_lv<32> load_bias_scale::ap_const_lv32_1 = "1";
const sc_lv<32> load_bias_scale::ap_const_lv32_3 = "11";
const sc_lv<32> load_bias_scale::ap_const_lv32_4 = "100";
const sc_lv<32> load_bias_scale::ap_const_lv32_5 = "101";
const sc_lv<32> load_bias_scale::ap_const_lv32_6 = "110";
const sc_lv<32> load_bias_scale::ap_const_lv32_7 = "111";
const sc_lv<32> load_bias_scale::ap_const_lv32_8 = "1000";
const sc_lv<32> load_bias_scale::ap_const_lv32_13 = "10011";
const sc_lv<32> load_bias_scale::ap_const_lv32_1A = "11010";
const sc_lv<32> load_bias_scale::ap_const_lv32_1B = "11011";
const sc_lv<32> load_bias_scale::ap_const_lv32_1C = "11100";
const sc_lv<32> load_bias_scale::ap_const_lv32_1D = "11101";
const sc_lv<32> load_bias_scale::ap_const_lv32_1E = "11110";
const sc_lv<32> load_bias_scale::ap_const_lv32_1F = "11111";
const sc_lv<32> load_bias_scale::ap_const_lv32_20 = "100000";
const sc_lv<32> load_bias_scale::ap_const_lv32_21 = "100001";
const sc_lv<32> load_bias_scale::ap_const_lv32_12 = "10010";
const sc_lv<32> load_bias_scale::ap_const_lv32_14 = "10100";
const sc_lv<32> load_bias_scale::ap_const_lv32_15 = "10101";
const sc_lv<32> load_bias_scale::ap_const_lv32_16 = "10110";
const sc_lv<32> load_bias_scale::ap_const_lv32_17 = "10111";
const sc_lv<32> load_bias_scale::ap_const_lv32_18 = "11000";
const sc_lv<32> load_bias_scale::ap_const_lv32_19 = "11001";
const sc_lv<32> load_bias_scale::ap_const_lv32_11 = "10001";
const sc_lv<1> load_bias_scale::ap_const_lv1_1 = "1";
const sc_lv<5> load_bias_scale::ap_const_lv5_0 = "00000";
const sc_lv<5> load_bias_scale::ap_const_lv5_1 = "1";
const sc_lv<32> load_bias_scale::ap_const_lv32_22 = "100010";

load_bias_scale::load_bias_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln100_1_fu_267_p2);
    sensitive << ( add_ln100_reg_421 );
    sensitive << ( zext_ln105_1_fu_263_p1 );

    SC_METHOD(thread_add_ln100_fu_235_p2);
    sensitive << ( offset );
    sensitive << ( zext_ln100_fu_231_p1 );

    SC_METHOD(thread_add_ln85_fu_183_p2);
    sensitive << ( offset );
    sensitive << ( zext_ln90_1_fu_179_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10);

    SC_METHOD(thread_ap_block_pp0_stage10_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage11);

    SC_METHOD(thread_ap_block_pp0_stage11_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage11_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage12);

    SC_METHOD(thread_ap_block_pp0_stage12_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage12_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage13);

    SC_METHOD(thread_ap_block_pp0_stage13_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage13_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage14);

    SC_METHOD(thread_ap_block_pp0_stage14_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage14_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage15);

    SC_METHOD(thread_ap_block_pp0_stage15_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage15_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage10);

    SC_METHOD(thread_ap_block_pp1_stage10_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage10_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage11);

    SC_METHOD(thread_ap_block_pp1_stage11_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage11_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage12);

    SC_METHOD(thread_ap_block_pp1_stage12_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage12_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage13);

    SC_METHOD(thread_ap_block_pp1_stage13_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage13_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage14);

    SC_METHOD(thread_ap_block_pp1_stage14_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage14_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage15);

    SC_METHOD(thread_ap_block_pp1_stage15_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage15_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage1_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );
    sensitive << ( ap_block_state29_io );

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage3);

    SC_METHOD(thread_ap_block_pp1_stage3_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage3_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage4);

    SC_METHOD(thread_ap_block_pp1_stage4_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage4_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage5);

    SC_METHOD(thread_ap_block_pp1_stage5_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage5_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage6);

    SC_METHOD(thread_ap_block_pp1_stage6_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage6_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage7);

    SC_METHOD(thread_ap_block_pp1_stage7_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage7_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_pp1_stage8);

    SC_METHOD(thread_ap_block_pp1_stage8_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage8_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage9);

    SC_METHOD(thread_ap_block_pp1_stage9_11001);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_pp1_stage9_subdone);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state10_pp0_stage8_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state12_pp0_stage10_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state13_pp0_stage11_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state14_pp0_stage12_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state15_pp0_stage13_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state16_pp0_stage14_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state17_pp0_stage15_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state22_pp0_stage4_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state23_pp0_stage5_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state24_pp0_stage6_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state25_pp0_stage7_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state26_pp0_stage8_iter1);

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state29_io);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state29_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state31_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state32_pp1_stage4_iter0);

    SC_METHOD(thread_ap_block_state33_pp1_stage5_iter0);

    SC_METHOD(thread_ap_block_state34_pp1_stage6_iter0);

    SC_METHOD(thread_ap_block_state35_pp1_stage7_iter0);

    SC_METHOD(thread_ap_block_state36_pp1_stage8_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state37_pp1_stage9_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state38_pp1_stage10_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state39_pp1_stage11_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( icmp_ln80_reg_321 );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state40_pp1_stage12_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state41_pp1_stage13_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state42_pp1_stage14_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state43_pp1_stage15_iter0);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state44_pp1_stage0_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ap_block_state45_pp1_stage1_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state46_pp1_stage2_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state47_pp1_stage3_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state48_pp1_stage4_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state49_pp1_stage5_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state50_pp1_stage6_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state51_pp1_stage7_iter1);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state52_pp1_stage8_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln80_fu_156_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state28);
    sensitive << ( icmp_ln95_fu_240_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_i1_0_phi_fu_148_p4);
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( i1_0_reg_144 );
    sensitive << ( i_2_reg_430 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_136_p4);
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i_0_reg_132 );
    sensitive << ( i_reg_325 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln90_fu_198_p1 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_bias_d0);
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ddr_V_addr_read_reg_341 );
    sensitive << ( ddr_V_addr_read_128_reg_346 );
    sensitive << ( ddr_V_addr_read_129_reg_351 );
    sensitive << ( ddr_V_addr_read_130_reg_356 );
    sensitive << ( ddr_V_addr_read_131_reg_361 );
    sensitive << ( ddr_V_addr_read_132_reg_366 );
    sensitive << ( ddr_V_addr_read_133_reg_371 );
    sensitive << ( ddr_V_addr_read_134_reg_376 );
    sensitive << ( ddr_V_addr_read_135_reg_381 );
    sensitive << ( ddr_V_addr_read_136_reg_386 );
    sensitive << ( ddr_V_addr_read_137_reg_391 );
    sensitive << ( ddr_V_addr_read_138_reg_396 );
    sensitive << ( ddr_V_addr_read_139_reg_401 );
    sensitive << ( ddr_V_addr_read_140_reg_406 );
    sensitive << ( ddr_V_addr_read_141_reg_411 );
    sensitive << ( ddr_V_addr_read_142_reg_416 );

    SC_METHOD(thread_bias_we0);
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_ddr_V_blk_n_AR);
    sensitive << ( m_axi_ddr_V_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( icmp_ln95_reg_426 );

    SC_METHOD(thread_ddr_V_blk_n_R);
    sensitive << ( m_axi_ddr_V_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_block_pp1_stage8 );
    sensitive << ( ap_CS_fsm_pp1_stage9 );
    sensitive << ( ap_block_pp1_stage9 );
    sensitive << ( ap_CS_fsm_pp1_stage10 );
    sensitive << ( ap_block_pp1_stage10 );
    sensitive << ( ap_CS_fsm_pp1_stage11 );
    sensitive << ( ap_block_pp1_stage11 );
    sensitive << ( ap_CS_fsm_pp1_stage12 );
    sensitive << ( ap_block_pp1_stage12 );
    sensitive << ( ap_CS_fsm_pp1_stage13 );
    sensitive << ( ap_block_pp1_stage13 );
    sensitive << ( ap_CS_fsm_pp1_stage14 );
    sensitive << ( ap_block_pp1_stage14 );
    sensitive << ( ap_CS_fsm_pp1_stage15 );
    sensitive << ( ap_block_pp1_stage15 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_block_pp1_stage4 );
    sensitive << ( ap_CS_fsm_pp1_stage5 );
    sensitive << ( ap_block_pp1_stage5 );
    sensitive << ( ap_CS_fsm_pp1_stage6 );
    sensitive << ( ap_block_pp1_stage6 );
    sensitive << ( ap_CS_fsm_pp1_stage7 );
    sensitive << ( ap_block_pp1_stage7 );

    SC_METHOD(thread_i_2_fu_245_p2);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_148_p4 );

    SC_METHOD(thread_i_fu_161_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_136_p4 );

    SC_METHOD(thread_icmp_ln80_fu_156_p2);
    sensitive << ( TO_r );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_136_p4 );

    SC_METHOD(thread_icmp_ln95_fu_240_p2);
    sensitive << ( TO_r );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_i1_0_phi_fu_148_p4 );

    SC_METHOD(thread_m_axi_ddr_V_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( zext_ln85_fu_188_p1 );
    sensitive << ( zext_ln100_1_fu_272_p1 );

    SC_METHOD(thread_m_axi_ddr_V_ARBURST);

    SC_METHOD(thread_m_axi_ddr_V_ARCACHE);

    SC_METHOD(thread_m_axi_ddr_V_ARID);

    SC_METHOD(thread_m_axi_ddr_V_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_m_axi_ddr_V_ARLOCK);

    SC_METHOD(thread_m_axi_ddr_V_ARPROT);

    SC_METHOD(thread_m_axi_ddr_V_ARQOS);

    SC_METHOD(thread_m_axi_ddr_V_ARREGION);

    SC_METHOD(thread_m_axi_ddr_V_ARSIZE);

    SC_METHOD(thread_m_axi_ddr_V_ARUSER);

    SC_METHOD(thread_m_axi_ddr_V_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_m_axi_ddr_V_AWADDR);

    SC_METHOD(thread_m_axi_ddr_V_AWBURST);

    SC_METHOD(thread_m_axi_ddr_V_AWCACHE);

    SC_METHOD(thread_m_axi_ddr_V_AWID);

    SC_METHOD(thread_m_axi_ddr_V_AWLEN);

    SC_METHOD(thread_m_axi_ddr_V_AWLOCK);

    SC_METHOD(thread_m_axi_ddr_V_AWPROT);

    SC_METHOD(thread_m_axi_ddr_V_AWQOS);

    SC_METHOD(thread_m_axi_ddr_V_AWREGION);

    SC_METHOD(thread_m_axi_ddr_V_AWSIZE);

    SC_METHOD(thread_m_axi_ddr_V_AWUSER);

    SC_METHOD(thread_m_axi_ddr_V_AWVALID);

    SC_METHOD(thread_m_axi_ddr_V_BREADY);

    SC_METHOD(thread_m_axi_ddr_V_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln80_reg_321 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln80_reg_321_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln95_reg_426 );
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_CS_fsm_pp1_stage9 );
    sensitive << ( ap_CS_fsm_pp1_stage10 );
    sensitive << ( ap_CS_fsm_pp1_stage11 );
    sensitive << ( ap_CS_fsm_pp1_stage12 );
    sensitive << ( ap_CS_fsm_pp1_stage13 );
    sensitive << ( ap_CS_fsm_pp1_stage14 );
    sensitive << ( ap_CS_fsm_pp1_stage15 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_CS_fsm_pp1_stage4 );
    sensitive << ( ap_CS_fsm_pp1_stage5 );
    sensitive << ( ap_CS_fsm_pp1_stage6 );
    sensitive << ( ap_CS_fsm_pp1_stage7 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_block_pp1_stage8_11001 );
    sensitive << ( ap_block_pp1_stage9_11001 );
    sensitive << ( ap_block_pp1_stage10_11001 );
    sensitive << ( ap_block_pp1_stage11_11001 );
    sensitive << ( ap_block_pp1_stage12_11001 );
    sensitive << ( ap_block_pp1_stage13_11001 );
    sensitive << ( ap_block_pp1_stage14_11001 );
    sensitive << ( ap_block_pp1_stage15_11001 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_block_pp1_stage3_11001 );
    sensitive << ( ap_block_pp1_stage4_11001 );
    sensitive << ( ap_block_pp1_stage5_11001 );
    sensitive << ( ap_block_pp1_stage6_11001 );
    sensitive << ( ap_block_pp1_stage7_11001 );

    SC_METHOD(thread_m_axi_ddr_V_WDATA);

    SC_METHOD(thread_m_axi_ddr_V_WID);

    SC_METHOD(thread_m_axi_ddr_V_WLAST);

    SC_METHOD(thread_m_axi_ddr_V_WSTRB);

    SC_METHOD(thread_m_axi_ddr_V_WUSER);

    SC_METHOD(thread_m_axi_ddr_V_WVALID);

    SC_METHOD(thread_scale_address0);
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_block_pp1_stage8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( zext_ln105_fu_282_p1 );

    SC_METHOD(thread_scale_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage8_11001 );

    SC_METHOD(thread_scale_d0);
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_block_pp1_stage8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ddr_V_addr_1_read_reg_446 );
    sensitive << ( ddr_V_addr_1_read_1_reg_451 );
    sensitive << ( ddr_V_addr_1_read_2_reg_456 );
    sensitive << ( ddr_V_addr_1_read_3_reg_461 );
    sensitive << ( ddr_V_addr_1_read_4_reg_466 );
    sensitive << ( ddr_V_addr_1_read_5_reg_471 );
    sensitive << ( ddr_V_addr_1_read_6_reg_476 );
    sensitive << ( ddr_V_addr_1_read_7_reg_481 );
    sensitive << ( ddr_V_addr_1_read_8_reg_486 );
    sensitive << ( ddr_V_addr_1_read_9_reg_491 );
    sensitive << ( ddr_V_addr_1_read_10_reg_496 );
    sensitive << ( ddr_V_addr_1_read_11_reg_501 );
    sensitive << ( ddr_V_addr_1_read_12_reg_506 );
    sensitive << ( ddr_V_addr_1_read_13_reg_511 );
    sensitive << ( ddr_V_addr_1_read_14_reg_516 );
    sensitive << ( ddr_V_addr_1_read_15_reg_521 );

    SC_METHOD(thread_scale_we0);
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln95_reg_426_pp1_iter1_reg );
    sensitive << ( ap_block_pp1_stage8_11001 );

    SC_METHOD(thread_shl_ln100_1_fu_255_p3);
    sensitive << ( trunc_ln100_fu_251_p1 );

    SC_METHOD(thread_shl_ln2_fu_171_p3);
    sensitive << ( trunc_ln85_fu_167_p1 );

    SC_METHOD(thread_shl_ln_fu_224_p3);
    sensitive << ( TO_r );

    SC_METHOD(thread_trunc_ln100_fu_251_p1);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_148_p4 );

    SC_METHOD(thread_trunc_ln85_fu_167_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_136_p4 );

    SC_METHOD(thread_zext_ln100_1_fu_272_p1);
    sensitive << ( add_ln100_1_reg_435 );

    SC_METHOD(thread_zext_ln100_fu_231_p1);
    sensitive << ( shl_ln_fu_224_p3 );

    SC_METHOD(thread_zext_ln105_1_fu_263_p1);
    sensitive << ( shl_ln100_1_fu_255_p3 );

    SC_METHOD(thread_zext_ln105_fu_282_p1);
    sensitive << ( i1_0_reg_144_pp1_iter1_reg );

    SC_METHOD(thread_zext_ln85_fu_188_p1);
    sensitive << ( add_ln85_reg_330 );

    SC_METHOD(thread_zext_ln90_1_fu_179_p1);
    sensitive << ( shl_ln2_fu_171_p3 );

    SC_METHOD(thread_zext_ln90_fu_198_p1);
    sensitive << ( i_0_reg_132_pp0_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage8 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln80_fu_156_p2 );
    sensitive << ( icmp_ln95_fu_240_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage15_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage15_subdone );
    sensitive << ( ap_block_pp1_stage8_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_block_pp0_stage11_subdone );
    sensitive << ( ap_block_pp0_stage12_subdone );
    sensitive << ( ap_block_pp0_stage13_subdone );
    sensitive << ( ap_block_pp0_stage14_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );
    sensitive << ( ap_block_pp1_stage3_subdone );
    sensitive << ( ap_block_pp1_stage4_subdone );
    sensitive << ( ap_block_pp1_stage5_subdone );
    sensitive << ( ap_block_pp1_stage6_subdone );
    sensitive << ( ap_block_pp1_stage7_subdone );
    sensitive << ( ap_block_pp1_stage9_subdone );
    sensitive << ( ap_block_pp1_stage10_subdone );
    sensitive << ( ap_block_pp1_stage11_subdone );
    sensitive << ( ap_block_pp1_stage12_subdone );
    sensitive << ( ap_block_pp1_stage13_subdone );
    sensitive << ( ap_block_pp1_stage14_subdone );

    ap_CS_fsm = "00000000000000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "load_bias_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_we0, "(port)bias_we0");
    sc_trace(mVcdFile, bias_d0, "(port)bias_d0");
    sc_trace(mVcdFile, scale_address0, "(port)scale_address0");
    sc_trace(mVcdFile, scale_ce0, "(port)scale_ce0");
    sc_trace(mVcdFile, scale_we0, "(port)scale_we0");
    sc_trace(mVcdFile, scale_d0, "(port)scale_d0");
    sc_trace(mVcdFile, m_axi_ddr_V_AWVALID, "(port)m_axi_ddr_V_AWVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_AWREADY, "(port)m_axi_ddr_V_AWREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_AWADDR, "(port)m_axi_ddr_V_AWADDR");
    sc_trace(mVcdFile, m_axi_ddr_V_AWID, "(port)m_axi_ddr_V_AWID");
    sc_trace(mVcdFile, m_axi_ddr_V_AWLEN, "(port)m_axi_ddr_V_AWLEN");
    sc_trace(mVcdFile, m_axi_ddr_V_AWSIZE, "(port)m_axi_ddr_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_ddr_V_AWBURST, "(port)m_axi_ddr_V_AWBURST");
    sc_trace(mVcdFile, m_axi_ddr_V_AWLOCK, "(port)m_axi_ddr_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_ddr_V_AWCACHE, "(port)m_axi_ddr_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_ddr_V_AWPROT, "(port)m_axi_ddr_V_AWPROT");
    sc_trace(mVcdFile, m_axi_ddr_V_AWQOS, "(port)m_axi_ddr_V_AWQOS");
    sc_trace(mVcdFile, m_axi_ddr_V_AWREGION, "(port)m_axi_ddr_V_AWREGION");
    sc_trace(mVcdFile, m_axi_ddr_V_AWUSER, "(port)m_axi_ddr_V_AWUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_WVALID, "(port)m_axi_ddr_V_WVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_WREADY, "(port)m_axi_ddr_V_WREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_WDATA, "(port)m_axi_ddr_V_WDATA");
    sc_trace(mVcdFile, m_axi_ddr_V_WSTRB, "(port)m_axi_ddr_V_WSTRB");
    sc_trace(mVcdFile, m_axi_ddr_V_WLAST, "(port)m_axi_ddr_V_WLAST");
    sc_trace(mVcdFile, m_axi_ddr_V_WID, "(port)m_axi_ddr_V_WID");
    sc_trace(mVcdFile, m_axi_ddr_V_WUSER, "(port)m_axi_ddr_V_WUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_ARVALID, "(port)m_axi_ddr_V_ARVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_ARREADY, "(port)m_axi_ddr_V_ARREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_ARADDR, "(port)m_axi_ddr_V_ARADDR");
    sc_trace(mVcdFile, m_axi_ddr_V_ARID, "(port)m_axi_ddr_V_ARID");
    sc_trace(mVcdFile, m_axi_ddr_V_ARLEN, "(port)m_axi_ddr_V_ARLEN");
    sc_trace(mVcdFile, m_axi_ddr_V_ARSIZE, "(port)m_axi_ddr_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_ddr_V_ARBURST, "(port)m_axi_ddr_V_ARBURST");
    sc_trace(mVcdFile, m_axi_ddr_V_ARLOCK, "(port)m_axi_ddr_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_ddr_V_ARCACHE, "(port)m_axi_ddr_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_ddr_V_ARPROT, "(port)m_axi_ddr_V_ARPROT");
    sc_trace(mVcdFile, m_axi_ddr_V_ARQOS, "(port)m_axi_ddr_V_ARQOS");
    sc_trace(mVcdFile, m_axi_ddr_V_ARREGION, "(port)m_axi_ddr_V_ARREGION");
    sc_trace(mVcdFile, m_axi_ddr_V_ARUSER, "(port)m_axi_ddr_V_ARUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_RVALID, "(port)m_axi_ddr_V_RVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_RREADY, "(port)m_axi_ddr_V_RREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_RDATA, "(port)m_axi_ddr_V_RDATA");
    sc_trace(mVcdFile, m_axi_ddr_V_RLAST, "(port)m_axi_ddr_V_RLAST");
    sc_trace(mVcdFile, m_axi_ddr_V_RID, "(port)m_axi_ddr_V_RID");
    sc_trace(mVcdFile, m_axi_ddr_V_RUSER, "(port)m_axi_ddr_V_RUSER");
    sc_trace(mVcdFile, m_axi_ddr_V_RRESP, "(port)m_axi_ddr_V_RRESP");
    sc_trace(mVcdFile, m_axi_ddr_V_BVALID, "(port)m_axi_ddr_V_BVALID");
    sc_trace(mVcdFile, m_axi_ddr_V_BREADY, "(port)m_axi_ddr_V_BREADY");
    sc_trace(mVcdFile, m_axi_ddr_V_BRESP, "(port)m_axi_ddr_V_BRESP");
    sc_trace(mVcdFile, m_axi_ddr_V_BID, "(port)m_axi_ddr_V_BID");
    sc_trace(mVcdFile, m_axi_ddr_V_BUSER, "(port)m_axi_ddr_V_BUSER");
    sc_trace(mVcdFile, TO_r, "(port)TO_r");
    sc_trace(mVcdFile, offset, "(port)offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ddr_V_blk_n_AR, "ddr_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln80_reg_321, "icmp_ln80_reg_321");
    sc_trace(mVcdFile, ddr_V_blk_n_R, "ddr_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_block_pp0_stage10, "ap_block_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_block_pp0_stage11, "ap_block_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_block_pp0_stage12, "ap_block_pp0_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_block_pp0_stage13, "ap_block_pp0_stage13");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_block_pp0_stage14, "ap_block_pp0_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, ap_block_pp0_stage15, "ap_block_pp0_stage15");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln80_reg_321_pp0_iter1_reg, "icmp_ln80_reg_321_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, icmp_ln95_reg_426, "icmp_ln95_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage8, "ap_CS_fsm_pp1_stage8");
    sc_trace(mVcdFile, ap_block_pp1_stage8, "ap_block_pp1_stage8");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage9, "ap_CS_fsm_pp1_stage9");
    sc_trace(mVcdFile, ap_block_pp1_stage9, "ap_block_pp1_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage10, "ap_CS_fsm_pp1_stage10");
    sc_trace(mVcdFile, ap_block_pp1_stage10, "ap_block_pp1_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage11, "ap_CS_fsm_pp1_stage11");
    sc_trace(mVcdFile, ap_block_pp1_stage11, "ap_block_pp1_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage12, "ap_CS_fsm_pp1_stage12");
    sc_trace(mVcdFile, ap_block_pp1_stage12, "ap_block_pp1_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage13, "ap_CS_fsm_pp1_stage13");
    sc_trace(mVcdFile, ap_block_pp1_stage13, "ap_block_pp1_stage13");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage14, "ap_CS_fsm_pp1_stage14");
    sc_trace(mVcdFile, ap_block_pp1_stage14, "ap_block_pp1_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage15, "ap_CS_fsm_pp1_stage15");
    sc_trace(mVcdFile, ap_block_pp1_stage15, "ap_block_pp1_stage15");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln95_reg_426_pp1_iter1_reg, "icmp_ln95_reg_426_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage3, "ap_CS_fsm_pp1_stage3");
    sc_trace(mVcdFile, ap_block_pp1_stage3, "ap_block_pp1_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage4, "ap_CS_fsm_pp1_stage4");
    sc_trace(mVcdFile, ap_block_pp1_stage4, "ap_block_pp1_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage5, "ap_CS_fsm_pp1_stage5");
    sc_trace(mVcdFile, ap_block_pp1_stage5, "ap_block_pp1_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage6, "ap_CS_fsm_pp1_stage6");
    sc_trace(mVcdFile, ap_block_pp1_stage6, "ap_block_pp1_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage7, "ap_CS_fsm_pp1_stage7");
    sc_trace(mVcdFile, ap_block_pp1_stage7, "ap_block_pp1_stage7");
    sc_trace(mVcdFile, i_0_reg_132, "i_0_reg_132");
    sc_trace(mVcdFile, i_0_reg_132_pp0_iter1_reg, "i_0_reg_132_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter1, "ap_block_state18_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i1_0_reg_144, "i1_0_reg_144");
    sc_trace(mVcdFile, i1_0_reg_144_pp1_iter1_reg, "i1_0_reg_144_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter0, "ap_block_state28_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state44_pp1_stage0_iter1, "ap_block_state44_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln80_fu_156_p2, "icmp_ln80_fu_156_p2");
    sc_trace(mVcdFile, i_fu_161_p2, "i_fu_161_p2");
    sc_trace(mVcdFile, i_reg_325, "i_reg_325");
    sc_trace(mVcdFile, add_ln85_fu_183_p2, "add_ln85_fu_183_p2");
    sc_trace(mVcdFile, add_ln85_reg_330, "add_ln85_reg_330");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter1, "ap_block_state19_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_reg_341, "ddr_V_addr_read_reg_341");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage8_iter0, "ap_block_state10_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage8_iter1, "ap_block_state26_pp0_stage8_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_128_reg_346, "ddr_V_addr_read_128_reg_346");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0, "ap_block_state11_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_129_reg_351, "ddr_V_addr_read_129_reg_351");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage10_iter0, "ap_block_state12_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_130_reg_356, "ddr_V_addr_read_130_reg_356");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage11_iter0, "ap_block_state13_pp0_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage11_11001, "ap_block_pp0_stage11_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_131_reg_361, "ddr_V_addr_read_131_reg_361");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage12_iter0, "ap_block_state14_pp0_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage12_11001, "ap_block_pp0_stage12_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_132_reg_366, "ddr_V_addr_read_132_reg_366");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage13_iter0, "ap_block_state15_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage13_11001, "ap_block_pp0_stage13_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_133_reg_371, "ddr_V_addr_read_133_reg_371");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage14_iter0, "ap_block_state16_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage14_11001, "ap_block_pp0_stage14_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_134_reg_376, "ddr_V_addr_read_134_reg_376");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage15_iter0, "ap_block_state17_pp0_stage15_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage15_11001, "ap_block_pp0_stage15_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_135_reg_381, "ddr_V_addr_read_135_reg_381");
    sc_trace(mVcdFile, ddr_V_addr_read_136_reg_386, "ddr_V_addr_read_136_reg_386");
    sc_trace(mVcdFile, ddr_V_addr_read_137_reg_391, "ddr_V_addr_read_137_reg_391");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter1, "ap_block_state20_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_138_reg_396, "ddr_V_addr_read_138_reg_396");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter1, "ap_block_state21_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_139_reg_401, "ddr_V_addr_read_139_reg_401");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage4_iter1, "ap_block_state22_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_140_reg_406, "ddr_V_addr_read_140_reg_406");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage5_iter1, "ap_block_state23_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_141_reg_411, "ddr_V_addr_read_141_reg_411");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage6_iter1, "ap_block_state24_pp0_stage6_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, ddr_V_addr_read_142_reg_416, "ddr_V_addr_read_142_reg_416");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage7_iter1, "ap_block_state25_pp0_stage7_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, add_ln100_fu_235_p2, "add_ln100_fu_235_p2");
    sc_trace(mVcdFile, add_ln100_reg_421, "add_ln100_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, icmp_ln95_fu_240_p2, "icmp_ln95_fu_240_p2");
    sc_trace(mVcdFile, i_2_fu_245_p2, "i_2_fu_245_p2");
    sc_trace(mVcdFile, i_2_reg_430, "i_2_reg_430");
    sc_trace(mVcdFile, add_ln100_1_fu_267_p2, "add_ln100_1_fu_267_p2");
    sc_trace(mVcdFile, add_ln100_1_reg_435, "add_ln100_1_reg_435");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage1_iter0, "ap_block_state29_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state29_io, "ap_block_state29_io");
    sc_trace(mVcdFile, ap_block_state45_pp1_stage1_iter1, "ap_block_state45_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_reg_446, "ddr_V_addr_1_read_reg_446");
    sc_trace(mVcdFile, ap_block_state36_pp1_stage8_iter0, "ap_block_state36_pp1_stage8_iter0");
    sc_trace(mVcdFile, ap_block_state52_pp1_stage8_iter1, "ap_block_state52_pp1_stage8_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage8_11001, "ap_block_pp1_stage8_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_1_reg_451, "ddr_V_addr_1_read_1_reg_451");
    sc_trace(mVcdFile, ap_block_state37_pp1_stage9_iter0, "ap_block_state37_pp1_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage9_11001, "ap_block_pp1_stage9_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_2_reg_456, "ddr_V_addr_1_read_2_reg_456");
    sc_trace(mVcdFile, ap_block_state38_pp1_stage10_iter0, "ap_block_state38_pp1_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage10_11001, "ap_block_pp1_stage10_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_3_reg_461, "ddr_V_addr_1_read_3_reg_461");
    sc_trace(mVcdFile, ap_block_state39_pp1_stage11_iter0, "ap_block_state39_pp1_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage11_11001, "ap_block_pp1_stage11_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_4_reg_466, "ddr_V_addr_1_read_4_reg_466");
    sc_trace(mVcdFile, ap_block_state40_pp1_stage12_iter0, "ap_block_state40_pp1_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage12_11001, "ap_block_pp1_stage12_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_5_reg_471, "ddr_V_addr_1_read_5_reg_471");
    sc_trace(mVcdFile, ap_block_state41_pp1_stage13_iter0, "ap_block_state41_pp1_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage13_11001, "ap_block_pp1_stage13_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_6_reg_476, "ddr_V_addr_1_read_6_reg_476");
    sc_trace(mVcdFile, ap_block_state42_pp1_stage14_iter0, "ap_block_state42_pp1_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage14_11001, "ap_block_pp1_stage14_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_7_reg_481, "ddr_V_addr_1_read_7_reg_481");
    sc_trace(mVcdFile, ap_block_state43_pp1_stage15_iter0, "ap_block_state43_pp1_stage15_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage15_11001, "ap_block_pp1_stage15_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_8_reg_486, "ddr_V_addr_1_read_8_reg_486");
    sc_trace(mVcdFile, ddr_V_addr_1_read_9_reg_491, "ddr_V_addr_1_read_9_reg_491");
    sc_trace(mVcdFile, ddr_V_addr_1_read_10_reg_496, "ddr_V_addr_1_read_10_reg_496");
    sc_trace(mVcdFile, ap_block_state30_pp1_stage2_iter0, "ap_block_state30_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state46_pp1_stage2_iter1, "ap_block_state46_pp1_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_11_reg_501, "ddr_V_addr_1_read_11_reg_501");
    sc_trace(mVcdFile, ap_block_state31_pp1_stage3_iter0, "ap_block_state31_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state47_pp1_stage3_iter1, "ap_block_state47_pp1_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage3_11001, "ap_block_pp1_stage3_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_12_reg_506, "ddr_V_addr_1_read_12_reg_506");
    sc_trace(mVcdFile, ap_block_state32_pp1_stage4_iter0, "ap_block_state32_pp1_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state48_pp1_stage4_iter1, "ap_block_state48_pp1_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage4_11001, "ap_block_pp1_stage4_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_13_reg_511, "ddr_V_addr_1_read_13_reg_511");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage5_iter0, "ap_block_state33_pp1_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state49_pp1_stage5_iter1, "ap_block_state49_pp1_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage5_11001, "ap_block_pp1_stage5_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_14_reg_516, "ddr_V_addr_1_read_14_reg_516");
    sc_trace(mVcdFile, ap_block_state34_pp1_stage6_iter0, "ap_block_state34_pp1_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state50_pp1_stage6_iter1, "ap_block_state50_pp1_stage6_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage6_11001, "ap_block_pp1_stage6_11001");
    sc_trace(mVcdFile, ddr_V_addr_1_read_15_reg_521, "ddr_V_addr_1_read_15_reg_521");
    sc_trace(mVcdFile, ap_block_state35_pp1_stage7_iter0, "ap_block_state35_pp1_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state51_pp1_stage7_iter1, "ap_block_state51_pp1_stage7_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage7_11001, "ap_block_pp1_stage7_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage15_subdone, "ap_block_pp0_stage15_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state28, "ap_condition_pp1_exit_iter0_state28");
    sc_trace(mVcdFile, ap_block_pp1_stage15_subdone, "ap_block_pp1_stage15_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage8_subdone, "ap_block_pp1_stage8_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_136_p4, "ap_phi_mux_i_0_phi_fu_136_p4");
    sc_trace(mVcdFile, ap_phi_mux_i1_0_phi_fu_148_p4, "ap_phi_mux_i1_0_phi_fu_148_p4");
    sc_trace(mVcdFile, zext_ln90_fu_198_p1, "zext_ln90_fu_198_p1");
    sc_trace(mVcdFile, zext_ln105_fu_282_p1, "zext_ln105_fu_282_p1");
    sc_trace(mVcdFile, zext_ln85_fu_188_p1, "zext_ln85_fu_188_p1");
    sc_trace(mVcdFile, zext_ln100_1_fu_272_p1, "zext_ln100_1_fu_272_p1");
    sc_trace(mVcdFile, trunc_ln85_fu_167_p1, "trunc_ln85_fu_167_p1");
    sc_trace(mVcdFile, shl_ln2_fu_171_p3, "shl_ln2_fu_171_p3");
    sc_trace(mVcdFile, zext_ln90_1_fu_179_p1, "zext_ln90_1_fu_179_p1");
    sc_trace(mVcdFile, shl_ln_fu_224_p3, "shl_ln_fu_224_p3");
    sc_trace(mVcdFile, zext_ln100_fu_231_p1, "zext_ln100_fu_231_p1");
    sc_trace(mVcdFile, trunc_ln100_fu_251_p1, "trunc_ln100_fu_251_p1");
    sc_trace(mVcdFile, shl_ln100_1_fu_255_p3, "shl_ln100_1_fu_255_p3");
    sc_trace(mVcdFile, zext_ln105_1_fu_263_p1, "zext_ln105_1_fu_263_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage11_subdone, "ap_block_pp0_stage11_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage12_subdone, "ap_block_pp0_stage12_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage13_subdone, "ap_block_pp0_stage13_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage14_subdone, "ap_block_pp0_stage14_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage3_subdone, "ap_block_pp1_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage4_subdone, "ap_block_pp1_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage5_subdone, "ap_block_pp1_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage6_subdone, "ap_block_pp1_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage7_subdone, "ap_block_pp1_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage9_subdone, "ap_block_pp1_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage10_subdone, "ap_block_pp1_stage10_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage11_subdone, "ap_block_pp1_stage11_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage12_subdone, "ap_block_pp1_stage12_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage13_subdone, "ap_block_pp1_stage13_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage14_subdone, "ap_block_pp1_stage14_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

load_bias_scale::~load_bias_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void load_bias_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state28.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage15.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage15_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage8_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i1_0_reg_144 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i1_0_reg_144 = i_2_reg_430.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_132 = i_reg_325.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_132 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_240_p2.read()))) {
        add_ln100_1_reg_435 = add_ln100_1_fu_267_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        add_ln100_reg_421 = add_ln100_fu_235_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_156_p2.read()))) {
        add_ln85_reg_330 = add_ln85_fu_183_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_10_reg_496 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_11_reg_501 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_12_reg_506 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage5_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_13_reg_511 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage6_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_14_reg_516 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage7_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_15_reg_521 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage9_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_1_reg_451 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage10.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage10_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_2_reg_456 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage11.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage11_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_3_reg_461 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage12.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage12_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_4_reg_466 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage13.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage13_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_5_reg_471 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage14.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage14_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_6_reg_476 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage15.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage15_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_7_reg_481 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_8_reg_486 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_9_reg_491 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage8_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_1_read_reg_446 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_128_reg_346 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_129_reg_351 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_130_reg_356 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_131_reg_361 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_132_reg_366 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_133_reg_371 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_134_reg_376 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_135_reg_381 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_136_reg_386 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_137_reg_391 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_138_reg_396 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_139_reg_401 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_140_reg_406 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_141_reg_411 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_142_reg_416 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        ddr_V_addr_read_reg_341 = m_axi_ddr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i1_0_reg_144_pp1_iter1_reg = i1_0_reg_144.read();
        icmp_ln95_reg_426 = icmp_ln95_fu_240_p2.read();
        icmp_ln95_reg_426_pp1_iter1_reg = icmp_ln95_reg_426.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_132_pp0_iter1_reg = i_0_reg_132.read();
        icmp_ln80_reg_321 = icmp_ln80_fu_156_p2.read();
        icmp_ln80_reg_321_pp0_iter1_reg = icmp_ln80_reg_321.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i_2_reg_430 = i_2_fu_245_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_325 = i_fu_161_p2.read();
    }
}

void load_bias_scale::thread_add_ln100_1_fu_267_p2() {
    add_ln100_1_fu_267_p2 = (!zext_ln105_1_fu_263_p1.read().is_01() || !add_ln100_reg_421.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln105_1_fu_263_p1.read()) + sc_biguint<20>(add_ln100_reg_421.read()));
}

void load_bias_scale::thread_add_ln100_fu_235_p2() {
    add_ln100_fu_235_p2 = (!zext_ln100_fu_231_p1.read().is_01() || !offset.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln100_fu_231_p1.read()) + sc_biguint<20>(offset.read()));
}

void load_bias_scale::thread_add_ln85_fu_183_p2() {
    add_ln85_fu_183_p2 = (!offset.read().is_01() || !zext_ln90_1_fu_179_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(offset.read()) + sc_biguint<20>(zext_ln90_1_fu_179_p1.read()));
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[11];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read()[12];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read()[13];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read()[14];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read()[15];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read()[16];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[9];
}

void load_bias_scale::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[10];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[18];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[19];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage10() {
    ap_CS_fsm_pp1_stage10 = ap_CS_fsm.read()[28];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage11() {
    ap_CS_fsm_pp1_stage11 = ap_CS_fsm.read()[29];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage12() {
    ap_CS_fsm_pp1_stage12 = ap_CS_fsm.read()[30];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage13() {
    ap_CS_fsm_pp1_stage13 = ap_CS_fsm.read()[31];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage14() {
    ap_CS_fsm_pp1_stage14 = ap_CS_fsm.read()[32];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage15() {
    ap_CS_fsm_pp1_stage15 = ap_CS_fsm.read()[33];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[20];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage3() {
    ap_CS_fsm_pp1_stage3 = ap_CS_fsm.read()[21];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage4() {
    ap_CS_fsm_pp1_stage4 = ap_CS_fsm.read()[22];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage5() {
    ap_CS_fsm_pp1_stage5 = ap_CS_fsm.read()[23];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage6() {
    ap_CS_fsm_pp1_stage6 = ap_CS_fsm.read()[24];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage7() {
    ap_CS_fsm_pp1_stage7 = ap_CS_fsm.read()[25];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage8() {
    ap_CS_fsm_pp1_stage8 = ap_CS_fsm.read()[26];
}

void load_bias_scale::thread_ap_CS_fsm_pp1_stage9() {
    ap_CS_fsm_pp1_stage9 = ap_CS_fsm.read()[27];
}

void load_bias_scale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void load_bias_scale::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[17];
}

void load_bias_scale::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[34];
}

void load_bias_scale::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage10() {
    ap_block_pp0_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage11() {
    ap_block_pp0_stage11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage11_11001() {
    ap_block_pp0_stage11_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage11_subdone() {
    ap_block_pp0_stage11_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage12() {
    ap_block_pp0_stage12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage12_11001() {
    ap_block_pp0_stage12_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage12_subdone() {
    ap_block_pp0_stage12_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage13() {
    ap_block_pp0_stage13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage13_11001() {
    ap_block_pp0_stage13_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage13_subdone() {
    ap_block_pp0_stage13_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage14() {
    ap_block_pp0_stage14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage14_11001() {
    ap_block_pp0_stage14_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage14_subdone() {
    ap_block_pp0_stage14_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage15() {
    ap_block_pp0_stage15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage15_11001() {
    ap_block_pp0_stage15_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage15_subdone() {
    ap_block_pp0_stage15_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read())));
}

void load_bias_scale::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read())));
}

void load_bias_scale::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage10() {
    ap_block_pp1_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage10_11001() {
    ap_block_pp1_stage10_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage10_subdone() {
    ap_block_pp1_stage10_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage11() {
    ap_block_pp1_stage11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage11_11001() {
    ap_block_pp1_stage11_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage11_subdone() {
    ap_block_pp1_stage11_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage12() {
    ap_block_pp1_stage12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage12_11001() {
    ap_block_pp1_stage12_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage12_subdone() {
    ap_block_pp1_stage12_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage13() {
    ap_block_pp1_stage13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage13_11001() {
    ap_block_pp1_stage13_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage13_subdone() {
    ap_block_pp1_stage13_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage14() {
    ap_block_pp1_stage14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage14_11001() {
    ap_block_pp1_stage14_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage14_subdone() {
    ap_block_pp1_stage14_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage15() {
    ap_block_pp1_stage15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage15_11001() {
    ap_block_pp1_stage15_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage15_subdone() {
    ap_block_pp1_stage15_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read())));
}

void load_bias_scale::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state29_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read())));
}

void load_bias_scale::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage3() {
    ap_block_pp1_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage3_11001() {
    ap_block_pp1_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage3_subdone() {
    ap_block_pp1_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage4() {
    ap_block_pp1_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage4_11001() {
    ap_block_pp1_stage4_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage4_subdone() {
    ap_block_pp1_stage4_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage5() {
    ap_block_pp1_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage5_11001() {
    ap_block_pp1_stage5_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage5_subdone() {
    ap_block_pp1_stage5_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage6() {
    ap_block_pp1_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage6_11001() {
    ap_block_pp1_stage6_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage6_subdone() {
    ap_block_pp1_stage6_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage7() {
    ap_block_pp1_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage7_11001() {
    ap_block_pp1_stage7_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage7_subdone() {
    ap_block_pp1_stage7_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage8() {
    ap_block_pp1_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage8_11001() {
    ap_block_pp1_stage8_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage8_subdone() {
    ap_block_pp1_stage8_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage9() {
    ap_block_pp1_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_pp1_stage9_11001() {
    ap_block_pp1_stage9_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_pp1_stage9_subdone() {
    ap_block_pp1_stage9_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state10_pp0_stage8_iter0() {
    ap_block_state10_pp0_stage8_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state11_pp0_stage9_iter0() {
    ap_block_state11_pp0_stage9_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state12_pp0_stage10_iter0() {
    ap_block_state12_pp0_stage10_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state13_pp0_stage11_iter0() {
    ap_block_state13_pp0_stage11_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state14_pp0_stage12_iter0() {
    ap_block_state14_pp0_stage12_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state15_pp0_stage13_iter0() {
    ap_block_state15_pp0_stage13_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state16_pp0_stage14_iter0() {
    ap_block_state16_pp0_stage14_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state17_pp0_stage15_iter0() {
    ap_block_state17_pp0_stage15_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state18_pp0_stage0_iter1() {
    ap_block_state18_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state19_pp0_stage1_iter1() {
    ap_block_state19_pp0_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state20_pp0_stage2_iter1() {
    ap_block_state20_pp0_stage2_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state21_pp0_stage3_iter1() {
    ap_block_state21_pp0_stage3_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state22_pp0_stage4_iter1() {
    ap_block_state22_pp0_stage4_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state23_pp0_stage5_iter1() {
    ap_block_state23_pp0_stage5_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state24_pp0_stage6_iter1() {
    ap_block_state24_pp0_stage6_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state25_pp0_stage7_iter1() {
    ap_block_state25_pp0_stage7_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state26_pp0_stage8_iter1() {
    ap_block_state26_pp0_stage8_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state28_pp1_stage0_iter0() {
    ap_block_state28_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state29_io() {
    ap_block_state29_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_ARREADY.read()));
}

void load_bias_scale::thread_ap_block_state29_pp1_stage1_iter0() {
    ap_block_state29_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state30_pp1_stage2_iter0() {
    ap_block_state30_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state31_pp1_stage3_iter0() {
    ap_block_state31_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state32_pp1_stage4_iter0() {
    ap_block_state32_pp1_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state33_pp1_stage5_iter0() {
    ap_block_state33_pp1_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state34_pp1_stage6_iter0() {
    ap_block_state34_pp1_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state35_pp1_stage7_iter0() {
    ap_block_state35_pp1_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state36_pp1_stage8_iter0() {
    ap_block_state36_pp1_stage8_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state37_pp1_stage9_iter0() {
    ap_block_state37_pp1_stage9_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state38_pp1_stage10_iter0() {
    ap_block_state38_pp1_stage10_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state39_pp1_stage11_iter0() {
    ap_block_state39_pp1_stage11_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_ARREADY.read()));
}

void load_bias_scale::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state40_pp1_stage12_iter0() {
    ap_block_state40_pp1_stage12_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state41_pp1_stage13_iter0() {
    ap_block_state41_pp1_stage13_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state42_pp1_stage14_iter0() {
    ap_block_state42_pp1_stage14_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state43_pp1_stage15_iter0() {
    ap_block_state43_pp1_stage15_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state44_pp1_stage0_iter1() {
    ap_block_state44_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state45_pp1_stage1_iter1() {
    ap_block_state45_pp1_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state46_pp1_stage2_iter1() {
    ap_block_state46_pp1_stage2_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state47_pp1_stage3_iter1() {
    ap_block_state47_pp1_stage3_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state48_pp1_stage4_iter1() {
    ap_block_state48_pp1_stage4_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state49_pp1_stage5_iter1() {
    ap_block_state49_pp1_stage5_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state50_pp1_stage6_iter1() {
    ap_block_state50_pp1_stage6_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state51_pp1_stage7_iter1() {
    ap_block_state51_pp1_stage7_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_ddr_V_RVALID.read()));
}

void load_bias_scale::thread_ap_block_state52_pp1_stage8_iter1() {
    ap_block_state52_pp1_stage8_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_bias_scale::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln80_fu_156_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_condition_pp1_exit_iter0_state28() {
    if (esl_seteq<1,1,1>(icmp_ln95_fu_240_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state28 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state28 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void load_bias_scale::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void load_bias_scale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ap_phi_mux_i1_0_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i1_0_phi_fu_148_p4 = i_2_reg_430.read();
    } else {
        ap_phi_mux_i1_0_phi_fu_148_p4 = i1_0_reg_144.read();
    }
}

void load_bias_scale::thread_ap_phi_mux_i_0_phi_fu_136_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_136_p4 = i_reg_325.read();
    } else {
        ap_phi_mux_i_0_phi_fu_136_p4 = i_0_reg_132.read();
    }
}

void load_bias_scale::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void load_bias_scale::thread_bias_address0() {
    bias_address0 =  (sc_lv<4>) (zext_ln90_fu_198_p1.read());
}

void load_bias_scale::thread_bias_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_bias_d0() {
    bias_d0 = esl_concat<1920,128>(esl_concat<1792,128>(esl_concat<1664,128>(esl_concat<1536,128>(esl_concat<1408,128>(esl_concat<1280,128>(esl_concat<1152,128>(esl_concat<1024,128>(esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(ddr_V_addr_read_142_reg_416.read(), ddr_V_addr_read_141_reg_411.read()), ddr_V_addr_read_140_reg_406.read()), ddr_V_addr_read_139_reg_401.read()), ddr_V_addr_read_138_reg_396.read()), ddr_V_addr_read_137_reg_391.read()), ddr_V_addr_read_136_reg_386.read()), ddr_V_addr_read_135_reg_381.read()), ddr_V_addr_read_134_reg_376.read()), ddr_V_addr_read_133_reg_371.read()), ddr_V_addr_read_132_reg_366.read()), ddr_V_addr_read_131_reg_361.read()), ddr_V_addr_read_130_reg_356.read()), ddr_V_addr_read_129_reg_351.read()), ddr_V_addr_read_128_reg_346.read()), ddr_V_addr_read_reg_341.read());
}

void load_bias_scale::thread_bias_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        bias_we0 = ap_const_logic_1;
    } else {
        bias_we0 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_ddr_V_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read())))) {
        ddr_V_blk_n_AR = m_axi_ddr_V_ARREADY.read();
    } else {
        ddr_V_blk_n_AR = ap_const_logic_1;
    }
}

void load_bias_scale::thread_ddr_V_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage8.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage9.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage10.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage11.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage12.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage13.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage14.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage15.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage5.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage6.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage7.read(), ap_const_boolean_0)))) {
        ddr_V_blk_n_R = m_axi_ddr_V_RVALID.read();
    } else {
        ddr_V_blk_n_R = ap_const_logic_1;
    }
}

void load_bias_scale::thread_i_2_fu_245_p2() {
    i_2_fu_245_p2 = (!ap_phi_mux_i1_0_phi_fu_148_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i1_0_phi_fu_148_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void load_bias_scale::thread_i_fu_161_p2() {
    i_fu_161_p2 = (!ap_phi_mux_i_0_phi_fu_136_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_0_phi_fu_136_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void load_bias_scale::thread_icmp_ln80_fu_156_p2() {
    icmp_ln80_fu_156_p2 = (!ap_phi_mux_i_0_phi_fu_136_p4.read().is_01() || !TO_r.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_136_p4.read() == TO_r.read());
}

void load_bias_scale::thread_icmp_ln95_fu_240_p2() {
    icmp_ln95_fu_240_p2 = (!ap_phi_mux_i1_0_phi_fu_148_p4.read().is_01() || !TO_r.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i1_0_phi_fu_148_p4.read() == TO_r.read());
}

void load_bias_scale::thread_m_axi_ddr_V_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0))) {
        m_axi_ddr_V_ARADDR =  (sc_lv<32>) (zext_ln100_1_fu_272_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        m_axi_ddr_V_ARADDR =  (sc_lv<32>) (zext_ln85_fu_188_p1.read());
    } else {
        m_axi_ddr_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void load_bias_scale::thread_m_axi_ddr_V_ARBURST() {
    m_axi_ddr_V_ARBURST = ap_const_lv2_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARCACHE() {
    m_axi_ddr_V_ARCACHE = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARID() {
    m_axi_ddr_V_ARID = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARLEN() {
    m_axi_ddr_V_ARLEN = ap_const_lv32_10;
}

void load_bias_scale::thread_m_axi_ddr_V_ARLOCK() {
    m_axi_ddr_V_ARLOCK = ap_const_lv2_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARPROT() {
    m_axi_ddr_V_ARPROT = ap_const_lv3_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARQOS() {
    m_axi_ddr_V_ARQOS = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARREGION() {
    m_axi_ddr_V_ARREGION = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARSIZE() {
    m_axi_ddr_V_ARSIZE = ap_const_lv3_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARUSER() {
    m_axi_ddr_V_ARUSER = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        m_axi_ddr_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_ddr_V_ARVALID = ap_const_logic_0;
    }
}

void load_bias_scale::thread_m_axi_ddr_V_AWADDR() {
    m_axi_ddr_V_AWADDR = ap_const_lv32_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWBURST() {
    m_axi_ddr_V_AWBURST = ap_const_lv2_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWCACHE() {
    m_axi_ddr_V_AWCACHE = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWID() {
    m_axi_ddr_V_AWID = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWLEN() {
    m_axi_ddr_V_AWLEN = ap_const_lv32_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWLOCK() {
    m_axi_ddr_V_AWLOCK = ap_const_lv2_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWPROT() {
    m_axi_ddr_V_AWPROT = ap_const_lv3_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWQOS() {
    m_axi_ddr_V_AWQOS = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWREGION() {
    m_axi_ddr_V_AWREGION = ap_const_lv4_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWSIZE() {
    m_axi_ddr_V_AWSIZE = ap_const_lv3_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWUSER() {
    m_axi_ddr_V_AWUSER = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_AWVALID() {
    m_axi_ddr_V_AWVALID = ap_const_logic_0;
}

void load_bias_scale::thread_m_axi_ddr_V_BREADY() {
    m_axi_ddr_V_BREADY = ap_const_logic_0;
}

void load_bias_scale::thread_m_axi_ddr_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_321_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage15_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage7_11001.read(), ap_const_boolean_0)))) {
        m_axi_ddr_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_ddr_V_RREADY = ap_const_logic_0;
    }
}

void load_bias_scale::thread_m_axi_ddr_V_WDATA() {
    m_axi_ddr_V_WDATA = ap_const_lv128_lc_1;
}

void load_bias_scale::thread_m_axi_ddr_V_WID() {
    m_axi_ddr_V_WID = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_WLAST() {
    m_axi_ddr_V_WLAST = ap_const_logic_0;
}

void load_bias_scale::thread_m_axi_ddr_V_WSTRB() {
    m_axi_ddr_V_WSTRB = ap_const_lv16_0;
}

void load_bias_scale::thread_m_axi_ddr_V_WUSER() {
    m_axi_ddr_V_WUSER = ap_const_lv1_0;
}

void load_bias_scale::thread_m_axi_ddr_V_WVALID() {
    m_axi_ddr_V_WVALID = ap_const_logic_0;
}

void load_bias_scale::thread_scale_address0() {
    scale_address0 =  (sc_lv<4>) (zext_ln105_fu_282_p1.read());
}

void load_bias_scale::thread_scale_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage8_11001.read(), ap_const_boolean_0))) {
        scale_ce0 = ap_const_logic_1;
    } else {
        scale_ce0 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_scale_d0() {
    scale_d0 = esl_concat<1920,128>(esl_concat<1792,128>(esl_concat<1664,128>(esl_concat<1536,128>(esl_concat<1408,128>(esl_concat<1280,128>(esl_concat<1152,128>(esl_concat<1024,128>(esl_concat<896,128>(esl_concat<768,128>(esl_concat<640,128>(esl_concat<512,128>(esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(ddr_V_addr_1_read_15_reg_521.read(), ddr_V_addr_1_read_14_reg_516.read()), ddr_V_addr_1_read_13_reg_511.read()), ddr_V_addr_1_read_12_reg_506.read()), ddr_V_addr_1_read_11_reg_501.read()), ddr_V_addr_1_read_10_reg_496.read()), ddr_V_addr_1_read_9_reg_491.read()), ddr_V_addr_1_read_8_reg_486.read()), ddr_V_addr_1_read_7_reg_481.read()), ddr_V_addr_1_read_6_reg_476.read()), ddr_V_addr_1_read_5_reg_471.read()), ddr_V_addr_1_read_4_reg_466.read()), ddr_V_addr_1_read_3_reg_461.read()), ddr_V_addr_1_read_2_reg_456.read()), ddr_V_addr_1_read_1_reg_451.read()), ddr_V_addr_1_read_reg_446.read());
}

void load_bias_scale::thread_scale_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_reg_426_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage8_11001.read(), ap_const_boolean_0))) {
        scale_we0 = ap_const_logic_1;
    } else {
        scale_we0 = ap_const_logic_0;
    }
}

void load_bias_scale::thread_shl_ln100_1_fu_255_p3() {
    shl_ln100_1_fu_255_p3 = esl_concat<4,4>(trunc_ln100_fu_251_p1.read(), ap_const_lv4_0);
}

void load_bias_scale::thread_shl_ln2_fu_171_p3() {
    shl_ln2_fu_171_p3 = esl_concat<4,4>(trunc_ln85_fu_167_p1.read(), ap_const_lv4_0);
}

void load_bias_scale::thread_shl_ln_fu_224_p3() {
    shl_ln_fu_224_p3 = esl_concat<5,4>(TO_r.read(), ap_const_lv4_0);
}

void load_bias_scale::thread_trunc_ln100_fu_251_p1() {
    trunc_ln100_fu_251_p1 = ap_phi_mux_i1_0_phi_fu_148_p4.read().range(4-1, 0);
}

void load_bias_scale::thread_trunc_ln85_fu_167_p1() {
    trunc_ln85_fu_167_p1 = ap_phi_mux_i_0_phi_fu_136_p4.read().range(4-1, 0);
}

void load_bias_scale::thread_zext_ln100_1_fu_272_p1() {
    zext_ln100_1_fu_272_p1 = esl_zext<64,20>(add_ln100_1_reg_435.read());
}

void load_bias_scale::thread_zext_ln100_fu_231_p1() {
    zext_ln100_fu_231_p1 = esl_zext<20,9>(shl_ln_fu_224_p3.read());
}

void load_bias_scale::thread_zext_ln105_1_fu_263_p1() {
    zext_ln105_1_fu_263_p1 = esl_zext<20,8>(shl_ln100_1_fu_255_p3.read());
}

void load_bias_scale::thread_zext_ln105_fu_282_p1() {
    zext_ln105_fu_282_p1 = esl_zext<64,5>(i1_0_reg_144_pp1_iter1_reg.read());
}

void load_bias_scale::thread_zext_ln85_fu_188_p1() {
    zext_ln85_fu_188_p1 = esl_zext<64,20>(add_ln85_reg_330.read());
}

void load_bias_scale::thread_zext_ln90_1_fu_179_p1() {
    zext_ln90_1_fu_179_p1 = esl_zext<20,8>(shl_ln2_fu_171_p3.read());
}

void load_bias_scale::thread_zext_ln90_fu_198_p1() {
    zext_ln90_fu_198_p1 = esl_zext<64,5>(i_0_reg_132_pp0_iter1_reg.read());
}

void load_bias_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln80_fu_156_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln80_fu_156_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln95_fu_240_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln95_fu_240_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state53;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 524288 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 1048576 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 2097152 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 4194304 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            }
            break;
        case 8388608 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            }
            break;
        case 16777216 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            }
            break;
        case 33554432 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage8_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage8_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage8.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage8_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state53;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            }
            break;
        case 134217728 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            }
            break;
        case 268435456 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            }
            break;
        case 536870912 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            }
            break;
        case 1073741824 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            }
            break;
        case 2147483648 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            }
            break;
        case 4294967296 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            }
            break;
        case 8589934592 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage15_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            }
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

