// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="resnet50_1,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.289202,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1134,HLS_SYN_DSP=1452,HLS_SYN_FF=153782,HLS_SYN_LUT=277852,HLS_VERSION=2019_1_3}" *)

module resnet50_1 (
        ap_clk,
        ap_rst_n,
        sw0in_V_TDATA,
        sw0in_V_TVALID,
        sw0in_V_TREADY,
        sw0out_V_TDATA,
        sw0out_V_TVALID,
        sw0out_V_TREADY,
        m_axi_ddr_V_AWVALID,
        m_axi_ddr_V_AWREADY,
        m_axi_ddr_V_AWADDR,
        m_axi_ddr_V_AWID,
        m_axi_ddr_V_AWLEN,
        m_axi_ddr_V_AWSIZE,
        m_axi_ddr_V_AWBURST,
        m_axi_ddr_V_AWLOCK,
        m_axi_ddr_V_AWCACHE,
        m_axi_ddr_V_AWPROT,
        m_axi_ddr_V_AWQOS,
        m_axi_ddr_V_AWREGION,
        m_axi_ddr_V_AWUSER,
        m_axi_ddr_V_WVALID,
        m_axi_ddr_V_WREADY,
        m_axi_ddr_V_WDATA,
        m_axi_ddr_V_WSTRB,
        m_axi_ddr_V_WLAST,
        m_axi_ddr_V_WID,
        m_axi_ddr_V_WUSER,
        m_axi_ddr_V_ARVALID,
        m_axi_ddr_V_ARREADY,
        m_axi_ddr_V_ARADDR,
        m_axi_ddr_V_ARID,
        m_axi_ddr_V_ARLEN,
        m_axi_ddr_V_ARSIZE,
        m_axi_ddr_V_ARBURST,
        m_axi_ddr_V_ARLOCK,
        m_axi_ddr_V_ARCACHE,
        m_axi_ddr_V_ARPROT,
        m_axi_ddr_V_ARQOS,
        m_axi_ddr_V_ARREGION,
        m_axi_ddr_V_ARUSER,
        m_axi_ddr_V_RVALID,
        m_axi_ddr_V_RREADY,
        m_axi_ddr_V_RDATA,
        m_axi_ddr_V_RLAST,
        m_axi_ddr_V_RID,
        m_axi_ddr_V_RUSER,
        m_axi_ddr_V_RRESP,
        m_axi_ddr_V_BVALID,
        m_axi_ddr_V_BREADY,
        m_axi_ddr_V_BRESP,
        m_axi_ddr_V_BID,
        m_axi_ddr_V_BUSER,
        startt_V_TDATA,
        startt_V_TVALID,
        startt_V_TREADY,
        stopt_V_TDATA,
        stopt_V_TVALID,
        stopt_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 71'd1;
parameter    ap_ST_fsm_state2 = 71'd2;
parameter    ap_ST_fsm_state3 = 71'd4;
parameter    ap_ST_fsm_state4 = 71'd8;
parameter    ap_ST_fsm_state5 = 71'd16;
parameter    ap_ST_fsm_state6 = 71'd32;
parameter    ap_ST_fsm_pp1_stage0 = 71'd64;
parameter    ap_ST_fsm_state9 = 71'd128;
parameter    ap_ST_fsm_state10 = 71'd256;
parameter    ap_ST_fsm_state11 = 71'd512;
parameter    ap_ST_fsm_state12 = 71'd1024;
parameter    ap_ST_fsm_state13 = 71'd2048;
parameter    ap_ST_fsm_state14 = 71'd4096;
parameter    ap_ST_fsm_state15 = 71'd8192;
parameter    ap_ST_fsm_state16 = 71'd16384;
parameter    ap_ST_fsm_state17 = 71'd32768;
parameter    ap_ST_fsm_state18 = 71'd65536;
parameter    ap_ST_fsm_state19 = 71'd131072;
parameter    ap_ST_fsm_state20 = 71'd262144;
parameter    ap_ST_fsm_state21 = 71'd524288;
parameter    ap_ST_fsm_state22 = 71'd1048576;
parameter    ap_ST_fsm_state23 = 71'd2097152;
parameter    ap_ST_fsm_state24 = 71'd4194304;
parameter    ap_ST_fsm_state25 = 71'd8388608;
parameter    ap_ST_fsm_state26 = 71'd16777216;
parameter    ap_ST_fsm_state27 = 71'd33554432;
parameter    ap_ST_fsm_state28 = 71'd67108864;
parameter    ap_ST_fsm_state29 = 71'd134217728;
parameter    ap_ST_fsm_state30 = 71'd268435456;
parameter    ap_ST_fsm_state31 = 71'd536870912;
parameter    ap_ST_fsm_state32 = 71'd1073741824;
parameter    ap_ST_fsm_state33 = 71'd2147483648;
parameter    ap_ST_fsm_state34 = 71'd4294967296;
parameter    ap_ST_fsm_state35 = 71'd8589934592;
parameter    ap_ST_fsm_state36 = 71'd17179869184;
parameter    ap_ST_fsm_state37 = 71'd34359738368;
parameter    ap_ST_fsm_state38 = 71'd68719476736;
parameter    ap_ST_fsm_state39 = 71'd137438953472;
parameter    ap_ST_fsm_state40 = 71'd274877906944;
parameter    ap_ST_fsm_state41 = 71'd549755813888;
parameter    ap_ST_fsm_state42 = 71'd1099511627776;
parameter    ap_ST_fsm_state43 = 71'd2199023255552;
parameter    ap_ST_fsm_state44 = 71'd4398046511104;
parameter    ap_ST_fsm_state45 = 71'd8796093022208;
parameter    ap_ST_fsm_state46 = 71'd17592186044416;
parameter    ap_ST_fsm_state47 = 71'd35184372088832;
parameter    ap_ST_fsm_state48 = 71'd70368744177664;
parameter    ap_ST_fsm_state49 = 71'd140737488355328;
parameter    ap_ST_fsm_state50 = 71'd281474976710656;
parameter    ap_ST_fsm_state51 = 71'd562949953421312;
parameter    ap_ST_fsm_state52 = 71'd1125899906842624;
parameter    ap_ST_fsm_state53 = 71'd2251799813685248;
parameter    ap_ST_fsm_state54 = 71'd4503599627370496;
parameter    ap_ST_fsm_state55 = 71'd9007199254740992;
parameter    ap_ST_fsm_state56 = 71'd18014398509481984;
parameter    ap_ST_fsm_state57 = 71'd36028797018963968;
parameter    ap_ST_fsm_state58 = 71'd72057594037927936;
parameter    ap_ST_fsm_state59 = 71'd144115188075855872;
parameter    ap_ST_fsm_state60 = 71'd288230376151711744;
parameter    ap_ST_fsm_state61 = 71'd576460752303423488;
parameter    ap_ST_fsm_state62 = 71'd1152921504606846976;
parameter    ap_ST_fsm_state63 = 71'd2305843009213693952;
parameter    ap_ST_fsm_state64 = 71'd4611686018427387904;
parameter    ap_ST_fsm_state65 = 71'd9223372036854775808;
parameter    ap_ST_fsm_state66 = 71'd18446744073709551616;
parameter    ap_ST_fsm_state67 = 71'd36893488147419103232;
parameter    ap_ST_fsm_state68 = 71'd73786976294838206464;
parameter    ap_ST_fsm_pp2_stage0 = 71'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 71'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 71'd590295810358705651712;
parameter    ap_ST_fsm_state74 = 71'd1180591620717411303424;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DDR_V_ID_WIDTH = 1;
parameter    C_M_AXI_DDR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_DDR_V_DATA_WIDTH = 128;
parameter    C_M_AXI_DDR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_DDR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_DDR_V_USER_VALUE = 0;
parameter    C_M_AXI_DDR_V_PROT_VALUE = 0;
parameter    C_M_AXI_DDR_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DDR_V_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [175:0] sw0in_V_TDATA;
input   sw0in_V_TVALID;
output   sw0in_V_TREADY;
output  [175:0] sw0out_V_TDATA;
output   sw0out_V_TVALID;
input   sw0out_V_TREADY;
output   m_axi_ddr_V_AWVALID;
input   m_axi_ddr_V_AWREADY;
output  [C_M_AXI_DDR_V_ADDR_WIDTH - 1:0] m_axi_ddr_V_AWADDR;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_AWID;
output  [7:0] m_axi_ddr_V_AWLEN;
output  [2:0] m_axi_ddr_V_AWSIZE;
output  [1:0] m_axi_ddr_V_AWBURST;
output  [1:0] m_axi_ddr_V_AWLOCK;
output  [3:0] m_axi_ddr_V_AWCACHE;
output  [2:0] m_axi_ddr_V_AWPROT;
output  [3:0] m_axi_ddr_V_AWQOS;
output  [3:0] m_axi_ddr_V_AWREGION;
output  [C_M_AXI_DDR_V_AWUSER_WIDTH - 1:0] m_axi_ddr_V_AWUSER;
output   m_axi_ddr_V_WVALID;
input   m_axi_ddr_V_WREADY;
output  [C_M_AXI_DDR_V_DATA_WIDTH - 1:0] m_axi_ddr_V_WDATA;
output  [C_M_AXI_DDR_V_WSTRB_WIDTH - 1:0] m_axi_ddr_V_WSTRB;
output   m_axi_ddr_V_WLAST;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_WID;
output  [C_M_AXI_DDR_V_WUSER_WIDTH - 1:0] m_axi_ddr_V_WUSER;
output   m_axi_ddr_V_ARVALID;
input   m_axi_ddr_V_ARREADY;
output  [C_M_AXI_DDR_V_ADDR_WIDTH - 1:0] m_axi_ddr_V_ARADDR;
output  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_ARID;
output  [7:0] m_axi_ddr_V_ARLEN;
output  [2:0] m_axi_ddr_V_ARSIZE;
output  [1:0] m_axi_ddr_V_ARBURST;
output  [1:0] m_axi_ddr_V_ARLOCK;
output  [3:0] m_axi_ddr_V_ARCACHE;
output  [2:0] m_axi_ddr_V_ARPROT;
output  [3:0] m_axi_ddr_V_ARQOS;
output  [3:0] m_axi_ddr_V_ARREGION;
output  [C_M_AXI_DDR_V_ARUSER_WIDTH - 1:0] m_axi_ddr_V_ARUSER;
input   m_axi_ddr_V_RVALID;
output   m_axi_ddr_V_RREADY;
input  [C_M_AXI_DDR_V_DATA_WIDTH - 1:0] m_axi_ddr_V_RDATA;
input   m_axi_ddr_V_RLAST;
input  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_RID;
input  [C_M_AXI_DDR_V_RUSER_WIDTH - 1:0] m_axi_ddr_V_RUSER;
input  [1:0] m_axi_ddr_V_RRESP;
input   m_axi_ddr_V_BVALID;
output   m_axi_ddr_V_BREADY;
input  [1:0] m_axi_ddr_V_BRESP;
input  [C_M_AXI_DDR_V_ID_WIDTH - 1:0] m_axi_ddr_V_BID;
input  [C_M_AXI_DDR_V_BUSER_WIDTH - 1:0] m_axi_ddr_V_BUSER;
output  [7:0] startt_V_TDATA;
output   startt_V_TVALID;
input   startt_V_TREADY;
output  [7:0] stopt_V_TDATA;
output   stopt_V_TVALID;
input   stopt_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [70:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [175:0] sw0in_V_0_data_out;
wire    sw0in_V_0_vld_in;
wire    sw0in_V_0_vld_out;
wire    sw0in_V_0_ack_in;
reg    sw0in_V_0_ack_out;
reg   [175:0] sw0in_V_0_payload_A;
reg   [175:0] sw0in_V_0_payload_B;
reg    sw0in_V_0_sel_rd;
reg    sw0in_V_0_sel_wr;
wire    sw0in_V_0_sel;
wire    sw0in_V_0_load_A;
wire    sw0in_V_0_load_B;
reg   [1:0] sw0in_V_0_state;
wire    sw0in_V_0_state_cmp_full;
reg   [175:0] sw0out_V_1_data_out;
reg    sw0out_V_1_vld_in;
wire    sw0out_V_1_vld_out;
wire    sw0out_V_1_ack_in;
wire    sw0out_V_1_ack_out;
reg   [175:0] sw0out_V_1_payload_A;
reg   [175:0] sw0out_V_1_payload_B;
reg    sw0out_V_1_sel_rd;
reg    sw0out_V_1_sel_wr;
wire    sw0out_V_1_sel;
wire    sw0out_V_1_load_A;
wire    sw0out_V_1_load_B;
reg   [1:0] sw0out_V_1_state;
wire    sw0out_V_1_state_cmp_full;
reg   [7:0] startt_V_1_data_out;
reg    startt_V_1_vld_in;
wire    startt_V_1_vld_out;
wire    startt_V_1_ack_in;
wire    startt_V_1_ack_out;
reg   [7:0] startt_V_1_payload_A;
reg   [7:0] startt_V_1_payload_B;
reg    startt_V_1_sel_rd;
reg    startt_V_1_sel_wr;
wire    startt_V_1_sel;
wire    startt_V_1_load_A;
wire    startt_V_1_load_B;
reg   [1:0] startt_V_1_state;
wire    startt_V_1_state_cmp_full;
reg   [7:0] stopt_V_1_data_out;
reg    stopt_V_1_vld_in;
wire    stopt_V_1_vld_out;
wire    stopt_V_1_ack_in;
wire    stopt_V_1_ack_out;
reg   [7:0] stopt_V_1_payload_A;
reg   [7:0] stopt_V_1_payload_B;
reg    stopt_V_1_sel_rd;
reg    stopt_V_1_sel_wr;
wire    stopt_V_1_sel;
wire    stopt_V_1_load_A;
wire    stopt_V_1_load_B;
reg   [1:0] stopt_V_1_state;
wire    stopt_V_1_state_cmp_full;
reg   [14:0] buf2_V_address0;
reg    buf2_V_ce0;
wire   [287:0] buf2_V_q0;
reg   [14:0] buf2_V_address1;
reg    buf2_V_ce1;
reg    buf2_V_we1;
reg   [287:0] buf2_V_d1;
reg    outbuf_V_ce0;
wire   [1535:0] outbuf_V_q0;
reg   [13:0] outbuf_V_address1;
reg    outbuf_V_ce1;
reg    outbuf_V_we1;
reg   [1535:0] outbuf_V_d1;
reg   [14:0] buf1_V_address0;
reg    buf1_V_ce0;
wire   [287:0] buf1_V_q0;
reg    buf1_V_ce1;
reg    buf1_V_we1;
reg   [14:0] buf0_V_address0;
reg    buf0_V_ce0;
wire   [287:0] buf0_V_q0;
reg   [14:0] buf0_V_address1;
reg    buf0_V_ce1;
reg    buf0_V_we1;
reg   [287:0] buf0_V_d1;
reg    sw0in_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln291_fu_755_p2;
wire    ap_CS_fsm_state3;
reg    sw0out_V_TDATA_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln351_reg_2646;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln351_reg_2646_pp2_iter1_reg;
reg    startt_V_TDATA_blk_n;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    stopt_V_TDATA_blk_n;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ddr_V_AWREADY;
wire    ddr_V_WREADY;
reg    ddr_V_ARVALID;
wire    ddr_V_ARREADY;
wire    ddr_V_RVALID;
reg    ddr_V_RREADY;
wire   [127:0] ddr_V_RDATA;
wire    ddr_V_RLAST;
wire   [0:0] ddr_V_RID;
wire   [0:0] ddr_V_RUSER;
wire   [1:0] ddr_V_RRESP;
wire    ddr_V_BVALID;
wire   [1:0] ddr_V_BRESP;
wire   [0:0] ddr_V_BID;
wire   [0:0] ddr_V_BUSER;
reg   [13:0] i1_0_reg_449;
reg   [13:0] indvar_flatten_reg_460;
reg   [12:0] s_0_reg_471;
reg   [1:0] i3_0_reg_482;
wire   [14:0] l_fu_761_p2;
reg   [14:0] l_reg_2536;
reg    ap_block_state2;
wire   [7:0] trunc_ln647_fu_767_p1;
reg   [7:0] trunc_ln647_reg_2541;
wire   [7:0] grp_fu_605_p4;
reg   [7:0] p_Result_0_1_reg_2546;
wire   [7:0] grp_fu_615_p4;
reg   [7:0] p_Result_0_2_reg_2551;
wire   [7:0] grp_fu_625_p4;
reg   [7:0] p_Result_0_3_reg_2556;
wire   [7:0] grp_fu_635_p4;
reg   [7:0] p_Result_0_4_reg_2561;
wire   [7:0] grp_fu_645_p4;
reg   [7:0] p_Result_0_5_reg_2566;
wire   [7:0] grp_fu_655_p4;
reg   [7:0] p_Result_0_6_reg_2571;
wire   [7:0] grp_fu_665_p4;
reg   [7:0] p_Result_0_7_reg_2576;
wire   [7:0] grp_fu_675_p4;
reg   [7:0] p_Result_0_8_reg_2581;
wire   [7:0] grp_fu_685_p4;
reg   [7:0] p_Result_0_9_reg_2586;
wire   [7:0] grp_fu_695_p4;
reg   [7:0] p_Result_0_s_reg_2591;
wire   [7:0] grp_fu_705_p4;
reg   [7:0] p_Result_0_10_reg_2596;
wire   [7:0] grp_fu_715_p4;
reg   [7:0] p_Result_0_11_reg_2601;
wire   [7:0] grp_fu_725_p4;
reg   [7:0] p_Result_0_12_reg_2606;
wire   [7:0] grp_fu_735_p4;
reg   [7:0] p_Result_0_13_reg_2611;
wire   [7:0] grp_fu_745_p4;
reg   [7:0] p_Result_0_14_reg_2616;
wire   [7:0] zext_ln321_fu_971_p1;
wire   [0:0] icmp_ln306_fu_976_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [13:0] i_fu_982_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln351_fu_993_p2;
wire    ap_block_state69_pp2_stage0_iter0;
wire    ap_block_state70_pp2_stage0_iter1;
reg    ap_block_state70_io;
wire    ap_block_state71_pp2_stage0_iter2;
reg    ap_block_state71_io;
reg    ap_block_pp2_stage0_11001;
wire   [13:0] add_ln351_fu_999_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [12:0] select_ln357_1_fu_1025_p3;
reg   [12:0] select_ln357_1_reg_2655;
wire   [0:0] trunc_ln214_fu_1038_p1;
reg   [0:0] trunc_ln214_reg_2660;
wire   [1:0] i_1_fu_1042_p2;
wire   [175:0] zext_ln332_fu_2508_p1;
wire   [7:0] zext_ln321_1_fu_2528_p1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state68;
wire    grp_add_fu_562_ap_ready;
wire    grp_add_fu_562_ap_done;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state69;
wire    grp_conv_layer_fu_493_ap_start;
wire    grp_conv_layer_fu_493_ap_done;
wire    grp_conv_layer_fu_493_ap_idle;
wire    grp_conv_layer_fu_493_ap_ready;
wire   [14:0] grp_conv_layer_fu_493_input_V_address0;
wire    grp_conv_layer_fu_493_input_V_ce0;
reg   [287:0] grp_conv_layer_fu_493_input_V_q0;
wire   [14:0] grp_conv_layer_fu_493_output_V_address1;
wire    grp_conv_layer_fu_493_output_V_ce1;
wire    grp_conv_layer_fu_493_output_V_we1;
wire   [287:0] grp_conv_layer_fu_493_output_V_d1;
wire   [13:0] grp_conv_layer_fu_493_outbuf_V_4_address0;
wire    grp_conv_layer_fu_493_outbuf_V_4_ce0;
wire   [13:0] grp_conv_layer_fu_493_outbuf_V_4_address1;
wire    grp_conv_layer_fu_493_outbuf_V_4_ce1;
wire    grp_conv_layer_fu_493_outbuf_V_4_we1;
wire   [1535:0] grp_conv_layer_fu_493_outbuf_V_4_d1;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_AWVALID;
wire   [31:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWADDR;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWID;
wire   [31:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWLEN;
wire   [2:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWSIZE;
wire   [1:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWBURST;
wire   [1:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWLOCK;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWCACHE;
wire   [2:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWPROT;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWQOS;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWREGION;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_AWUSER;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_WVALID;
wire   [127:0] grp_conv_layer_fu_493_m_axi_ddr_V_WDATA;
wire   [15:0] grp_conv_layer_fu_493_m_axi_ddr_V_WSTRB;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_WLAST;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_WID;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_WUSER;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_ARVALID;
wire   [31:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARADDR;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARID;
wire   [31:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARLEN;
wire   [2:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARSIZE;
wire   [1:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARBURST;
wire   [1:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARLOCK;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARCACHE;
wire   [2:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARPROT;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARQOS;
wire   [3:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARREGION;
wire   [0:0] grp_conv_layer_fu_493_m_axi_ddr_V_ARUSER;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_RREADY;
wire    grp_conv_layer_fu_493_m_axi_ddr_V_BREADY;
reg   [6:0] grp_conv_layer_fu_493_OSIZE;
reg   [5:0] grp_conv_layer_fu_493_TO_r;
reg   [6:0] grp_conv_layer_fu_493_TI;
reg   [3:0] grp_conv_layer_fu_493_K;
reg   [3:0] grp_conv_layer_fu_493_S;
reg   [0:0] grp_conv_layer_fu_493_P;
reg   [22:0] grp_conv_layer_fu_493_OFFSET;
wire    grp_add_fu_562_ap_start;
wire    grp_add_fu_562_ap_idle;
wire   [14:0] grp_add_fu_562_input1_V_address0;
wire    grp_add_fu_562_input1_V_ce0;
reg   [287:0] grp_add_fu_562_input1_V_q0;
wire   [14:0] grp_add_fu_562_input2_V_address0;
wire    grp_add_fu_562_input2_V_ce0;
reg   [287:0] grp_add_fu_562_input2_V_q0;
wire   [14:0] grp_add_fu_562_output_V_address1;
wire    grp_add_fu_562_output_V_ce1;
wire    grp_add_fu_562_output_V_we1;
wire   [287:0] grp_add_fu_562_output_V_d1;
reg   [6:0] grp_add_fu_562_OSIZE;
reg   [6:0] grp_add_fu_562_TI;
reg   [31:0] grp_add_fu_562_SCALE1;
reg   [31:0] grp_add_fu_562_SCALE2;
reg   [14:0] l_0_reg_437;
reg   [12:0] ap_phi_mux_s_0_phi_fu_475_p4;
reg    grp_conv_layer_fu_493_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state66;
reg    grp_add_fu_562_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state60;
wire   [63:0] zext_ln299_fu_771_p1;
wire   [63:0] zext_ln309_fu_988_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln357_fu_1033_p1;
reg   [168:0] p_0114_1_fu_356;
wire   [168:0] p_Result_22_s_fu_2496_p5;
wire    ap_block_pp2_stage0_01001;
wire   [287:0] zext_ln180_fu_956_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state72;
wire   [7:0] trunc_ln647_1_fu_824_p1;
wire   [8:0] zext_ln78_30_fu_884_p1;
wire   [8:0] zext_ln78_29_fu_880_p1;
wire   [8:0] zext_ln78_28_fu_876_p1;
wire   [8:0] zext_ln78_27_fu_872_p1;
wire   [8:0] zext_ln78_26_fu_868_p1;
wire   [8:0] zext_ln78_25_fu_864_p1;
wire   [8:0] zext_ln78_24_fu_860_p1;
wire   [8:0] zext_ln78_23_fu_856_p1;
wire   [8:0] zext_ln78_22_fu_852_p1;
wire   [8:0] zext_ln78_21_fu_848_p1;
wire   [8:0] zext_ln78_20_fu_844_p1;
wire   [8:0] zext_ln78_19_fu_840_p1;
wire   [8:0] zext_ln78_18_fu_836_p1;
wire   [8:0] zext_ln78_17_fu_832_p1;
wire   [8:0] zext_ln78_16_fu_828_p1;
wire   [8:0] zext_ln78_15_fu_821_p1;
wire   [8:0] zext_ln78_14_fu_818_p1;
wire   [8:0] zext_ln78_13_fu_815_p1;
wire   [8:0] zext_ln78_12_fu_812_p1;
wire   [8:0] zext_ln78_11_fu_809_p1;
wire   [8:0] zext_ln78_10_fu_806_p1;
wire   [8:0] zext_ln78_9_fu_803_p1;
wire   [8:0] zext_ln78_8_fu_800_p1;
wire   [8:0] zext_ln78_7_fu_797_p1;
wire   [8:0] zext_ln78_6_fu_794_p1;
wire   [8:0] zext_ln78_5_fu_791_p1;
wire   [8:0] zext_ln78_4_fu_788_p1;
wire   [8:0] zext_ln78_3_fu_785_p1;
wire   [8:0] zext_ln78_2_fu_782_p1;
wire   [8:0] zext_ln78_1_fu_779_p1;
wire   [8:0] zext_ln78_fu_776_p1;
wire   [286:0] tmp_fu_888_p33;
wire   [3:0] trunc_ln_fu_961_p4;
wire   [0:0] icmp_ln352_fu_1005_p2;
wire   [12:0] add_ln351_1_fu_1019_p2;
wire   [1:0] select_ln357_fu_1011_p3;
wire   [7:0] tmp_358_fu_1058_p5;
wire   [7:0] empty_30_fu_1068_p2;
wire   [8:0] zext_ln214_fu_1080_p1;
wire   [8:0] zext_ln214_1_fu_1084_p1;
wire   [0:0] icmp_ln214_fu_1074_p2;
wire   [8:0] sub_ln214_fu_1098_p2;
wire   [8:0] sub_ln214_2_fu_1110_p2;
reg   [287:0] tmp_517_fu_1088_p4;
wire   [8:0] sub_ln214_1_fu_1104_p2;
wire   [8:0] select_ln214_fu_1116_p3;
wire   [8:0] select_ln214_2_fu_1132_p3;
wire   [8:0] sub_ln214_3_fu_1140_p2;
wire   [287:0] select_ln214_1_fu_1124_p3;
wire   [287:0] zext_ln214_2_fu_1146_p1;
wire   [287:0] zext_ln214_3_fu_1150_p1;
wire   [287:0] lshr_ln214_fu_1154_p2;
wire   [287:0] lshr_ln214_1_fu_1160_p2;
wire   [287:0] and_ln214_fu_1166_p2;
wire   [4:0] shl_ln_fu_1051_p3;
wire   [4:0] or_ln214_fu_1176_p2;
wire   [2:0] tmp_359_fu_1188_p4;
wire   [4:0] empty_31_fu_1182_p2;
wire   [7:0] tmp_360_fu_1198_p3;
wire   [8:0] p_cast252_fu_1210_p1;
wire   [8:0] empty_32_fu_1214_p2;
wire   [9:0] p_cast253_fu_1206_p1;
wire   [9:0] p_cast251_fu_1220_p1;
wire   [8:0] zext_ln214_4_fu_1230_p1;
wire   [0:0] icmp_ln214_1_fu_1224_p2;
wire   [8:0] sub_ln214_4_fu_1244_p2;
wire   [8:0] sub_ln214_6_fu_1256_p2;
reg   [287:0] tmp_518_fu_1234_p4;
wire   [8:0] sub_ln214_5_fu_1250_p2;
wire   [8:0] select_ln214_3_fu_1262_p3;
wire   [8:0] select_ln214_5_fu_1278_p3;
wire   [8:0] sub_ln214_7_fu_1286_p2;
wire   [287:0] select_ln214_4_fu_1270_p3;
wire   [287:0] zext_ln214_5_fu_1292_p1;
wire   [287:0] zext_ln214_6_fu_1296_p1;
wire   [287:0] lshr_ln214_2_fu_1300_p2;
wire   [287:0] lshr_ln214_3_fu_1306_p2;
wire   [287:0] and_ln214_1_fu_1312_p2;
wire   [4:0] or_ln214_1_fu_1322_p2;
wire   [7:0] p_shl1_fu_1332_p3;
wire   [8:0] zext_ln214_2_cast250_fu_1328_p1;
wire   [8:0] p_shl207_cast_fu_1340_p1;
wire   [8:0] empty_33_fu_1344_p2;
wire   [8:0] empty_34_fu_1350_p2;
wire   [0:0] icmp_ln214_2_fu_1356_p2;
wire   [8:0] sub_ln214_8_fu_1372_p2;
wire   [8:0] sub_ln214_10_fu_1384_p2;
reg   [287:0] tmp_519_fu_1362_p4;
wire   [8:0] sub_ln214_9_fu_1378_p2;
wire   [8:0] select_ln214_6_fu_1390_p3;
wire   [8:0] select_ln214_8_fu_1406_p3;
wire   [8:0] sub_ln214_11_fu_1414_p2;
wire   [287:0] select_ln214_7_fu_1398_p3;
wire   [287:0] zext_ln214_7_fu_1420_p1;
wire   [287:0] zext_ln214_8_fu_1424_p1;
wire   [287:0] lshr_ln214_4_fu_1428_p2;
wire   [287:0] lshr_ln214_5_fu_1434_p2;
wire   [287:0] and_ln214_2_fu_1440_p2;
wire   [4:0] or_ln214_2_fu_1450_p2;
wire   [7:0] p_shl2_fu_1460_p3;
wire   [8:0] zext_ln214_3_cast247_fu_1456_p1;
wire   [8:0] p_shl206_cast_fu_1468_p1;
wire   [8:0] empty_35_fu_1472_p2;
wire   [287:0] zext_ln214_9_fu_1478_p1;
wire   [287:0] lshr_ln214_6_fu_1482_p2;
wire   [4:0] or_ln214_3_fu_1492_p2;
wire   [2:0] tmp_361_fu_1498_p4;
wire   [7:0] tmp_362_fu_1508_p3;
wire   [7:0] empty_36_fu_1516_p2;
wire   [8:0] zext_ln214_10_fu_1528_p1;
wire   [8:0] zext_ln214_11_fu_1532_p1;
wire   [0:0] icmp_ln214_3_fu_1522_p2;
wire   [8:0] sub_ln214_12_fu_1546_p2;
wire   [8:0] sub_ln214_14_fu_1558_p2;
reg   [287:0] tmp_520_fu_1536_p4;
wire   [8:0] sub_ln214_13_fu_1552_p2;
wire   [8:0] select_ln214_9_fu_1564_p3;
wire   [8:0] select_ln214_11_fu_1580_p3;
wire   [8:0] sub_ln214_15_fu_1588_p2;
wire   [287:0] select_ln214_10_fu_1572_p3;
wire   [287:0] zext_ln214_12_fu_1594_p1;
wire   [287:0] zext_ln214_13_fu_1598_p1;
wire   [287:0] lshr_ln214_7_fu_1602_p2;
wire   [287:0] lshr_ln214_8_fu_1608_p2;
wire   [287:0] and_ln214_3_fu_1614_p2;
wire   [4:0] or_ln214_4_fu_1624_p2;
wire   [2:0] tmp_363_fu_1636_p4;
wire   [4:0] empty_37_fu_1630_p2;
wire   [7:0] tmp_364_fu_1646_p3;
wire   [8:0] empty_38_fu_1654_p1;
wire   [8:0] empty_39_fu_1662_p2;
wire   [9:0] p_cast240_fu_1658_p1;
wire   [9:0] p_cast239_fu_1668_p1;
wire   [8:0] zext_ln214_14_fu_1678_p1;
wire   [0:0] icmp_ln214_4_fu_1672_p2;
wire   [8:0] sub_ln214_16_fu_1692_p2;
wire   [8:0] sub_ln214_18_fu_1704_p2;
reg   [287:0] tmp_521_fu_1682_p4;
wire   [8:0] sub_ln214_17_fu_1698_p2;
wire   [8:0] select_ln214_12_fu_1710_p3;
wire   [8:0] select_ln214_14_fu_1726_p3;
wire   [8:0] sub_ln214_19_fu_1734_p2;
wire   [287:0] select_ln214_13_fu_1718_p3;
wire   [287:0] zext_ln214_15_fu_1740_p1;
wire   [287:0] zext_ln214_16_fu_1744_p1;
wire   [287:0] lshr_ln214_9_fu_1748_p2;
wire   [287:0] lshr_ln214_10_fu_1754_p2;
wire   [287:0] and_ln214_4_fu_1760_p2;
wire   [4:0] or_ln214_5_fu_1770_p2;
wire   [7:0] p_shl3_fu_1780_p3;
wire   [8:0] zext_ln214_6_cast238_fu_1776_p1;
wire   [8:0] p_shl203_cast_fu_1788_p1;
wire   [8:0] empty_40_fu_1792_p2;
wire   [8:0] empty_41_fu_1798_p2;
wire   [0:0] icmp_ln214_5_fu_1804_p2;
wire   [8:0] sub_ln214_20_fu_1820_p2;
wire   [8:0] sub_ln214_22_fu_1832_p2;
reg   [287:0] tmp_522_fu_1810_p4;
wire   [8:0] sub_ln214_21_fu_1826_p2;
wire   [8:0] select_ln214_15_fu_1838_p3;
wire   [8:0] select_ln214_17_fu_1854_p3;
wire   [8:0] sub_ln214_23_fu_1862_p2;
wire   [287:0] select_ln214_16_fu_1846_p3;
wire   [287:0] zext_ln214_17_fu_1868_p1;
wire   [287:0] zext_ln214_18_fu_1872_p1;
wire   [287:0] lshr_ln214_11_fu_1876_p2;
wire   [287:0] lshr_ln214_12_fu_1882_p2;
wire   [287:0] and_ln214_5_fu_1888_p2;
wire   [4:0] or_ln214_6_fu_1898_p2;
wire   [7:0] p_shl4_fu_1908_p3;
wire   [8:0] zext_ln214_7_cast235_fu_1904_p1;
wire   [8:0] p_shl202_cast_fu_1916_p1;
wire   [8:0] empty_42_fu_1920_p2;
wire   [287:0] zext_ln214_19_fu_1926_p1;
wire   [287:0] lshr_ln214_13_fu_1930_p2;
wire   [4:0] or_ln214_7_fu_1940_p2;
wire   [2:0] tmp_365_fu_1946_p4;
wire   [7:0] tmp_366_fu_1956_p3;
wire   [8:0] empty_43_fu_1964_p1;
wire   [8:0] empty_44_fu_1972_p2;
wire   [9:0] p_cast231_fu_1968_p1;
wire   [9:0] p_cast230_fu_1978_p1;
wire   [8:0] zext_ln214_20_fu_1988_p1;
wire   [0:0] icmp_ln214_6_fu_1982_p2;
wire   [8:0] sub_ln214_24_fu_2002_p2;
wire   [8:0] sub_ln214_26_fu_2014_p2;
reg   [287:0] tmp_523_fu_1992_p4;
wire   [8:0] sub_ln214_25_fu_2008_p2;
wire   [8:0] select_ln214_18_fu_2020_p3;
wire   [8:0] select_ln214_20_fu_2036_p3;
wire   [8:0] sub_ln214_27_fu_2044_p2;
wire   [287:0] select_ln214_19_fu_2028_p3;
wire   [287:0] zext_ln214_21_fu_2050_p1;
wire   [287:0] zext_ln214_22_fu_2054_p1;
wire   [287:0] lshr_ln214_14_fu_2058_p2;
wire   [287:0] lshr_ln214_15_fu_2064_p2;
wire   [287:0] and_ln214_6_fu_2070_p2;
wire   [7:0] p_shl5_fu_2084_p3;
wire   [8:0] zext_ln214_9_cast229_fu_2080_p1;
wire   [8:0] p_shl200_cast_fu_2092_p1;
wire   [8:0] empty_45_fu_2096_p2;
wire   [287:0] zext_ln214_23_fu_2102_p1;
wire   [287:0] lshr_ln214_16_fu_2106_p2;
wire   [4:0] or_ln214_8_fu_2116_p2;
wire   [7:0] p_shl6_fu_2126_p3;
wire   [8:0] zext_ln214_10_cast22_fu_2122_p1;
wire   [8:0] p_shl199_cast_fu_2134_p1;
wire   [8:0] empty_46_fu_2138_p2;
wire   [287:0] zext_ln214_24_fu_2144_p1;
wire   [287:0] lshr_ln214_17_fu_2148_p2;
wire   [4:0] or_ln214_9_fu_2158_p2;
wire   [7:0] p_shl7_fu_2168_p3;
wire   [8:0] zext_ln214_11_cast22_fu_2164_p1;
wire   [8:0] p_shl198_cast_fu_2176_p1;
wire   [8:0] empty_47_fu_2180_p2;
wire   [287:0] zext_ln214_25_fu_2186_p1;
wire   [287:0] lshr_ln214_18_fu_2190_p2;
wire   [4:0] or_ln214_10_fu_2200_p2;
wire   [2:0] tmp_367_fu_2206_p4;
wire   [7:0] tmp_368_fu_2216_p3;
wire   [8:0] empty_48_fu_2224_p1;
wire   [8:0] empty_49_fu_2232_p2;
wire   [9:0] p_cast219_fu_2228_p1;
wire   [9:0] p_cast218_fu_2238_p1;
wire   [8:0] zext_ln214_26_fu_2248_p1;
wire   [0:0] icmp_ln214_7_fu_2242_p2;
wire   [8:0] sub_ln214_28_fu_2262_p2;
wire   [8:0] sub_ln214_30_fu_2274_p2;
reg   [287:0] tmp_524_fu_2252_p4;
wire   [8:0] sub_ln214_29_fu_2268_p2;
wire   [8:0] select_ln214_21_fu_2280_p3;
wire   [8:0] select_ln214_23_fu_2296_p3;
wire   [8:0] sub_ln214_31_fu_2304_p2;
wire   [287:0] select_ln214_22_fu_2288_p3;
wire   [287:0] zext_ln214_27_fu_2310_p1;
wire   [287:0] zext_ln214_28_fu_2314_p1;
wire   [287:0] lshr_ln214_19_fu_2318_p2;
wire   [287:0] lshr_ln214_20_fu_2324_p2;
wire   [287:0] and_ln214_7_fu_2330_p2;
wire   [7:0] p_shl8_fu_2344_p3;
wire   [8:0] zext_ln214_13_cast21_fu_2340_p1;
wire   [8:0] p_shl196_cast_fu_2352_p1;
wire   [8:0] empty_50_fu_2356_p2;
wire   [287:0] zext_ln214_29_fu_2362_p1;
wire   [287:0] lshr_ln214_21_fu_2366_p2;
wire   [4:0] or_ln214_11_fu_2376_p2;
wire   [7:0] p_shl9_fu_2386_p3;
wire   [8:0] zext_ln214_14_cast21_fu_2382_p1;
wire   [8:0] p_shl195_cast_fu_2394_p1;
wire   [8:0] empty_51_fu_2398_p2;
wire   [287:0] zext_ln214_30_fu_2404_p1;
wire   [287:0] lshr_ln214_22_fu_2408_p2;
wire   [4:0] or_ln214_12_fu_2418_p2;
wire   [7:0] p_shl_fu_2428_p3;
wire   [8:0] zext_ln214_15_cast21_fu_2424_p1;
wire   [8:0] p_shl_cast_fu_2436_p1;
wire   [8:0] empty_52_fu_2440_p2;
wire   [287:0] zext_ln214_31_fu_2446_p1;
wire   [287:0] lshr_ln214_23_fu_2450_p2;
wire   [7:0] trunc_ln214_16_fu_2456_p1;
wire   [7:0] trunc_ln214_15_fu_2414_p1;
wire   [7:0] trunc_ln214_14_fu_2372_p1;
wire   [7:0] trunc_ln214_13_fu_2336_p1;
wire   [7:0] trunc_ln214_12_fu_2196_p1;
wire   [7:0] trunc_ln214_11_fu_2154_p1;
wire   [7:0] trunc_ln214_10_fu_2112_p1;
wire   [7:0] trunc_ln214_9_fu_2076_p1;
wire   [7:0] trunc_ln214_8_fu_1936_p1;
wire   [7:0] trunc_ln214_7_fu_1894_p1;
wire   [7:0] trunc_ln214_6_fu_1766_p1;
wire   [7:0] trunc_ln214_5_fu_1620_p1;
wire   [7:0] trunc_ln214_4_fu_1488_p1;
wire   [7:0] trunc_ln214_3_fu_1446_p1;
wire   [7:0] trunc_ln214_2_fu_1318_p1;
wire   [7:0] trunc_ln214_1_fu_1172_p1;
wire   [127:0] tmp_369_fu_2460_p17;
wire   [3:0] trunc_ln296_2_fu_2518_p4;
reg    ap_block_state74;
reg   [70:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 71'd1;
#0 sw0in_V_0_sel_rd = 1'b0;
#0 sw0in_V_0_sel_wr = 1'b0;
#0 sw0in_V_0_state = 2'd0;
#0 sw0out_V_1_sel_rd = 1'b0;
#0 sw0out_V_1_sel_wr = 1'b0;
#0 sw0out_V_1_state = 2'd0;
#0 startt_V_1_sel_rd = 1'b0;
#0 startt_V_1_sel_wr = 1'b0;
#0 startt_V_1_state = 2'd0;
#0 stopt_V_1_sel_rd = 1'b0;
#0 stopt_V_1_sel_wr = 1'b0;
#0 stopt_V_1_state = 2'd0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_conv_layer_fu_493_ap_start_reg = 1'b0;
#0 grp_add_fu_562_ap_start_reg = 1'b0;
end

resnet50_1_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 25088 ),
    .AddressWidth( 15 ))
buf2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf2_V_address0),
    .ce0(buf2_V_ce0),
    .q0(buf2_V_q0),
    .address1(buf2_V_address1),
    .ce1(buf2_V_ce1),
    .we1(buf2_V_we1),
    .d1(buf2_V_d1)
);

resnet50_1_outbuf_V #(
    .DataWidth( 1536 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
outbuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_conv_layer_fu_493_outbuf_V_4_address0),
    .ce0(outbuf_V_ce0),
    .q0(outbuf_V_q0),
    .address1(outbuf_V_address1),
    .ce1(outbuf_V_ce1),
    .we1(outbuf_V_we1),
    .d1(outbuf_V_d1)
);

resnet50_1_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 25088 ),
    .AddressWidth( 15 ))
buf1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf1_V_address0),
    .ce0(buf1_V_ce0),
    .q0(buf1_V_q0),
    .address1(grp_conv_layer_fu_493_output_V_address1),
    .ce1(buf1_V_ce1),
    .we1(buf1_V_we1),
    .d1(grp_conv_layer_fu_493_output_V_d1)
);

resnet50_1_buf2_V #(
    .DataWidth( 288 ),
    .AddressRange( 25088 ),
    .AddressWidth( 15 ))
buf0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf0_V_address0),
    .ce0(buf0_V_ce0),
    .q0(buf0_V_q0),
    .address1(buf0_V_address1),
    .ce1(buf0_V_ce1),
    .we1(buf0_V_we1),
    .d1(buf0_V_d1)
);

resnet50_1_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
resnet50_1_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

resnet50_1_ddr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 128 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DDR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DDR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DDR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DDR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DDR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DDR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DDR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DDR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_DDR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_DDR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DDR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DDR_V_CACHE_VALUE ))
resnet50_1_ddr_V_m_axi_U(
    .AWVALID(m_axi_ddr_V_AWVALID),
    .AWREADY(m_axi_ddr_V_AWREADY),
    .AWADDR(m_axi_ddr_V_AWADDR),
    .AWID(m_axi_ddr_V_AWID),
    .AWLEN(m_axi_ddr_V_AWLEN),
    .AWSIZE(m_axi_ddr_V_AWSIZE),
    .AWBURST(m_axi_ddr_V_AWBURST),
    .AWLOCK(m_axi_ddr_V_AWLOCK),
    .AWCACHE(m_axi_ddr_V_AWCACHE),
    .AWPROT(m_axi_ddr_V_AWPROT),
    .AWQOS(m_axi_ddr_V_AWQOS),
    .AWREGION(m_axi_ddr_V_AWREGION),
    .AWUSER(m_axi_ddr_V_AWUSER),
    .WVALID(m_axi_ddr_V_WVALID),
    .WREADY(m_axi_ddr_V_WREADY),
    .WDATA(m_axi_ddr_V_WDATA),
    .WSTRB(m_axi_ddr_V_WSTRB),
    .WLAST(m_axi_ddr_V_WLAST),
    .WID(m_axi_ddr_V_WID),
    .WUSER(m_axi_ddr_V_WUSER),
    .ARVALID(m_axi_ddr_V_ARVALID),
    .ARREADY(m_axi_ddr_V_ARREADY),
    .ARADDR(m_axi_ddr_V_ARADDR),
    .ARID(m_axi_ddr_V_ARID),
    .ARLEN(m_axi_ddr_V_ARLEN),
    .ARSIZE(m_axi_ddr_V_ARSIZE),
    .ARBURST(m_axi_ddr_V_ARBURST),
    .ARLOCK(m_axi_ddr_V_ARLOCK),
    .ARCACHE(m_axi_ddr_V_ARCACHE),
    .ARPROT(m_axi_ddr_V_ARPROT),
    .ARQOS(m_axi_ddr_V_ARQOS),
    .ARREGION(m_axi_ddr_V_ARREGION),
    .ARUSER(m_axi_ddr_V_ARUSER),
    .RVALID(m_axi_ddr_V_RVALID),
    .RREADY(m_axi_ddr_V_RREADY),
    .RDATA(m_axi_ddr_V_RDATA),
    .RLAST(m_axi_ddr_V_RLAST),
    .RID(m_axi_ddr_V_RID),
    .RUSER(m_axi_ddr_V_RUSER),
    .RRESP(m_axi_ddr_V_RRESP),
    .BVALID(m_axi_ddr_V_BVALID),
    .BREADY(m_axi_ddr_V_BREADY),
    .BRESP(m_axi_ddr_V_BRESP),
    .BID(m_axi_ddr_V_BID),
    .BUSER(m_axi_ddr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(ddr_V_ARVALID),
    .I_ARREADY(ddr_V_ARREADY),
    .I_ARADDR(grp_conv_layer_fu_493_m_axi_ddr_V_ARADDR),
    .I_ARID(grp_conv_layer_fu_493_m_axi_ddr_V_ARID),
    .I_ARLEN(grp_conv_layer_fu_493_m_axi_ddr_V_ARLEN),
    .I_ARSIZE(grp_conv_layer_fu_493_m_axi_ddr_V_ARSIZE),
    .I_ARLOCK(grp_conv_layer_fu_493_m_axi_ddr_V_ARLOCK),
    .I_ARCACHE(grp_conv_layer_fu_493_m_axi_ddr_V_ARCACHE),
    .I_ARQOS(grp_conv_layer_fu_493_m_axi_ddr_V_ARQOS),
    .I_ARPROT(grp_conv_layer_fu_493_m_axi_ddr_V_ARPROT),
    .I_ARUSER(grp_conv_layer_fu_493_m_axi_ddr_V_ARUSER),
    .I_ARBURST(grp_conv_layer_fu_493_m_axi_ddr_V_ARBURST),
    .I_ARREGION(grp_conv_layer_fu_493_m_axi_ddr_V_ARREGION),
    .I_RVALID(ddr_V_RVALID),
    .I_RREADY(ddr_V_RREADY),
    .I_RDATA(ddr_V_RDATA),
    .I_RID(ddr_V_RID),
    .I_RUSER(ddr_V_RUSER),
    .I_RRESP(ddr_V_RRESP),
    .I_RLAST(ddr_V_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(ddr_V_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(ddr_V_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(ddr_V_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(ddr_V_BRESP),
    .I_BID(ddr_V_BID),
    .I_BUSER(ddr_V_BUSER)
);

conv_layer grp_conv_layer_fu_493(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_layer_fu_493_ap_start),
    .ap_done(grp_conv_layer_fu_493_ap_done),
    .ap_idle(grp_conv_layer_fu_493_ap_idle),
    .ap_ready(grp_conv_layer_fu_493_ap_ready),
    .input_V_address0(grp_conv_layer_fu_493_input_V_address0),
    .input_V_ce0(grp_conv_layer_fu_493_input_V_ce0),
    .input_V_q0(grp_conv_layer_fu_493_input_V_q0),
    .output_V_address1(grp_conv_layer_fu_493_output_V_address1),
    .output_V_ce1(grp_conv_layer_fu_493_output_V_ce1),
    .output_V_we1(grp_conv_layer_fu_493_output_V_we1),
    .output_V_d1(grp_conv_layer_fu_493_output_V_d1),
    .outbuf_V_4_address0(grp_conv_layer_fu_493_outbuf_V_4_address0),
    .outbuf_V_4_ce0(grp_conv_layer_fu_493_outbuf_V_4_ce0),
    .outbuf_V_4_q0(outbuf_V_q0),
    .outbuf_V_4_address1(grp_conv_layer_fu_493_outbuf_V_4_address1),
    .outbuf_V_4_ce1(grp_conv_layer_fu_493_outbuf_V_4_ce1),
    .outbuf_V_4_we1(grp_conv_layer_fu_493_outbuf_V_4_we1),
    .outbuf_V_4_d1(grp_conv_layer_fu_493_outbuf_V_4_d1),
    .m_axi_ddr_V_AWVALID(grp_conv_layer_fu_493_m_axi_ddr_V_AWVALID),
    .m_axi_ddr_V_AWREADY(1'b0),
    .m_axi_ddr_V_AWADDR(grp_conv_layer_fu_493_m_axi_ddr_V_AWADDR),
    .m_axi_ddr_V_AWID(grp_conv_layer_fu_493_m_axi_ddr_V_AWID),
    .m_axi_ddr_V_AWLEN(grp_conv_layer_fu_493_m_axi_ddr_V_AWLEN),
    .m_axi_ddr_V_AWSIZE(grp_conv_layer_fu_493_m_axi_ddr_V_AWSIZE),
    .m_axi_ddr_V_AWBURST(grp_conv_layer_fu_493_m_axi_ddr_V_AWBURST),
    .m_axi_ddr_V_AWLOCK(grp_conv_layer_fu_493_m_axi_ddr_V_AWLOCK),
    .m_axi_ddr_V_AWCACHE(grp_conv_layer_fu_493_m_axi_ddr_V_AWCACHE),
    .m_axi_ddr_V_AWPROT(grp_conv_layer_fu_493_m_axi_ddr_V_AWPROT),
    .m_axi_ddr_V_AWQOS(grp_conv_layer_fu_493_m_axi_ddr_V_AWQOS),
    .m_axi_ddr_V_AWREGION(grp_conv_layer_fu_493_m_axi_ddr_V_AWREGION),
    .m_axi_ddr_V_AWUSER(grp_conv_layer_fu_493_m_axi_ddr_V_AWUSER),
    .m_axi_ddr_V_WVALID(grp_conv_layer_fu_493_m_axi_ddr_V_WVALID),
    .m_axi_ddr_V_WREADY(1'b0),
    .m_axi_ddr_V_WDATA(grp_conv_layer_fu_493_m_axi_ddr_V_WDATA),
    .m_axi_ddr_V_WSTRB(grp_conv_layer_fu_493_m_axi_ddr_V_WSTRB),
    .m_axi_ddr_V_WLAST(grp_conv_layer_fu_493_m_axi_ddr_V_WLAST),
    .m_axi_ddr_V_WID(grp_conv_layer_fu_493_m_axi_ddr_V_WID),
    .m_axi_ddr_V_WUSER(grp_conv_layer_fu_493_m_axi_ddr_V_WUSER),
    .m_axi_ddr_V_ARVALID(grp_conv_layer_fu_493_m_axi_ddr_V_ARVALID),
    .m_axi_ddr_V_ARREADY(ddr_V_ARREADY),
    .m_axi_ddr_V_ARADDR(grp_conv_layer_fu_493_m_axi_ddr_V_ARADDR),
    .m_axi_ddr_V_ARID(grp_conv_layer_fu_493_m_axi_ddr_V_ARID),
    .m_axi_ddr_V_ARLEN(grp_conv_layer_fu_493_m_axi_ddr_V_ARLEN),
    .m_axi_ddr_V_ARSIZE(grp_conv_layer_fu_493_m_axi_ddr_V_ARSIZE),
    .m_axi_ddr_V_ARBURST(grp_conv_layer_fu_493_m_axi_ddr_V_ARBURST),
    .m_axi_ddr_V_ARLOCK(grp_conv_layer_fu_493_m_axi_ddr_V_ARLOCK),
    .m_axi_ddr_V_ARCACHE(grp_conv_layer_fu_493_m_axi_ddr_V_ARCACHE),
    .m_axi_ddr_V_ARPROT(grp_conv_layer_fu_493_m_axi_ddr_V_ARPROT),
    .m_axi_ddr_V_ARQOS(grp_conv_layer_fu_493_m_axi_ddr_V_ARQOS),
    .m_axi_ddr_V_ARREGION(grp_conv_layer_fu_493_m_axi_ddr_V_ARREGION),
    .m_axi_ddr_V_ARUSER(grp_conv_layer_fu_493_m_axi_ddr_V_ARUSER),
    .m_axi_ddr_V_RVALID(ddr_V_RVALID),
    .m_axi_ddr_V_RREADY(grp_conv_layer_fu_493_m_axi_ddr_V_RREADY),
    .m_axi_ddr_V_RDATA(ddr_V_RDATA),
    .m_axi_ddr_V_RLAST(ddr_V_RLAST),
    .m_axi_ddr_V_RID(ddr_V_RID),
    .m_axi_ddr_V_RUSER(ddr_V_RUSER),
    .m_axi_ddr_V_RRESP(ddr_V_RRESP),
    .m_axi_ddr_V_BVALID(1'b0),
    .m_axi_ddr_V_BREADY(grp_conv_layer_fu_493_m_axi_ddr_V_BREADY),
    .m_axi_ddr_V_BRESP(2'd0),
    .m_axi_ddr_V_BID(1'd0),
    .m_axi_ddr_V_BUSER(1'd0),
    .OSIZE(grp_conv_layer_fu_493_OSIZE),
    .TO_r(grp_conv_layer_fu_493_TO_r),
    .TI(grp_conv_layer_fu_493_TI),
    .K(grp_conv_layer_fu_493_K),
    .S(grp_conv_layer_fu_493_S),
    .P(grp_conv_layer_fu_493_P),
    .OFFSET(grp_conv_layer_fu_493_OFFSET)
);

add grp_add_fu_562(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_add_fu_562_ap_start),
    .ap_done(grp_add_fu_562_ap_done),
    .ap_idle(grp_add_fu_562_ap_idle),
    .ap_ready(grp_add_fu_562_ap_ready),
    .input1_V_address0(grp_add_fu_562_input1_V_address0),
    .input1_V_ce0(grp_add_fu_562_input1_V_ce0),
    .input1_V_q0(grp_add_fu_562_input1_V_q0),
    .input2_V_address0(grp_add_fu_562_input2_V_address0),
    .input2_V_ce0(grp_add_fu_562_input2_V_ce0),
    .input2_V_q0(grp_add_fu_562_input2_V_q0),
    .output_V_address1(grp_add_fu_562_output_V_address1),
    .output_V_ce1(grp_add_fu_562_output_V_ce1),
    .output_V_we1(grp_add_fu_562_output_V_we1),
    .output_V_d1(grp_add_fu_562_output_V_d1),
    .OSIZE(grp_add_fu_562_OSIZE),
    .TI(grp_add_fu_562_TI),
    .SCALE1(grp_add_fu_562_SCALE1),
    .SCALE2(grp_add_fu_562_SCALE2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state69) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state69)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state69);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_add_fu_562_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15))) begin
            grp_add_fu_562_ap_start_reg <= 1'b1;
        end else if ((grp_add_fu_562_ap_ready == 1'b1)) begin
            grp_add_fu_562_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_layer_fu_493_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state65))) begin
            grp_conv_layer_fu_493_ap_start_reg <= 1'b1;
        end else if ((grp_conv_layer_fu_493_ap_ready == 1'b1)) begin
            grp_conv_layer_fu_493_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_sel_rd <= 1'b0;
    end else begin
        if (((startt_V_1_ack_out == 1'b1) & (startt_V_1_vld_out == 1'b1))) begin
            startt_V_1_sel_rd <= ~startt_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_sel_wr <= 1'b0;
    end else begin
        if (((startt_V_1_ack_in == 1'b1) & (startt_V_1_vld_in == 1'b1))) begin
            startt_V_1_sel_wr <= ~startt_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        startt_V_1_state <= 2'd0;
    end else begin
        if ((((startt_V_1_vld_in == 1'b0) & (startt_V_1_state == 2'd2)) | ((startt_V_1_vld_in == 1'b0) & (startt_V_1_ack_out == 1'b1) & (startt_V_1_state == 2'd3)))) begin
            startt_V_1_state <= 2'd2;
        end else if ((((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd1)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_vld_in == 1'b1) & (startt_V_1_state == 2'd3)))) begin
            startt_V_1_state <= 2'd1;
        end else if (((~((startt_V_1_vld_in == 1'b0) & (startt_V_1_ack_out == 1'b1)) & ~((startt_V_TREADY == 1'b0) & (startt_V_1_vld_in == 1'b1)) & (startt_V_1_state == 2'd3)) | ((startt_V_1_ack_out == 1'b1) & (startt_V_1_state == 2'd1)) | ((startt_V_1_vld_in == 1'b1) & (startt_V_1_state == 2'd2)))) begin
            startt_V_1_state <= 2'd3;
        end else begin
            startt_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stopt_V_1_ack_out == 1'b1) & (stopt_V_1_vld_out == 1'b1))) begin
            stopt_V_1_sel_rd <= ~stopt_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stopt_V_1_ack_in == 1'b1) & (stopt_V_1_vld_in == 1'b1))) begin
            stopt_V_1_sel_wr <= ~stopt_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stopt_V_1_state <= 2'd0;
    end else begin
        if ((((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_state == 2'd2)) | ((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_ack_out == 1'b1) & (stopt_V_1_state == 2'd3)))) begin
            stopt_V_1_state <= 2'd2;
        end else if ((((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd1)) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_vld_in == 1'b1) & (stopt_V_1_state == 2'd3)))) begin
            stopt_V_1_state <= 2'd1;
        end else if (((~((stopt_V_1_vld_in == 1'b0) & (stopt_V_1_ack_out == 1'b1)) & ~((stopt_V_TREADY == 1'b0) & (stopt_V_1_vld_in == 1'b1)) & (stopt_V_1_state == 2'd3)) | ((stopt_V_1_ack_out == 1'b1) & (stopt_V_1_state == 2'd1)) | ((stopt_V_1_vld_in == 1'b1) & (stopt_V_1_state == 2'd2)))) begin
            stopt_V_1_state <= 2'd3;
        end else begin
            stopt_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_sel_rd <= 1'b0;
    end else begin
        if (((sw0in_V_0_ack_out == 1'b1) & (sw0in_V_0_vld_out == 1'b1))) begin
            sw0in_V_0_sel_rd <= ~sw0in_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_sel_wr <= 1'b0;
    end else begin
        if (((sw0in_V_0_ack_in == 1'b1) & (sw0in_V_0_vld_in == 1'b1))) begin
            sw0in_V_0_sel_wr <= ~sw0in_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0in_V_0_state <= 2'd0;
    end else begin
        if ((((sw0in_V_0_vld_in == 1'b0) & (sw0in_V_0_state == 2'd2)) | ((sw0in_V_0_vld_in == 1'b0) & (sw0in_V_0_ack_out == 1'b1) & (sw0in_V_0_state == 2'd3)))) begin
            sw0in_V_0_state <= 2'd2;
        end else if ((((sw0in_V_0_ack_out == 1'b0) & (sw0in_V_0_state == 2'd1)) | ((sw0in_V_0_ack_out == 1'b0) & (sw0in_V_0_vld_in == 1'b1) & (sw0in_V_0_state == 2'd3)))) begin
            sw0in_V_0_state <= 2'd1;
        end else if (((~((sw0in_V_0_vld_in == 1'b0) & (sw0in_V_0_ack_out == 1'b1)) & ~((sw0in_V_0_ack_out == 1'b0) & (sw0in_V_0_vld_in == 1'b1)) & (sw0in_V_0_state == 2'd3)) | ((sw0in_V_0_ack_out == 1'b1) & (sw0in_V_0_state == 2'd1)) | ((sw0in_V_0_vld_in == 1'b1) & (sw0in_V_0_state == 2'd2)))) begin
            sw0in_V_0_state <= 2'd3;
        end else begin
            sw0in_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_vld_out == 1'b1))) begin
            sw0out_V_1_sel_rd <= ~sw0out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((sw0out_V_1_ack_in == 1'b1) & (sw0out_V_1_vld_in == 1'b1))) begin
            sw0out_V_1_sel_wr <= ~sw0out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sw0out_V_1_state <= 2'd0;
    end else begin
        if ((((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_state == 2'd2)) | ((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_state == 2'd3)))) begin
            sw0out_V_1_state <= 2'd2;
        end else if ((((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd1)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_vld_in == 1'b1) & (sw0out_V_1_state == 2'd3)))) begin
            sw0out_V_1_state <= 2'd1;
        end else if (((~((sw0out_V_1_vld_in == 1'b0) & (sw0out_V_1_ack_out == 1'b1)) & ~((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_vld_in == 1'b1)) & (sw0out_V_1_state == 2'd3)) | ((sw0out_V_1_ack_out == 1'b1) & (sw0out_V_1_state == 2'd1)) | ((sw0out_V_1_vld_in == 1'b1) & (sw0out_V_1_state == 2'd2)))) begin
            sw0out_V_1_state <= 2'd3;
        end else begin
            sw0out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln306_fu_976_p2 == 1'd0))) begin
        i1_0_reg_449 <= i_fu_982_p2;
    end else if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_449 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_fu_993_p2 == 1'd0))) begin
        i3_0_reg_482 <= i_1_fu_1042_p2;
    end else if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        i3_0_reg_482 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_fu_993_p2 == 1'd0))) begin
        indvar_flatten_reg_460 <= add_ln351_fu_999_p2;
    end else if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        indvar_flatten_reg_460 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (sw0in_V_0_vld_out == 1'b1))) begin
        l_0_reg_437 <= l_reg_2536;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l_0_reg_437 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_reg_2646 == 1'd0))) begin
        s_0_reg_471 <= select_ln357_1_reg_2655;
    end else if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        s_0_reg_471 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln351_reg_2646 <= icmp_ln351_fu_993_p2;
        icmp_ln351_reg_2646_pp2_iter1_reg <= icmp_ln351_reg_2646;
    end
end

always @ (posedge ap_clk) begin
    if ((~((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2))) begin
        l_reg_2536 <= l_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_reg_2646 == 1'd0))) begin
        p_0114_1_fu_356 <= p_Result_22_s_fu_2496_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((~((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln291_fu_755_p2 == 1'd0))) begin
        p_Result_0_10_reg_2596 <= {{sw0in_V_0_data_out[95:88]}};
        p_Result_0_11_reg_2601 <= {{sw0in_V_0_data_out[103:96]}};
        p_Result_0_12_reg_2606 <= {{sw0in_V_0_data_out[111:104]}};
        p_Result_0_13_reg_2611 <= {{sw0in_V_0_data_out[119:112]}};
        p_Result_0_14_reg_2616 <= {{sw0in_V_0_data_out[127:120]}};
        p_Result_0_1_reg_2546 <= {{sw0in_V_0_data_out[15:8]}};
        p_Result_0_2_reg_2551 <= {{sw0in_V_0_data_out[23:16]}};
        p_Result_0_3_reg_2556 <= {{sw0in_V_0_data_out[31:24]}};
        p_Result_0_4_reg_2561 <= {{sw0in_V_0_data_out[39:32]}};
        p_Result_0_5_reg_2566 <= {{sw0in_V_0_data_out[47:40]}};
        p_Result_0_6_reg_2571 <= {{sw0in_V_0_data_out[55:48]}};
        p_Result_0_7_reg_2576 <= {{sw0in_V_0_data_out[63:56]}};
        p_Result_0_8_reg_2581 <= {{sw0in_V_0_data_out[71:64]}};
        p_Result_0_9_reg_2586 <= {{sw0in_V_0_data_out[79:72]}};
        p_Result_0_s_reg_2591 <= {{sw0in_V_0_data_out[87:80]}};
        trunc_ln647_reg_2541 <= trunc_ln647_fu_767_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_fu_993_p2 == 1'd0))) begin
        select_ln357_1_reg_2655 <= select_ln357_1_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((startt_V_1_load_A == 1'b1)) begin
        startt_V_1_payload_A <= zext_ln321_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((startt_V_1_load_B == 1'b1)) begin
        startt_V_1_payload_B <= zext_ln321_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((stopt_V_1_load_A == 1'b1)) begin
        stopt_V_1_payload_A <= zext_ln321_1_fu_2528_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((stopt_V_1_load_B == 1'b1)) begin
        stopt_V_1_payload_B <= zext_ln321_1_fu_2528_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0in_V_0_load_A == 1'b1)) begin
        sw0in_V_0_payload_A <= sw0in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0in_V_0_load_B == 1'b1)) begin
        sw0in_V_0_payload_B <= sw0in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0out_V_1_load_A == 1'b1)) begin
        sw0out_V_1_payload_A <= zext_ln332_fu_2508_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((sw0out_V_1_load_B == 1'b1)) begin
        sw0out_V_1_payload_B <= zext_ln332_fu_2508_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_fu_993_p2 == 1'd0))) begin
        trunc_ln214_reg_2660 <= trunc_ln214_fu_1038_p1;
    end
end

always @ (*) begin
    if ((icmp_ln306_fu_976_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln351_fu_993_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state69 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state69 = 1'b0;
    end
end

always @ (*) begin
    if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state74))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_reg_2646 == 1'd0))) begin
        ap_phi_mux_s_0_phi_fu_475_p4 = select_ln357_1_reg_2655;
    end else begin
        ap_phi_mux_s_0_phi_fu_475_p4 = s_0_reg_471;
    end
end

always @ (*) begin
    if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state74))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        buf0_V_address0 = 15'd6271;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf0_V_address0 = zext_ln357_fu_1033_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        buf0_V_address0 = grp_add_fu_562_input2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf0_V_address0 = grp_add_fu_562_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        buf0_V_address0 = grp_conv_layer_fu_493_input_V_address0;
    end else begin
        buf0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        buf0_V_address1 = grp_add_fu_562_output_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        buf0_V_address1 = grp_conv_layer_fu_493_output_V_address1;
    end else begin
        buf0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        buf0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        buf0_V_ce0 = grp_add_fu_562_input2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf0_V_ce0 = grp_add_fu_562_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        buf0_V_ce0 = grp_conv_layer_fu_493_input_V_ce0;
    end else begin
        buf0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        buf0_V_ce1 = grp_add_fu_562_output_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        buf0_V_ce1 = grp_conv_layer_fu_493_output_V_ce1;
    end else begin
        buf0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        buf0_V_d1 = grp_add_fu_562_output_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        buf0_V_d1 = grp_conv_layer_fu_493_output_V_d1;
    end else begin
        buf0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        buf0_V_we1 = grp_add_fu_562_output_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        buf0_V_we1 = grp_conv_layer_fu_493_output_V_we1;
    end else begin
        buf0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        buf1_V_address0 = grp_add_fu_562_input2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state26))) begin
        buf1_V_address0 = grp_add_fu_562_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12))) begin
        buf1_V_address0 = grp_conv_layer_fu_493_input_V_address0;
    end else begin
        buf1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        buf1_V_ce0 = grp_add_fu_562_input2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state26))) begin
        buf1_V_ce0 = grp_add_fu_562_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12))) begin
        buf1_V_ce0 = grp_conv_layer_fu_493_input_V_ce0;
    end else begin
        buf1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        buf1_V_ce1 = grp_conv_layer_fu_493_output_V_ce1;
    end else begin
        buf1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        buf1_V_we1 = grp_conv_layer_fu_493_output_V_we1;
    end else begin
        buf1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf2_V_address0 = 15'd25087;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buf2_V_address0 = grp_add_fu_562_input2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state16))) begin
        buf2_V_address0 = grp_add_fu_562_input1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10))) begin
        buf2_V_address0 = grp_conv_layer_fu_493_input_V_address0;
    end else begin
        buf2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf2_V_address1 = zext_ln299_fu_771_p1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf2_V_address1 = grp_add_fu_562_output_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        buf2_V_address1 = grp_conv_layer_fu_493_output_V_address1;
    end else begin
        buf2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buf2_V_ce0 = grp_add_fu_562_input2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state16))) begin
        buf2_V_ce0 = grp_add_fu_562_input1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10))) begin
        buf2_V_ce0 = grp_conv_layer_fu_493_input_V_ce0;
    end else begin
        buf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (sw0in_V_0_vld_out == 1'b1))) begin
        buf2_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf2_V_ce1 = grp_add_fu_562_output_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        buf2_V_ce1 = grp_conv_layer_fu_493_output_V_ce1;
    end else begin
        buf2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buf2_V_d1 = zext_ln180_fu_956_p1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf2_V_d1 = grp_add_fu_562_output_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        buf2_V_d1 = grp_conv_layer_fu_493_output_V_d1;
    end else begin
        buf2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (sw0in_V_0_vld_out == 1'b1))) begin
        buf2_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        buf2_V_we1 = grp_add_fu_562_output_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        buf2_V_we1 = grp_conv_layer_fu_493_output_V_we1;
    end else begin
        buf2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state65))) begin
        ddr_V_ARVALID = grp_conv_layer_fu_493_m_axi_ddr_V_ARVALID;
    end else begin
        ddr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state65))) begin
        ddr_V_RREADY = grp_conv_layer_fu_493_m_axi_ddr_V_RREADY;
    end else begin
        ddr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_add_fu_562_OSIZE = 7'd14;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_add_fu_562_OSIZE = 7'd28;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_add_fu_562_OSIZE = 7'd56;
    end else begin
        grp_add_fu_562_OSIZE = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_add_fu_562_SCALE1 = 32'd1062885331;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_add_fu_562_SCALE1 = 32'd1060077825;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_add_fu_562_SCALE1 = 32'd1065930240;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_add_fu_562_SCALE1 = 32'd1066277557;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_add_fu_562_SCALE1 = 32'd1064440825;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_add_fu_562_SCALE1 = 32'd1061177564;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_add_fu_562_SCALE1 = 32'd1062054581;
    end else begin
        grp_add_fu_562_SCALE1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_add_fu_562_SCALE2 = 32'd1064656021;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_add_fu_562_SCALE2 = 32'd1063349125;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_add_fu_562_SCALE2 = 32'd1059629907;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_add_fu_562_SCALE2 = 32'd1060041981;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_add_fu_562_SCALE2 = 32'd1065369838;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_add_fu_562_SCALE2 = 32'd1062344549;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_add_fu_562_SCALE2 = 32'd1062436248;
    end else begin
        grp_add_fu_562_SCALE2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_add_fu_562_TI = 7'd32;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_add_fu_562_TI = 7'd16;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_add_fu_562_TI = 7'd8;
    end else begin
        grp_add_fu_562_TI = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_add_fu_562_input1_V_q0 = buf0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_add_fu_562_input1_V_q0 = buf1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_add_fu_562_input1_V_q0 = buf2_V_q0;
    end else begin
        grp_add_fu_562_input1_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_add_fu_562_input2_V_q0 = buf0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_add_fu_562_input2_V_q0 = buf2_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_add_fu_562_input2_V_q0 = buf1_V_q0;
    end else begin
        grp_add_fu_562_input2_V_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_conv_layer_fu_493_K = 4'd3;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_K = 4'd1;
    end else begin
        grp_conv_layer_fu_493_K = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd3697664;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd3105792;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd2841600;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd2571264;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1979392;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1846272;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1313792;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1244160;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1095680;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd1029120;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd959488;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd811008;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd744448;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd674816;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd526336;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd459776;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd390144;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd241664;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd207872;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd72704;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd54272;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd16896;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_conv_layer_fu_493_OFFSET = 23'd0;
    end else begin
        grp_conv_layer_fu_493_OFFSET = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_conv_layer_fu_493_OSIZE = 7'd14;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_conv_layer_fu_493_OSIZE = 7'd28;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_OSIZE = 7'd56;
    end else begin
        grp_conv_layer_fu_493_OSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_conv_layer_fu_493_P = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_P = 1'd0;
    end else begin
        grp_conv_layer_fu_493_P = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_conv_layer_fu_493_S = 4'd2;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_S = 4'd1;
    end else begin
        grp_conv_layer_fu_493_S = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_conv_layer_fu_493_TI = 7'd32;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_conv_layer_fu_493_TI = 7'd16;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_conv_layer_fu_493_TI = 7'd4;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_conv_layer_fu_493_TI = 7'd2;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_TI = 7'd8;
    end else begin
        grp_conv_layer_fu_493_TI = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_conv_layer_fu_493_TO_r = 6'd16;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_conv_layer_fu_493_TO_r = 6'd2;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_conv_layer_fu_493_TO_r = 6'd8;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_conv_layer_fu_493_TO_r = 6'd4;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_TO_r = 6'd1;
    end else begin
        grp_conv_layer_fu_493_TO_r = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_conv_layer_fu_493_input_V_q0 = buf0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_conv_layer_fu_493_input_V_q0 = buf1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_conv_layer_fu_493_input_V_q0 = buf2_V_q0;
    end else begin
        grp_conv_layer_fu_493_input_V_q0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        outbuf_V_address1 = zext_ln309_fu_988_p1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_V_address1 = grp_conv_layer_fu_493_outbuf_V_4_address1;
    end else begin
        outbuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_V_ce0 = grp_conv_layer_fu_493_outbuf_V_4_ce0;
    end else begin
        outbuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        outbuf_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_V_ce1 = grp_conv_layer_fu_493_outbuf_V_4_ce1;
    end else begin
        outbuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        outbuf_V_d1 = 1536'd0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_V_d1 = grp_conv_layer_fu_493_outbuf_V_4_d1;
    end else begin
        outbuf_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln306_fu_976_p2 == 1'd0))) begin
        outbuf_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        outbuf_V_we1 = grp_conv_layer_fu_493_outbuf_V_4_we1;
    end else begin
        outbuf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((startt_V_1_sel == 1'b1)) begin
        startt_V_1_data_out = startt_V_1_payload_B;
    end else begin
        startt_V_1_data_out = startt_V_1_payload_A;
    end
end

always @ (*) begin
    if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        startt_V_1_vld_in = 1'b1;
    end else begin
        startt_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        startt_V_TDATA_blk_n = startt_V_1_state[1'd1];
    end else begin
        startt_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((stopt_V_1_sel == 1'b1)) begin
        stopt_V_1_data_out = stopt_V_1_payload_B;
    end else begin
        stopt_V_1_data_out = stopt_V_1_payload_A;
    end
end

always @ (*) begin
    if (((stopt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
        stopt_V_1_vld_in = 1'b1;
    end else begin
        stopt_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        stopt_V_TDATA_blk_n = stopt_V_1_state[1'd1];
    end else begin
        stopt_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (sw0in_V_0_vld_out == 1'b1)) | (~((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln291_fu_755_p2 == 1'd0)))) begin
        sw0in_V_0_ack_out = 1'b1;
    end else begin
        sw0in_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((sw0in_V_0_sel == 1'b1)) begin
        sw0in_V_0_data_out = sw0in_V_0_payload_B;
    end else begin
        sw0in_V_0_data_out = sw0in_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln291_fu_755_p2 == 1'd0)))) begin
        sw0in_V_TDATA_blk_n = sw0in_V_0_state[1'd0];
    end else begin
        sw0in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((sw0out_V_1_sel == 1'b1)) begin
        sw0out_V_1_data_out = sw0out_V_1_payload_B;
    end else begin
        sw0out_V_1_data_out = sw0out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_reg_2646 == 1'd0))) begin
        sw0out_V_1_vld_in = 1'b1;
    end else begin
        sw0out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln351_reg_2646_pp2_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln351_reg_2646 == 1'd0)))) begin
        sw0out_V_TDATA_blk_n = sw0out_V_1_state[1'd1];
    end else begin
        sw0out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln291_fu_755_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln291_fu_755_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (sw0in_V_0_vld_out == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((startt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln306_fu_976_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln306_fu_976_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((grp_conv_layer_fu_493_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((grp_add_fu_562_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln351_fu_993_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln351_fu_993_p2 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((stopt_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            if ((~((stopt_V_1_ack_in == 1'b0) | (stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln351_1_fu_1019_p2 = (ap_phi_mux_s_0_phi_fu_475_p4 + 13'd1);

assign add_ln351_fu_999_p2 = (indvar_flatten_reg_460 + 14'd1);

assign and_ln214_1_fu_1312_p2 = (lshr_ln214_3_fu_1306_p2 & lshr_ln214_2_fu_1300_p2);

assign and_ln214_2_fu_1440_p2 = (lshr_ln214_5_fu_1434_p2 & lshr_ln214_4_fu_1428_p2);

assign and_ln214_3_fu_1614_p2 = (lshr_ln214_8_fu_1608_p2 & lshr_ln214_7_fu_1602_p2);

assign and_ln214_4_fu_1760_p2 = (lshr_ln214_9_fu_1748_p2 & lshr_ln214_10_fu_1754_p2);

assign and_ln214_5_fu_1888_p2 = (lshr_ln214_12_fu_1882_p2 & lshr_ln214_11_fu_1876_p2);

assign and_ln214_6_fu_2070_p2 = (lshr_ln214_15_fu_2064_p2 & lshr_ln214_14_fu_2058_p2);

assign and_ln214_7_fu_2330_p2 = (lshr_ln214_20_fu_2324_p2 & lshr_ln214_19_fu_2318_p2);

assign and_ln214_fu_1166_p2 = (lshr_ln214_fu_1154_p2 & lshr_ln214_1_fu_1160_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b1 == ap_block_state70_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state71_io) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b1 == ap_block_state70_io) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2 = ((sw0in_V_0_vld_out == 1'b0) & (icmp_ln291_fu_755_p2 == 1'd0));
end

assign ap_block_state69_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_io = ((sw0out_V_1_ack_in == 1'b0) & (icmp_ln351_reg_2646 == 1'd0));
end

assign ap_block_state70_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state71_io = ((sw0out_V_1_ack_in == 1'b0) & (icmp_ln351_reg_2646_pp2_iter1_reg == 1'd0));
end

assign ap_block_state71_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state74 = ((stopt_V_1_state == 2'd1) | (startt_V_1_state == 2'd1) | (sw0out_V_1_state == 2'd1) | ((stopt_V_TREADY == 1'b0) & (stopt_V_1_state == 2'd3)) | ((startt_V_TREADY == 1'b0) & (startt_V_1_state == 2'd3)) | ((sw0out_V_TREADY == 1'b0) & (sw0out_V_1_state == 2'd3)));
end

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_30_fu_1068_p2 = (tmp_358_fu_1058_p5 | 8'd8);

assign empty_31_fu_1182_p2 = (shl_ln_fu_1051_p3 | 5'd9);

assign empty_32_fu_1214_p2 = (p_cast252_fu_1210_p1 + 9'd8);

assign empty_33_fu_1344_p2 = (zext_ln214_2_cast250_fu_1328_p1 + p_shl207_cast_fu_1340_p1);

assign empty_34_fu_1350_p2 = (empty_33_fu_1344_p2 | 9'd8);

assign empty_35_fu_1472_p2 = (zext_ln214_3_cast247_fu_1456_p1 + p_shl206_cast_fu_1468_p1);

assign empty_36_fu_1516_p2 = (tmp_362_fu_1508_p3 | 8'd8);

assign empty_37_fu_1630_p2 = (shl_ln_fu_1051_p3 | 5'd13);

assign empty_38_fu_1654_p1 = tmp_364_fu_1646_p3;

assign empty_39_fu_1662_p2 = (empty_38_fu_1654_p1 + 9'd8);

assign empty_40_fu_1792_p2 = (zext_ln214_6_cast238_fu_1776_p1 + p_shl203_cast_fu_1788_p1);

assign empty_41_fu_1798_p2 = (empty_40_fu_1792_p2 | 9'd8);

assign empty_42_fu_1920_p2 = (zext_ln214_7_cast235_fu_1904_p1 + p_shl202_cast_fu_1916_p1);

assign empty_43_fu_1964_p1 = tmp_366_fu_1956_p3;

assign empty_44_fu_1972_p2 = (empty_43_fu_1964_p1 + 9'd8);

assign empty_45_fu_2096_p2 = (zext_ln214_9_cast229_fu_2080_p1 + p_shl200_cast_fu_2092_p1);

assign empty_46_fu_2138_p2 = (zext_ln214_10_cast22_fu_2122_p1 + p_shl199_cast_fu_2134_p1);

assign empty_47_fu_2180_p2 = (zext_ln214_11_cast22_fu_2164_p1 + p_shl198_cast_fu_2176_p1);

assign empty_48_fu_2224_p1 = tmp_368_fu_2216_p3;

assign empty_49_fu_2232_p2 = (empty_48_fu_2224_p1 + 9'd8);

assign empty_50_fu_2356_p2 = (zext_ln214_13_cast21_fu_2340_p1 + p_shl196_cast_fu_2352_p1);

assign empty_51_fu_2398_p2 = (zext_ln214_14_cast21_fu_2382_p1 + p_shl195_cast_fu_2394_p1);

assign empty_52_fu_2440_p2 = (zext_ln214_15_cast21_fu_2424_p1 + p_shl_cast_fu_2436_p1);

assign grp_add_fu_562_ap_start = grp_add_fu_562_ap_start_reg;

assign grp_conv_layer_fu_493_ap_start = grp_conv_layer_fu_493_ap_start_reg;

assign grp_fu_605_p4 = {{sw0in_V_0_data_out[15:8]}};

assign grp_fu_615_p4 = {{sw0in_V_0_data_out[23:16]}};

assign grp_fu_625_p4 = {{sw0in_V_0_data_out[31:24]}};

assign grp_fu_635_p4 = {{sw0in_V_0_data_out[39:32]}};

assign grp_fu_645_p4 = {{sw0in_V_0_data_out[47:40]}};

assign grp_fu_655_p4 = {{sw0in_V_0_data_out[55:48]}};

assign grp_fu_665_p4 = {{sw0in_V_0_data_out[63:56]}};

assign grp_fu_675_p4 = {{sw0in_V_0_data_out[71:64]}};

assign grp_fu_685_p4 = {{sw0in_V_0_data_out[79:72]}};

assign grp_fu_695_p4 = {{sw0in_V_0_data_out[87:80]}};

assign grp_fu_705_p4 = {{sw0in_V_0_data_out[95:88]}};

assign grp_fu_715_p4 = {{sw0in_V_0_data_out[103:96]}};

assign grp_fu_725_p4 = {{sw0in_V_0_data_out[111:104]}};

assign grp_fu_735_p4 = {{sw0in_V_0_data_out[119:112]}};

assign grp_fu_745_p4 = {{sw0in_V_0_data_out[127:120]}};

assign i_1_fu_1042_p2 = (select_ln357_fu_1011_p3 + 2'd1);

assign i_fu_982_p2 = (i1_0_reg_449 + 14'd1);

assign icmp_ln214_1_fu_1224_p2 = ((p_cast253_fu_1206_p1 > p_cast251_fu_1220_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_2_fu_1356_p2 = ((empty_33_fu_1344_p2 > empty_34_fu_1350_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_3_fu_1522_p2 = ((tmp_362_fu_1508_p3 > empty_36_fu_1516_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_4_fu_1672_p2 = ((p_cast240_fu_1658_p1 > p_cast239_fu_1668_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_5_fu_1804_p2 = ((empty_40_fu_1792_p2 > empty_41_fu_1798_p2) ? 1'b1 : 1'b0);

assign icmp_ln214_6_fu_1982_p2 = ((p_cast231_fu_1968_p1 > p_cast230_fu_1978_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_7_fu_2242_p2 = ((p_cast219_fu_2228_p1 > p_cast218_fu_2238_p1) ? 1'b1 : 1'b0);

assign icmp_ln214_fu_1074_p2 = ((tmp_358_fu_1058_p5 > empty_30_fu_1068_p2) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_755_p2 = ((l_0_reg_437 == 15'd25088) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_976_p2 = ((i1_0_reg_449 == 14'd12544) ? 1'b1 : 1'b0);

assign icmp_ln351_fu_993_p2 = ((indvar_flatten_reg_460 == 14'd12544) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_1005_p2 = ((i3_0_reg_482 == 2'd2) ? 1'b1 : 1'b0);

assign l_fu_761_p2 = (l_0_reg_437 + 15'd1);

assign lshr_ln214_10_fu_1754_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_16_fu_1744_p1;

assign lshr_ln214_11_fu_1876_p2 = select_ln214_16_fu_1846_p3 >> zext_ln214_17_fu_1868_p1;

assign lshr_ln214_12_fu_1882_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_18_fu_1872_p1;

assign lshr_ln214_13_fu_1930_p2 = buf0_V_q0 >> zext_ln214_19_fu_1926_p1;

assign lshr_ln214_14_fu_2058_p2 = select_ln214_19_fu_2028_p3 >> zext_ln214_21_fu_2050_p1;

assign lshr_ln214_15_fu_2064_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_22_fu_2054_p1;

assign lshr_ln214_16_fu_2106_p2 = buf0_V_q0 >> zext_ln214_23_fu_2102_p1;

assign lshr_ln214_17_fu_2148_p2 = buf0_V_q0 >> zext_ln214_24_fu_2144_p1;

assign lshr_ln214_18_fu_2190_p2 = buf0_V_q0 >> zext_ln214_25_fu_2186_p1;

assign lshr_ln214_19_fu_2318_p2 = select_ln214_22_fu_2288_p3 >> zext_ln214_27_fu_2310_p1;

assign lshr_ln214_1_fu_1160_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_3_fu_1150_p1;

assign lshr_ln214_20_fu_2324_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_28_fu_2314_p1;

assign lshr_ln214_21_fu_2366_p2 = buf0_V_q0 >> zext_ln214_29_fu_2362_p1;

assign lshr_ln214_22_fu_2408_p2 = buf0_V_q0 >> zext_ln214_30_fu_2404_p1;

assign lshr_ln214_23_fu_2450_p2 = buf0_V_q0 >> zext_ln214_31_fu_2446_p1;

assign lshr_ln214_2_fu_1300_p2 = select_ln214_4_fu_1270_p3 >> zext_ln214_5_fu_1292_p1;

assign lshr_ln214_3_fu_1306_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_6_fu_1296_p1;

assign lshr_ln214_4_fu_1428_p2 = select_ln214_7_fu_1398_p3 >> zext_ln214_7_fu_1420_p1;

assign lshr_ln214_5_fu_1434_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_8_fu_1424_p1;

assign lshr_ln214_6_fu_1482_p2 = buf0_V_q0 >> zext_ln214_9_fu_1478_p1;

assign lshr_ln214_7_fu_1602_p2 = select_ln214_10_fu_1572_p3 >> zext_ln214_12_fu_1594_p1;

assign lshr_ln214_8_fu_1608_p2 = 288'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533055 >> zext_ln214_13_fu_1598_p1;

assign lshr_ln214_9_fu_1748_p2 = select_ln214_13_fu_1718_p3 >> zext_ln214_15_fu_1740_p1;

assign lshr_ln214_fu_1154_p2 = select_ln214_1_fu_1124_p3 >> zext_ln214_2_fu_1146_p1;

assign or_ln214_10_fu_2200_p2 = (shl_ln_fu_1051_p3 | 5'd12);

assign or_ln214_11_fu_2376_p2 = (shl_ln_fu_1051_p3 | 5'd14);

assign or_ln214_12_fu_2418_p2 = (shl_ln_fu_1051_p3 | 5'd15);

assign or_ln214_1_fu_1322_p2 = (shl_ln_fu_1051_p3 | 5'd2);

assign or_ln214_2_fu_1450_p2 = (shl_ln_fu_1051_p3 | 5'd3);

assign or_ln214_3_fu_1492_p2 = (shl_ln_fu_1051_p3 | 5'd4);

assign or_ln214_4_fu_1624_p2 = (shl_ln_fu_1051_p3 | 5'd5);

assign or_ln214_5_fu_1770_p2 = (shl_ln_fu_1051_p3 | 5'd6);

assign or_ln214_6_fu_1898_p2 = (shl_ln_fu_1051_p3 | 5'd7);

assign or_ln214_7_fu_1940_p2 = (shl_ln_fu_1051_p3 | 5'd8);

assign or_ln214_8_fu_2116_p2 = (shl_ln_fu_1051_p3 | 5'd10);

assign or_ln214_9_fu_2158_p2 = (shl_ln_fu_1051_p3 | 5'd11);

assign or_ln214_fu_1176_p2 = (shl_ln_fu_1051_p3 | 5'd1);

assign p_Result_22_s_fu_2496_p5 = {{p_0114_1_fu_356[168:128]}, {tmp_369_fu_2460_p17}};

assign p_cast218_fu_2238_p1 = empty_49_fu_2232_p2;

assign p_cast219_fu_2228_p1 = tmp_368_fu_2216_p3;

assign p_cast230_fu_1978_p1 = empty_44_fu_1972_p2;

assign p_cast231_fu_1968_p1 = tmp_366_fu_1956_p3;

assign p_cast239_fu_1668_p1 = empty_39_fu_1662_p2;

assign p_cast240_fu_1658_p1 = tmp_364_fu_1646_p3;

assign p_cast251_fu_1220_p1 = empty_32_fu_1214_p2;

assign p_cast252_fu_1210_p1 = tmp_360_fu_1198_p3;

assign p_cast253_fu_1206_p1 = tmp_360_fu_1198_p3;

assign p_shl195_cast_fu_2394_p1 = p_shl9_fu_2386_p3;

assign p_shl196_cast_fu_2352_p1 = p_shl8_fu_2344_p3;

assign p_shl198_cast_fu_2176_p1 = p_shl7_fu_2168_p3;

assign p_shl199_cast_fu_2134_p1 = p_shl6_fu_2126_p3;

assign p_shl1_fu_1332_p3 = {{or_ln214_1_fu_1322_p2}, {3'd0}};

assign p_shl200_cast_fu_2092_p1 = p_shl5_fu_2084_p3;

assign p_shl202_cast_fu_1916_p1 = p_shl4_fu_1908_p3;

assign p_shl203_cast_fu_1788_p1 = p_shl3_fu_1780_p3;

assign p_shl206_cast_fu_1468_p1 = p_shl2_fu_1460_p3;

assign p_shl207_cast_fu_1340_p1 = p_shl1_fu_1332_p3;

assign p_shl2_fu_1460_p3 = {{or_ln214_2_fu_1450_p2}, {3'd0}};

assign p_shl3_fu_1780_p3 = {{or_ln214_5_fu_1770_p2}, {3'd0}};

assign p_shl4_fu_1908_p3 = {{or_ln214_6_fu_1898_p2}, {3'd0}};

assign p_shl5_fu_2084_p3 = {{empty_31_fu_1182_p2}, {3'd0}};

assign p_shl6_fu_2126_p3 = {{or_ln214_8_fu_2116_p2}, {3'd0}};

assign p_shl7_fu_2168_p3 = {{or_ln214_9_fu_2158_p2}, {3'd0}};

assign p_shl8_fu_2344_p3 = {{empty_37_fu_1630_p2}, {3'd0}};

assign p_shl9_fu_2386_p3 = {{or_ln214_11_fu_2376_p2}, {3'd0}};

assign p_shl_cast_fu_2436_p1 = p_shl_fu_2428_p3;

assign p_shl_fu_2428_p3 = {{or_ln214_12_fu_2418_p2}, {3'd0}};

assign select_ln214_10_fu_1572_p3 = ((icmp_ln214_3_fu_1522_p2[0:0] === 1'b1) ? tmp_520_fu_1536_p4 : buf0_V_q0);

assign select_ln214_11_fu_1580_p3 = ((icmp_ln214_3_fu_1522_p2[0:0] === 1'b1) ? sub_ln214_13_fu_1552_p2 : zext_ln214_10_fu_1528_p1);

assign select_ln214_12_fu_1710_p3 = ((icmp_ln214_4_fu_1672_p2[0:0] === 1'b1) ? sub_ln214_16_fu_1692_p2 : sub_ln214_18_fu_1704_p2);

assign select_ln214_13_fu_1718_p3 = ((icmp_ln214_4_fu_1672_p2[0:0] === 1'b1) ? tmp_521_fu_1682_p4 : buf0_V_q0);

assign select_ln214_14_fu_1726_p3 = ((icmp_ln214_4_fu_1672_p2[0:0] === 1'b1) ? sub_ln214_17_fu_1698_p2 : zext_ln214_14_fu_1678_p1);

assign select_ln214_15_fu_1838_p3 = ((icmp_ln214_5_fu_1804_p2[0:0] === 1'b1) ? sub_ln214_20_fu_1820_p2 : sub_ln214_22_fu_1832_p2);

assign select_ln214_16_fu_1846_p3 = ((icmp_ln214_5_fu_1804_p2[0:0] === 1'b1) ? tmp_522_fu_1810_p4 : buf0_V_q0);

assign select_ln214_17_fu_1854_p3 = ((icmp_ln214_5_fu_1804_p2[0:0] === 1'b1) ? sub_ln214_21_fu_1826_p2 : empty_40_fu_1792_p2);

assign select_ln214_18_fu_2020_p3 = ((icmp_ln214_6_fu_1982_p2[0:0] === 1'b1) ? sub_ln214_24_fu_2002_p2 : sub_ln214_26_fu_2014_p2);

assign select_ln214_19_fu_2028_p3 = ((icmp_ln214_6_fu_1982_p2[0:0] === 1'b1) ? tmp_523_fu_1992_p4 : buf0_V_q0);

assign select_ln214_1_fu_1124_p3 = ((icmp_ln214_fu_1074_p2[0:0] === 1'b1) ? tmp_517_fu_1088_p4 : buf0_V_q0);

assign select_ln214_20_fu_2036_p3 = ((icmp_ln214_6_fu_1982_p2[0:0] === 1'b1) ? sub_ln214_25_fu_2008_p2 : zext_ln214_20_fu_1988_p1);

assign select_ln214_21_fu_2280_p3 = ((icmp_ln214_7_fu_2242_p2[0:0] === 1'b1) ? sub_ln214_28_fu_2262_p2 : sub_ln214_30_fu_2274_p2);

assign select_ln214_22_fu_2288_p3 = ((icmp_ln214_7_fu_2242_p2[0:0] === 1'b1) ? tmp_524_fu_2252_p4 : buf0_V_q0);

assign select_ln214_23_fu_2296_p3 = ((icmp_ln214_7_fu_2242_p2[0:0] === 1'b1) ? sub_ln214_29_fu_2268_p2 : zext_ln214_26_fu_2248_p1);

assign select_ln214_2_fu_1132_p3 = ((icmp_ln214_fu_1074_p2[0:0] === 1'b1) ? sub_ln214_1_fu_1104_p2 : zext_ln214_fu_1080_p1);

assign select_ln214_3_fu_1262_p3 = ((icmp_ln214_1_fu_1224_p2[0:0] === 1'b1) ? sub_ln214_4_fu_1244_p2 : sub_ln214_6_fu_1256_p2);

assign select_ln214_4_fu_1270_p3 = ((icmp_ln214_1_fu_1224_p2[0:0] === 1'b1) ? tmp_518_fu_1234_p4 : buf0_V_q0);

assign select_ln214_5_fu_1278_p3 = ((icmp_ln214_1_fu_1224_p2[0:0] === 1'b1) ? sub_ln214_5_fu_1250_p2 : zext_ln214_4_fu_1230_p1);

assign select_ln214_6_fu_1390_p3 = ((icmp_ln214_2_fu_1356_p2[0:0] === 1'b1) ? sub_ln214_8_fu_1372_p2 : sub_ln214_10_fu_1384_p2);

assign select_ln214_7_fu_1398_p3 = ((icmp_ln214_2_fu_1356_p2[0:0] === 1'b1) ? tmp_519_fu_1362_p4 : buf0_V_q0);

assign select_ln214_8_fu_1406_p3 = ((icmp_ln214_2_fu_1356_p2[0:0] === 1'b1) ? sub_ln214_9_fu_1378_p2 : empty_33_fu_1344_p2);

assign select_ln214_9_fu_1564_p3 = ((icmp_ln214_3_fu_1522_p2[0:0] === 1'b1) ? sub_ln214_12_fu_1546_p2 : sub_ln214_14_fu_1558_p2);

assign select_ln214_fu_1116_p3 = ((icmp_ln214_fu_1074_p2[0:0] === 1'b1) ? sub_ln214_fu_1098_p2 : sub_ln214_2_fu_1110_p2);

assign select_ln357_1_fu_1025_p3 = ((icmp_ln352_fu_1005_p2[0:0] === 1'b1) ? add_ln351_1_fu_1019_p2 : ap_phi_mux_s_0_phi_fu_475_p4);

assign select_ln357_fu_1011_p3 = ((icmp_ln352_fu_1005_p2[0:0] === 1'b1) ? 2'd0 : i3_0_reg_482);

assign shl_ln_fu_1051_p3 = {{trunc_ln214_reg_2660}, {4'd0}};

assign startt_V_1_ack_in = startt_V_1_state[1'd1];

assign startt_V_1_ack_out = startt_V_TREADY;

assign startt_V_1_load_A = (startt_V_1_state_cmp_full & ~startt_V_1_sel_wr);

assign startt_V_1_load_B = (startt_V_1_state_cmp_full & startt_V_1_sel_wr);

assign startt_V_1_sel = startt_V_1_sel_rd;

assign startt_V_1_state_cmp_full = ((startt_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign startt_V_1_vld_out = startt_V_1_state[1'd0];

assign startt_V_TDATA = startt_V_1_data_out;

assign startt_V_TVALID = startt_V_1_state[1'd0];

assign stopt_V_1_ack_in = stopt_V_1_state[1'd1];

assign stopt_V_1_ack_out = stopt_V_TREADY;

assign stopt_V_1_load_A = (stopt_V_1_state_cmp_full & ~stopt_V_1_sel_wr);

assign stopt_V_1_load_B = (stopt_V_1_state_cmp_full & stopt_V_1_sel_wr);

assign stopt_V_1_sel = stopt_V_1_sel_rd;

assign stopt_V_1_state_cmp_full = ((stopt_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stopt_V_1_vld_out = stopt_V_1_state[1'd0];

assign stopt_V_TDATA = stopt_V_1_data_out;

assign stopt_V_TVALID = stopt_V_1_state[1'd0];

assign sub_ln214_10_fu_1384_p2 = (empty_34_fu_1350_p2 - empty_33_fu_1344_p2);

assign sub_ln214_11_fu_1414_p2 = ($signed(9'd287) - $signed(select_ln214_6_fu_1390_p3));

assign sub_ln214_12_fu_1546_p2 = (zext_ln214_10_fu_1528_p1 - zext_ln214_11_fu_1532_p1);

assign sub_ln214_13_fu_1552_p2 = ($signed(9'd287) - $signed(zext_ln214_10_fu_1528_p1));

assign sub_ln214_14_fu_1558_p2 = (zext_ln214_11_fu_1532_p1 - zext_ln214_10_fu_1528_p1);

assign sub_ln214_15_fu_1588_p2 = ($signed(9'd287) - $signed(select_ln214_9_fu_1564_p3));

assign sub_ln214_16_fu_1692_p2 = (zext_ln214_14_fu_1678_p1 - empty_39_fu_1662_p2);

assign sub_ln214_17_fu_1698_p2 = ($signed(9'd287) - $signed(zext_ln214_14_fu_1678_p1));

assign sub_ln214_18_fu_1704_p2 = (empty_39_fu_1662_p2 - zext_ln214_14_fu_1678_p1);

assign sub_ln214_19_fu_1734_p2 = ($signed(9'd287) - $signed(select_ln214_12_fu_1710_p3));

assign sub_ln214_1_fu_1104_p2 = ($signed(9'd287) - $signed(zext_ln214_fu_1080_p1));

assign sub_ln214_20_fu_1820_p2 = (empty_40_fu_1792_p2 - empty_41_fu_1798_p2);

assign sub_ln214_21_fu_1826_p2 = ($signed(9'd287) - $signed(empty_40_fu_1792_p2));

assign sub_ln214_22_fu_1832_p2 = (empty_41_fu_1798_p2 - empty_40_fu_1792_p2);

assign sub_ln214_23_fu_1862_p2 = ($signed(9'd287) - $signed(select_ln214_15_fu_1838_p3));

assign sub_ln214_24_fu_2002_p2 = (zext_ln214_20_fu_1988_p1 - empty_44_fu_1972_p2);

assign sub_ln214_25_fu_2008_p2 = ($signed(9'd287) - $signed(zext_ln214_20_fu_1988_p1));

assign sub_ln214_26_fu_2014_p2 = (empty_44_fu_1972_p2 - zext_ln214_20_fu_1988_p1);

assign sub_ln214_27_fu_2044_p2 = ($signed(9'd287) - $signed(select_ln214_18_fu_2020_p3));

assign sub_ln214_28_fu_2262_p2 = (zext_ln214_26_fu_2248_p1 - empty_49_fu_2232_p2);

assign sub_ln214_29_fu_2268_p2 = ($signed(9'd287) - $signed(zext_ln214_26_fu_2248_p1));

assign sub_ln214_2_fu_1110_p2 = (zext_ln214_1_fu_1084_p1 - zext_ln214_fu_1080_p1);

assign sub_ln214_30_fu_2274_p2 = (empty_49_fu_2232_p2 - zext_ln214_26_fu_2248_p1);

assign sub_ln214_31_fu_2304_p2 = ($signed(9'd287) - $signed(select_ln214_21_fu_2280_p3));

assign sub_ln214_3_fu_1140_p2 = ($signed(9'd287) - $signed(select_ln214_fu_1116_p3));

assign sub_ln214_4_fu_1244_p2 = (zext_ln214_4_fu_1230_p1 - empty_32_fu_1214_p2);

assign sub_ln214_5_fu_1250_p2 = ($signed(9'd287) - $signed(zext_ln214_4_fu_1230_p1));

assign sub_ln214_6_fu_1256_p2 = (empty_32_fu_1214_p2 - zext_ln214_4_fu_1230_p1);

assign sub_ln214_7_fu_1286_p2 = ($signed(9'd287) - $signed(select_ln214_3_fu_1262_p3));

assign sub_ln214_8_fu_1372_p2 = (empty_33_fu_1344_p2 - empty_34_fu_1350_p2);

assign sub_ln214_9_fu_1378_p2 = ($signed(9'd287) - $signed(empty_33_fu_1344_p2));

assign sub_ln214_fu_1098_p2 = (zext_ln214_fu_1080_p1 - zext_ln214_1_fu_1084_p1);

assign sw0in_V_0_ack_in = sw0in_V_0_state[1'd1];

assign sw0in_V_0_load_A = (sw0in_V_0_state_cmp_full & ~sw0in_V_0_sel_wr);

assign sw0in_V_0_load_B = (sw0in_V_0_state_cmp_full & sw0in_V_0_sel_wr);

assign sw0in_V_0_sel = sw0in_V_0_sel_rd;

assign sw0in_V_0_state_cmp_full = ((sw0in_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign sw0in_V_0_vld_in = sw0in_V_TVALID;

assign sw0in_V_0_vld_out = sw0in_V_0_state[1'd0];

assign sw0in_V_TREADY = sw0in_V_0_state[1'd1];

assign sw0out_V_1_ack_in = sw0out_V_1_state[1'd1];

assign sw0out_V_1_ack_out = sw0out_V_TREADY;

assign sw0out_V_1_load_A = (sw0out_V_1_state_cmp_full & ~sw0out_V_1_sel_wr);

assign sw0out_V_1_load_B = (sw0out_V_1_state_cmp_full & sw0out_V_1_sel_wr);

assign sw0out_V_1_sel = sw0out_V_1_sel_rd;

assign sw0out_V_1_state_cmp_full = ((sw0out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign sw0out_V_1_vld_out = sw0out_V_1_state[1'd0];

assign sw0out_V_TDATA = sw0out_V_1_data_out;

assign sw0out_V_TVALID = sw0out_V_1_state[1'd0];

assign tmp_358_fu_1058_p5 = {{{{trunc_ln214_reg_2660}, {2'd0}}, {trunc_ln214_reg_2660}}, {4'd0}};

assign tmp_359_fu_1188_p4 = {{or_ln214_fu_1176_p2[4:2]}};

assign tmp_360_fu_1198_p3 = {{tmp_359_fu_1188_p4}, {empty_31_fu_1182_p2}};

assign tmp_361_fu_1498_p4 = {{or_ln214_3_fu_1492_p2[4:2]}};

assign tmp_362_fu_1508_p3 = {{tmp_361_fu_1498_p4}, {or_ln214_3_fu_1492_p2}};

assign tmp_363_fu_1636_p4 = {{or_ln214_4_fu_1624_p2[4:2]}};

assign tmp_364_fu_1646_p3 = {{tmp_363_fu_1636_p4}, {empty_37_fu_1630_p2}};

assign tmp_365_fu_1946_p4 = {{or_ln214_7_fu_1940_p2[4:2]}};

assign tmp_366_fu_1956_p3 = {{tmp_365_fu_1946_p4}, {or_ln214_7_fu_1940_p2}};

assign tmp_367_fu_2206_p4 = {{or_ln214_10_fu_2200_p2[4:2]}};

assign tmp_368_fu_2216_p3 = {{tmp_367_fu_2206_p4}, {or_ln214_10_fu_2200_p2}};

assign tmp_369_fu_2460_p17 = {{{{{{{{{{{{{{{{trunc_ln214_16_fu_2456_p1}, {trunc_ln214_15_fu_2414_p1}}, {trunc_ln214_14_fu_2372_p1}}, {trunc_ln214_13_fu_2336_p1}}, {trunc_ln214_12_fu_2196_p1}}, {trunc_ln214_11_fu_2154_p1}}, {trunc_ln214_10_fu_2112_p1}}, {trunc_ln214_9_fu_2076_p1}}, {trunc_ln214_8_fu_1936_p1}}, {trunc_ln214_7_fu_1894_p1}}, {trunc_ln214_6_fu_1766_p1}}, {trunc_ln214_5_fu_1620_p1}}, {trunc_ln214_4_fu_1488_p1}}, {trunc_ln214_3_fu_1446_p1}}, {trunc_ln214_2_fu_1318_p1}}, {trunc_ln214_1_fu_1172_p1}};

integer ap_tvar_int_0;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_0 = 288 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 287 - 0) begin
            tmp_517_fu_1088_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_517_fu_1088_p4[ap_tvar_int_0] = buf0_V_q0[287 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_1 = 288 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 287 - 0) begin
            tmp_518_fu_1234_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_518_fu_1234_p4[ap_tvar_int_1] = buf0_V_q0[287 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_2 = 288 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 287 - 0) begin
            tmp_519_fu_1362_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_519_fu_1362_p4[ap_tvar_int_2] = buf0_V_q0[287 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_3 = 288 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 287 - 0) begin
            tmp_520_fu_1536_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_520_fu_1536_p4[ap_tvar_int_3] = buf0_V_q0[287 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_4 = 288 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 287 - 0) begin
            tmp_521_fu_1682_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_521_fu_1682_p4[ap_tvar_int_4] = buf0_V_q0[287 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_5 = 288 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 287 - 0) begin
            tmp_522_fu_1810_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_522_fu_1810_p4[ap_tvar_int_5] = buf0_V_q0[287 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_6 = 288 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 287 - 0) begin
            tmp_523_fu_1992_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_523_fu_1992_p4[ap_tvar_int_6] = buf0_V_q0[287 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (buf0_V_q0) begin
    for (ap_tvar_int_7 = 288 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 287 - 0) begin
            tmp_524_fu_2252_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_524_fu_2252_p4[ap_tvar_int_7] = buf0_V_q0[287 - ap_tvar_int_7];
        end
    end
end

assign tmp_fu_888_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{grp_fu_745_p4}, {zext_ln78_30_fu_884_p1}}, {zext_ln78_29_fu_880_p1}}, {zext_ln78_28_fu_876_p1}}, {zext_ln78_27_fu_872_p1}}, {zext_ln78_26_fu_868_p1}}, {zext_ln78_25_fu_864_p1}}, {zext_ln78_24_fu_860_p1}}, {zext_ln78_23_fu_856_p1}}, {zext_ln78_22_fu_852_p1}}, {zext_ln78_21_fu_848_p1}}, {zext_ln78_20_fu_844_p1}}, {zext_ln78_19_fu_840_p1}}, {zext_ln78_18_fu_836_p1}}, {zext_ln78_17_fu_832_p1}}, {zext_ln78_16_fu_828_p1}}, {zext_ln78_15_fu_821_p1}}, {zext_ln78_14_fu_818_p1}}, {zext_ln78_13_fu_815_p1}}, {zext_ln78_12_fu_812_p1}}, {zext_ln78_11_fu_809_p1}}, {zext_ln78_10_fu_806_p1}}, {zext_ln78_9_fu_803_p1}}, {zext_ln78_8_fu_800_p1}}, {zext_ln78_7_fu_797_p1}}, {zext_ln78_6_fu_794_p1}}, {zext_ln78_5_fu_791_p1}}, {zext_ln78_4_fu_788_p1}}, {zext_ln78_3_fu_785_p1}}, {zext_ln78_2_fu_782_p1}}, {zext_ln78_1_fu_779_p1}}, {zext_ln78_fu_776_p1}};

assign trunc_ln214_10_fu_2112_p1 = lshr_ln214_16_fu_2106_p2[7:0];

assign trunc_ln214_11_fu_2154_p1 = lshr_ln214_17_fu_2148_p2[7:0];

assign trunc_ln214_12_fu_2196_p1 = lshr_ln214_18_fu_2190_p2[7:0];

assign trunc_ln214_13_fu_2336_p1 = and_ln214_7_fu_2330_p2[7:0];

assign trunc_ln214_14_fu_2372_p1 = lshr_ln214_21_fu_2366_p2[7:0];

assign trunc_ln214_15_fu_2414_p1 = lshr_ln214_22_fu_2408_p2[7:0];

assign trunc_ln214_16_fu_2456_p1 = lshr_ln214_23_fu_2450_p2[7:0];

assign trunc_ln214_1_fu_1172_p1 = and_ln214_fu_1166_p2[7:0];

assign trunc_ln214_2_fu_1318_p1 = and_ln214_1_fu_1312_p2[7:0];

assign trunc_ln214_3_fu_1446_p1 = and_ln214_2_fu_1440_p2[7:0];

assign trunc_ln214_4_fu_1488_p1 = lshr_ln214_6_fu_1482_p2[7:0];

assign trunc_ln214_5_fu_1620_p1 = and_ln214_3_fu_1614_p2[7:0];

assign trunc_ln214_6_fu_1766_p1 = and_ln214_4_fu_1760_p2[7:0];

assign trunc_ln214_7_fu_1894_p1 = and_ln214_5_fu_1888_p2[7:0];

assign trunc_ln214_8_fu_1936_p1 = lshr_ln214_13_fu_1930_p2[7:0];

assign trunc_ln214_9_fu_2076_p1 = and_ln214_6_fu_2070_p2[7:0];

assign trunc_ln214_fu_1038_p1 = select_ln357_fu_1011_p3[0:0];

assign trunc_ln296_2_fu_2518_p4 = {{buf0_V_q0[282:279]}};

assign trunc_ln647_1_fu_824_p1 = sw0in_V_0_data_out[7:0];

assign trunc_ln647_fu_767_p1 = sw0in_V_0_data_out[7:0];

assign trunc_ln_fu_961_p4 = {{buf2_V_q0[282:279]}};

assign zext_ln180_fu_956_p1 = tmp_fu_888_p33;

assign zext_ln214_10_cast22_fu_2122_p1 = or_ln214_8_fu_2116_p2;

assign zext_ln214_10_fu_1528_p1 = tmp_362_fu_1508_p3;

assign zext_ln214_11_cast22_fu_2164_p1 = or_ln214_9_fu_2158_p2;

assign zext_ln214_11_fu_1532_p1 = empty_36_fu_1516_p2;

assign zext_ln214_12_fu_1594_p1 = select_ln214_11_fu_1580_p3;

assign zext_ln214_13_cast21_fu_2340_p1 = empty_37_fu_1630_p2;

assign zext_ln214_13_fu_1598_p1 = sub_ln214_15_fu_1588_p2;

assign zext_ln214_14_cast21_fu_2382_p1 = or_ln214_11_fu_2376_p2;

assign zext_ln214_14_fu_1678_p1 = tmp_364_fu_1646_p3;

assign zext_ln214_15_cast21_fu_2424_p1 = or_ln214_12_fu_2418_p2;

assign zext_ln214_15_fu_1740_p1 = select_ln214_14_fu_1726_p3;

assign zext_ln214_16_fu_1744_p1 = sub_ln214_19_fu_1734_p2;

assign zext_ln214_17_fu_1868_p1 = select_ln214_17_fu_1854_p3;

assign zext_ln214_18_fu_1872_p1 = sub_ln214_23_fu_1862_p2;

assign zext_ln214_19_fu_1926_p1 = empty_42_fu_1920_p2;

assign zext_ln214_1_fu_1084_p1 = empty_30_fu_1068_p2;

assign zext_ln214_20_fu_1988_p1 = tmp_366_fu_1956_p3;

assign zext_ln214_21_fu_2050_p1 = select_ln214_20_fu_2036_p3;

assign zext_ln214_22_fu_2054_p1 = sub_ln214_27_fu_2044_p2;

assign zext_ln214_23_fu_2102_p1 = empty_45_fu_2096_p2;

assign zext_ln214_24_fu_2144_p1 = empty_46_fu_2138_p2;

assign zext_ln214_25_fu_2186_p1 = empty_47_fu_2180_p2;

assign zext_ln214_26_fu_2248_p1 = tmp_368_fu_2216_p3;

assign zext_ln214_27_fu_2310_p1 = select_ln214_23_fu_2296_p3;

assign zext_ln214_28_fu_2314_p1 = sub_ln214_31_fu_2304_p2;

assign zext_ln214_29_fu_2362_p1 = empty_50_fu_2356_p2;

assign zext_ln214_2_cast250_fu_1328_p1 = or_ln214_1_fu_1322_p2;

assign zext_ln214_2_fu_1146_p1 = select_ln214_2_fu_1132_p3;

assign zext_ln214_30_fu_2404_p1 = empty_51_fu_2398_p2;

assign zext_ln214_31_fu_2446_p1 = empty_52_fu_2440_p2;

assign zext_ln214_3_cast247_fu_1456_p1 = or_ln214_2_fu_1450_p2;

assign zext_ln214_3_fu_1150_p1 = sub_ln214_3_fu_1140_p2;

assign zext_ln214_4_fu_1230_p1 = tmp_360_fu_1198_p3;

assign zext_ln214_5_fu_1292_p1 = select_ln214_5_fu_1278_p3;

assign zext_ln214_6_cast238_fu_1776_p1 = or_ln214_5_fu_1770_p2;

assign zext_ln214_6_fu_1296_p1 = sub_ln214_7_fu_1286_p2;

assign zext_ln214_7_cast235_fu_1904_p1 = or_ln214_6_fu_1898_p2;

assign zext_ln214_7_fu_1420_p1 = select_ln214_8_fu_1406_p3;

assign zext_ln214_8_fu_1424_p1 = sub_ln214_11_fu_1414_p2;

assign zext_ln214_9_cast229_fu_2080_p1 = empty_31_fu_1182_p2;

assign zext_ln214_9_fu_1478_p1 = empty_35_fu_1472_p2;

assign zext_ln214_fu_1080_p1 = tmp_358_fu_1058_p5;

assign zext_ln299_fu_771_p1 = l_0_reg_437;

assign zext_ln309_fu_988_p1 = i1_0_reg_449;

assign zext_ln321_1_fu_2528_p1 = trunc_ln296_2_fu_2518_p4;

assign zext_ln321_fu_971_p1 = trunc_ln_fu_961_p4;

assign zext_ln332_fu_2508_p1 = p_Result_22_s_fu_2496_p5;

assign zext_ln357_fu_1033_p1 = select_ln357_1_fu_1025_p3;

assign zext_ln78_10_fu_806_p1 = p_Result_0_s_reg_2591;

assign zext_ln78_11_fu_809_p1 = p_Result_0_10_reg_2596;

assign zext_ln78_12_fu_812_p1 = p_Result_0_11_reg_2601;

assign zext_ln78_13_fu_815_p1 = p_Result_0_12_reg_2606;

assign zext_ln78_14_fu_818_p1 = p_Result_0_13_reg_2611;

assign zext_ln78_15_fu_821_p1 = p_Result_0_14_reg_2616;

assign zext_ln78_16_fu_828_p1 = trunc_ln647_1_fu_824_p1;

assign zext_ln78_17_fu_832_p1 = grp_fu_605_p4;

assign zext_ln78_18_fu_836_p1 = grp_fu_615_p4;

assign zext_ln78_19_fu_840_p1 = grp_fu_625_p4;

assign zext_ln78_1_fu_779_p1 = p_Result_0_1_reg_2546;

assign zext_ln78_20_fu_844_p1 = grp_fu_635_p4;

assign zext_ln78_21_fu_848_p1 = grp_fu_645_p4;

assign zext_ln78_22_fu_852_p1 = grp_fu_655_p4;

assign zext_ln78_23_fu_856_p1 = grp_fu_665_p4;

assign zext_ln78_24_fu_860_p1 = grp_fu_675_p4;

assign zext_ln78_25_fu_864_p1 = grp_fu_685_p4;

assign zext_ln78_26_fu_868_p1 = grp_fu_695_p4;

assign zext_ln78_27_fu_872_p1 = grp_fu_705_p4;

assign zext_ln78_28_fu_876_p1 = grp_fu_715_p4;

assign zext_ln78_29_fu_880_p1 = grp_fu_725_p4;

assign zext_ln78_2_fu_782_p1 = p_Result_0_2_reg_2551;

assign zext_ln78_30_fu_884_p1 = grp_fu_735_p4;

assign zext_ln78_3_fu_785_p1 = p_Result_0_3_reg_2556;

assign zext_ln78_4_fu_788_p1 = p_Result_0_4_reg_2561;

assign zext_ln78_5_fu_791_p1 = p_Result_0_5_reg_2566;

assign zext_ln78_6_fu_794_p1 = p_Result_0_6_reg_2571;

assign zext_ln78_7_fu_797_p1 = p_Result_0_7_reg_2576;

assign zext_ln78_8_fu_800_p1 = p_Result_0_8_reg_2581;

assign zext_ln78_9_fu_803_p1 = p_Result_0_9_reg_2586;

assign zext_ln78_fu_776_p1 = trunc_ln647_reg_2541;

endmodule //resnet50_1
